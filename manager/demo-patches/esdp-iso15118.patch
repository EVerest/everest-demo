diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/__init__.py /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/asn1/__init__.py
new file mode 100644
similarity index 100%
rename from iso15118/shared/schemas/__init__.py
rename to iso15118/evcc/asn1/__init__.py
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/asn1/archived/edp_asn1_main.py /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/asn1/archived/edp_asn1_main.py
new file mode 100644
index 0000000..6c77523
--- /dev/null
+++ /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/asn1/archived/edp_asn1_main.py
@@ -0,0 +1,166 @@
+import esdp_asn1
+from pyasn1.type import univ, constraint
+from pyasn1.codec.der.encoder import encode
+from pyasn1.codec.der.decoder import decode
+from hexdump import hexdump
+
+# map extensionID value to class type for decoding
+# IDs 1-6 are based on draft of ISO15118-200
+# IDs > 6 are not defined in the document but are extrapolated from document section headers 
+extension_ID_map = {
+    1: esdp_asn1.ChargingInterface(), 
+    2: esdp_asn1.BasicSignaling(), 
+    3: esdp_asn1.IPv6Socket(),
+    4: esdp_asn1.HighLevelCommunication(), 
+    5: esdp_asn1.EMSPIdentifiers(),
+    6: esdp_asn1.DCChargingLimits(),
+    7: esdp_asn1.ConductiveChargingInterfaceLimitations(),
+    8: esdp_asn1.EVCharacteristics(),
+    9: esdp_asn1.ChargingStationCharacteristics()
+    }
+
+# Decodes top level Extensions object and then each Standard extensions payload and prints to console
+def full_decode(extensions_bin_rep):
+    ext_obj_decode, rest = decode(extensions_bin_rep,asn1Spec=esdp_asn1.Extensions())
+    print("Top level Extensions decode:")
+    print(ext_obj_decode.prettyPrint())
+
+    #print(ext_obj_decode['standardized'][0].prettyPrint())
+
+    print("Individual Std Ext Decode:")
+    for index in range(len(ext_obj_decode['standardized'])):
+        print(ext_obj_decode['standardized'][index].prettyPrint())
+        ext_id = ext_obj_decode['standardized'][index]['extensionID']
+        std_ext_value_decode, rest = decode(ext_obj_decode['standardized'][index]['extensionValue'],asn1Spec=extension_ID_map[ext_id])
+        indent = '\t'
+        print(indent + type(std_ext_value_decode).__name__)
+        print(indent + str(std_ext_value_decode).replace('\n','\n' + indent))
+        print("\n")
+
+
+
+# Initialized Standard extensions with object and extensionID
+chg_interface_ext = esdp_asn1.StandardizedExtension()
+chg_interface_ext['extensionID'] = 1
+basic_signal_ext = esdp_asn1.StandardizedExtension()
+basic_signal_ext['extensionID'] = 2
+ipv6_sock_ext = esdp_asn1.StandardizedExtension()
+ipv6_sock_ext['extensionID'] = 3
+hlc_ext = esdp_asn1.StandardizedExtension()
+hlc_ext['extensionID'] = 4
+emsp_ids_ext = esdp_asn1.StandardizedExtension()
+emsp_ids_ext['extensionID'] = 5
+dc_chg_limits_ext = esdp_asn1.StandardizedExtension()
+dc_chg_limits_ext['extensionID'] = 6
+
+# IDS aren't defined, utilizing section numbers
+con_chg_int_limits_ext = esdp_asn1.StandardizedExtension()
+con_chg_int_limits_ext['extensionID'] = 7
+ev_chars_ext = esdp_asn1.StandardizedExtension()
+ev_chars_ext['extensionID'] = 8
+evse_chars_ext = esdp_asn1.StandardizedExtension()
+evse_chars_ext['extensionID'] = 9
+
+
+### Set sample data for each extension and encode to OctetString ### 
+
+# Charging Interface Extension
+chg_interface = esdp_asn1.ChargingInterface(1)
+chg_interface_ext['extensionValue'] = univ.OctetString(encode(chg_interface))
+
+# Basic Signaling Extension
+basic_signal_proto = esdp_asn1.BasicSignalingProtocol(3) # 'iec61851-23-ED2'
+basic_signal = esdp_asn1.BasicSignaling()
+basic_signal.append(basic_signal_proto)
+basic_signal_ext['extensionValue'] = univ.OctetString(encode(basic_signal))
+
+# IPv6 socket Extension
+
+ipv6_sock = esdp_asn1.IPv6Socket()
+ipv6_sock['ipv6Address'] = univ.OctetString(hexValue="0000000000000000000000000000fe00").subtype(subtypeSpec=constraint.ValueSizeConstraint(16, 16))
+ipv6_sock['tcpPort'] = univ.OctetString(hexValue="00008080").subtype(subtypeSpec=constraint.ValueSizeConstraint(4, 4))
+ipv6_sock_ext['extensionValue'] = univ.OctetString(encode(ipv6_sock))
+
+# HLC Extension
+hlc_seq = esdp_asn1.HighLevelCommunication()
+hlc_tup1 = esdp_asn1.HighLevelCommunicationTuple()
+hlc_tup1['hlcProtocol'] = 1
+sec_prof_tuple = esdp_asn1.SecurityProfileTuple()
+sec_prof_tuple['securityProfile'] = 0
+auth_method = esdp_asn1.AuthorizationMethod(0) # eim
+energy_transfer = esdp_asn1.EnergyTransferMode(0)
+sec_prof_tuple['authorizationMethod'].append(auth_method)
+sec_prof_tuple['energyTransferMode'].append(energy_transfer)
+hlc_tup1['securityProfileTuple'].append(sec_prof_tuple)
+hlc_seq.append(hlc_tup1)
+hlc_ext['extensionValue'] = univ.OctetString(encode(hlc_seq))
+
+# EMSP Identifiers Extension
+emsp_id1 = esdp_asn1.EMSPIdentifier(hexValue="abcde0101") #adding trailing 0, not desireable
+emsp_id2 = esdp_asn1.EMSPIdentifier(hexValue="abcde0202")
+emsp_ids = esdp_asn1.EMSPIdentifiers()
+emsp_ids.extend([emsp_id1,emsp_id2])
+emsp_ids_ext['extensionValue'] = univ.OctetString(encode(emsp_ids))
+
+# DC charging limits Extension
+dc_chg_limits = esdp_asn1.DCChargingLimits()
+dc_chg_limits['maximumVoltage'] = 920
+dc_chg_limits['minimumVoltage'] = 250
+dc_chg_limits_ext['extensionValue'] = univ.OctetString(encode(dc_chg_limits))
+
+# Conductive charging interface limitations Extensions
+conductive_chg_int_limits = esdp_asn1.ConductiveChargingInterfaceLimitations()
+conductive_chg_int_limits['maximumContactorTemperature'] = 80
+con_chg_int_limits_ext['extensionValue'] = univ.OctetString(encode(conductive_chg_int_limits))
+
+# EV Characteristics Extensions
+ev_chars = esdp_asn1.EVCharacteristics()
+ev_chars['vehicleIdentificationNumber'] = univ.OctetString(hexValue='00112233445566778899aabbccddeeff00').subtype(subtypeSpec=constraint.ValueSizeConstraint(17, 17))
+ev_chars['evccSoftwareVersion'] = "v2.5.6_20241031"
+ev_chars_ext['extensionValue'] = univ.OctetString(encode(ev_chars))
+
+# Charging Station Characteristics Extensions
+chg_stn_char = esdp_asn1.ChargingStationCharacteristics()
+chg_stn_char['seccSoftwareVersion'] = "v3.1.0_beta"
+chg_stn_char['evseID'] = univ.OctetString(hexValue='5A0E').subtype(subtypeSpec=constraint.ValueSizeConstraint(1, esdp_asn1.MAX))
+evse_chars_ext['extensionValue'] = univ.OctetString(encode(chg_stn_char))
+
+### Create top level StandardExtensions and Extensions objects ###
+
+std_extensions = esdp_asn1.StandardizedExtensions()
+std_extensions.extend([chg_interface_ext,basic_signal_ext, ipv6_sock_ext, hlc_ext, emsp_ids_ext, dc_chg_limits_ext, con_chg_int_limits_ext, ev_chars_ext, evse_chars_ext])
+#external_extensions = esdp_asn1.ExternalExtensions()
+
+extensions = esdp_asn1.Extensions()
+extensions['standardized'] = std_extensions
+#print(extensions.prettyPrint())
+
+### Encode top level Extensions object, print to string and save to file ###
+bin_rep = encode(extensions)
+
+print("Hexdump of encoded Extensions:")
+hexdump(bin_rep)
+print(bin_rep)
+#full_decode(bin_rep)
+
+# write bytes to file
+with open("esdp_encoded.dat", "wb") as binary_file:
+    # Write bytes to file
+    binary_file.write(bin_rep)
+
+
+#############################################
+#################   Decode  #################
+#############################################
+
+# Decode from bytes string literal
+bin_rep_str = b'0\x81\xd40\x81\xd10\x08\x02\x01\x01\x04\x03\n\x01\x010\n\x02\x01\x02\x04\x050\x03\n\x01\x030\x1f\x02\x01\x03\x04\x1a0\x18\x04\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfe\x00\x04\x04\x00\x00\x80\x800\x1d\x02\x01\x04\x04\x180\x160\x14\n\x01\x010\x0f0\r\n\x01\x000\x03\n\x01\x000\x03\n\x01\x000\x15\x02\x01\x05\x04\x100\x0e\x04\x05\xab\xcd\xe0\x10\x10\x04\x05\xab\xcd\xe0  0\x0f\x02\x01\x06\x04\n0\x08\x02\x02\x03\x98\x02\x02\x00\xfa0\n\x02\x01\x07\x04\x050\x03\x02\x01P0+\x02\x01\x08\x04&0$\x04\x11\x00\x11"3DUfw\x88\x99\xaa\xbb\xcc\xdd\xee\xff\x00\x0c\x0fv2.5.6_202410310\x18\x02\x01\t\x04\x130\x11\x04\x02Z\x0e\x0c\x0bv3.1.0_beta'
+#full_decode(bin_rep_str)
+
+
+# Decode from binary file
+filename = "C:/Users/ewatt/Box/ChargeX Root Folder/INTERNAL FOLDERS ONLY/Communications Task Force - Internal Folder/ESDP/ASN1 C/ASN1C_full_output.ber"
+
+with open(filename, 'rb') as file:
+    binary_data = file.read()
+    full_decode(binary_data)
\ No newline at end of file
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/asn1/archived/esdp_asn1.py /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/asn1/archived/esdp_asn1.py
new file mode 100644
index 0000000..e176970
--- /dev/null
+++ /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/asn1/archived/esdp_asn1.py
@@ -0,0 +1,230 @@
+# Auto-generated by asn1ate v.0.6.1.dev0 from esdp_definitions.asn
+
+# (last modified on 2024-10-30 15:45:03.203826)
+
+
+# ISO15118-200
+from pyasn1.type import univ, char, namedtype, namedval, tag, constraint, useful
+
+MAX = 2^32 -1 # MAX is a defined concept in ASN.1, autogen didn't differentiate as expected to put in the real max value of the parent type (not all parent types have finite maximums defined)
+
+class AuthorizationMethod(univ.Enumerated):
+    pass
+
+
+AuthorizationMethod.namedValues = namedval.NamedValues(
+    ('eim', 0),
+    ('pnc-2', 1),
+    ('pnc-20', 2)
+)
+
+
+class BasicSignalingProtocol(univ.Enumerated):
+    pass
+
+
+BasicSignalingProtocol.namedValues = namedval.NamedValues(
+    ('iec61851-1-ED2', 0),
+    ('iec61851-1-ED3', 1),
+    ('iec61851-23-ED1', 2),
+    ('iec61851-23-ED2', 3)
+)
+
+
+class BasicSignaling(univ.SequenceOf):
+    pass
+
+
+BasicSignaling.componentType = BasicSignalingProtocol()
+BasicSignaling.subtypeSpec=constraint.ValueSizeConstraint(1, MAX)
+
+
+class ChargingInterface(univ.Enumerated):
+    pass
+
+
+ChargingInterface.namedValues = namedval.NamedValues(
+    ('nacs', 0),
+    ('ccs1', 1),
+    ('ccs2', 2),
+    ('chademo', 3),
+    ('chaoji', 4),
+    ('type-1', 5),
+    ('type-2', 6),
+    ('mcs', 7)
+)
+
+
+class ChargingStationCharacteristics(univ.Sequence):
+    pass
+
+
+ChargingStationCharacteristics.componentType = namedtype.NamedTypes(
+    namedtype.OptionalNamedType('evseID', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, MAX))),
+    namedtype.OptionalNamedType('seccSoftwareVersion', char.UTF8String().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, MAX)))
+)
+
+
+class ConductiveChargingInterfaceLimitations(univ.Sequence):
+    pass
+
+
+ConductiveChargingInterfaceLimitations.componentType = namedtype.NamedTypes(
+    namedtype.NamedType('maximumContactorTemperature', univ.Integer())
+)
+
+
+class DCChargingLimits(univ.Sequence):
+    pass
+
+
+DCChargingLimits.componentType = namedtype.NamedTypes(
+    namedtype.NamedType('maximumVoltage', univ.Integer()),
+    namedtype.NamedType('minimumVoltage', univ.Integer())
+)
+
+
+class EMSPIdentifier(univ.OctetString):
+    pass
+
+
+EMSPIdentifier.subtypeSpec = constraint.ValueSizeConstraint(1, MAX)
+
+
+class EMSPIdentifiers(univ.SequenceOf):
+    pass
+
+
+EMSPIdentifiers.componentType = EMSPIdentifier()
+EMSPIdentifiers.subtypeSpec=constraint.ValueSizeConstraint(1, MAX)
+
+
+class EVCharacteristics(univ.Sequence):
+    pass
+
+
+EVCharacteristics.componentType = namedtype.NamedTypes(
+    namedtype.OptionalNamedType('vehicleIdentificationNumber', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(17, 17))),
+    namedtype.OptionalNamedType('evccSoftwareVersion', char.UTF8String().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, MAX)))
+)
+
+
+class EnergyTransferMode(univ.Enumerated):
+    pass
+
+
+EnergyTransferMode.namedValues = namedval.NamedValues(
+    ('dc', 0),
+    ('dc-bpt', 1),
+    ('ac', 2),
+    ('ac-bpt', 3)
+)
+
+
+class ExternalExtension(univ.Sequence):
+    pass
+
+
+ExternalExtension.componentType = namedtype.NamedTypes(
+    namedtype.NamedType('externalExtensionID', univ.ObjectIdentifier()),
+    namedtype.DefaultedNamedType('critical', univ.Boolean().subtype(value=1)),
+    namedtype.NamedType('extensionValue', univ.OctetString())
+)
+
+
+class ExternalExtensions(univ.SequenceOf):
+    pass
+
+
+ExternalExtensions.componentType = ExternalExtension()
+ExternalExtensions.subtypeSpec=constraint.ValueSizeConstraint(1, MAX)
+
+
+class StandardizedExtension(univ.Sequence):
+    pass
+
+
+StandardizedExtension.componentType = namedtype.NamedTypes(
+    namedtype.NamedType('extensionID', univ.Integer()),
+    namedtype.NamedType('extensionValue', univ.OctetString())
+)
+
+
+class StandardizedExtensions(univ.SequenceOf):
+    pass
+
+
+StandardizedExtensions.componentType = StandardizedExtension()
+StandardizedExtensions.subtypeSpec=constraint.ValueSizeConstraint(1, MAX)
+
+
+class Extensions(univ.Sequence):
+    pass
+
+
+Extensions.componentType = namedtype.NamedTypes(
+    namedtype.NamedType('standardized', StandardizedExtensions()),
+    namedtype.OptionalNamedType('external', ExternalExtensions())
+)
+
+
+class HLCProtocol(univ.Enumerated):
+    pass
+
+
+HLCProtocol.namedValues = namedval.NamedValues(
+    ('din-spec-70121-2014', 0),
+    ('iso-15118-2-2014', 1),
+    ('iso-15118-20-2022', 2),
+    ('sae-j2847-2-202309', 3)
+)
+
+
+class SecurityProfile(univ.Enumerated):
+    pass
+
+
+SecurityProfile.namedValues = namedval.NamedValues(
+    ('tcpOnly', 0),
+    ('tls12-server', 2),
+    ('tls13-mutual', 20)
+)
+
+
+class SecurityProfileTuple(univ.Sequence):
+    pass
+
+
+SecurityProfileTuple.componentType = namedtype.NamedTypes(
+    namedtype.NamedType('securityProfile', SecurityProfile()),
+    namedtype.NamedType('authorizationMethod', univ.SequenceOf(componentType=AuthorizationMethod()).subtype(subtypeSpec=constraint.ValueSizeConstraint(1, MAX))),
+    namedtype.NamedType('energyTransferMode', univ.SequenceOf(componentType=EnergyTransferMode()).subtype(subtypeSpec=constraint.ValueSizeConstraint(1, MAX)))
+)
+
+
+class HighLevelCommunicationTuple(univ.Sequence):
+    pass
+
+
+HighLevelCommunicationTuple.componentType = namedtype.NamedTypes(
+    namedtype.NamedType('hlcProtocol', HLCProtocol()),
+    namedtype.NamedType('securityProfileTuple', univ.SequenceOf(componentType=SecurityProfileTuple()).subtype(subtypeSpec=constraint.ValueSizeConstraint(1, MAX)))
+)
+
+
+class HighLevelCommunication(univ.SequenceOf):
+    pass
+
+
+HighLevelCommunication.componentType = HighLevelCommunicationTuple()
+HighLevelCommunication.subtypeSpec=constraint.ValueSizeConstraint(1, MAX)
+
+
+class IPv6Socket(univ.Sequence):
+    pass
+
+
+IPv6Socket.componentType = namedtype.NamedTypes(
+    namedtype.NamedType('ipv6Address', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(16, 16))),
+    namedtype.NamedType('tcpPort', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(4, 4)))
+)
\ No newline at end of file
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/asn1/archived/esdp_definitions.asn /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/asn1/archived/esdp_definitions.asn
new file mode 100644
index 0000000..1a6937c
--- /dev/null
+++ /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/asn1/archived/esdp_definitions.asn
@@ -0,0 +1,55 @@
+ISO15118-200 DEFINITIONS ::=
+BEGIN
+
+
+Extensions ::= SEQUENCE { 
+    standardized StandardizedExtensions, 
+    external ExternalExtensions OPTIONAL 
+
+}
+StandardizedExtensions ::= SEQUENCE (SIZE (1..MAX)) OF StandardizedExtension
+
+StandardizedExtension ::= SEQUENCE { 
+    extensionID INTEGER, 
+    extensionValue OCTET STRING 
+}
+
+ExternalExtensions ::= SEQUENCE (SIZE (1..MAX)) OF ExternalExtension
+
+ExternalExtension ::= SEQUENCE { 
+    externalExtensionID OBJECT IDENTIFIER, 
+    critical BOOLEAN DEFAULT TRUE, 
+    extensionValue OCTET STRING }
+
+-- StandardExtensions --
+
+
+
+ChargingInterface ::= ENUMERATED { nacs (0), ccs1 (1), ccs2 (2), chademo (3), chaoji (4), type-1 (5), type-2 (6), mcs (7) }
+
+BasicSignaling ::= SEQUENCE (SIZE (1..MAX)) OF BasicSignalingProtocol
+BasicSignalingProtocol ::= ENUMERATED { iec61851-1-ED2 (0), iec61851-1-ED3 (1), iec61851-23-ED1 (2), iec61851-23-ED2 (3) }
+
+IPv6Socket ::= SEQUENCE { ipv6Address OCTET STRING (SIZE (16)), tcpPort OCTET STRING (SIZE (4)) }
+
+HighLevelCommunication ::= SEQUENCE (SIZE (1..MAX)) OF HighLevelCommunicationTuple
+HighLevelCommunicationTuple ::= SEQUENCE { hlcProtocol HLCProtocol, securityProfileTuple SEQUENCE(SIZE (1..MAX)) OF SecurityProfileTuple }
+SecurityProfileTuple ::= SEQUENCE { securityProfile SecurityProfile, authorizationMethod SEQUENCE(SIZE (1..MAX)) OF AuthorizationMethod, energyTransferMode SEQUENCE(SIZE (1..MAX)) OF EnergyTransferMode, ... }
+HLCProtocol ::= ENUMERATED { din-spec-70121-2014 (0), iso-15118-2-2014 (1), iso-15118-20-2022 (2), sae-j2847-2-202309 (3) }
+SecurityProfile ::= ENUMERATED { tcpOnly (0), tls12-server (2), tls13-mutual (20) }
+AuthorizationMethod ::= ENUMERATED { eim (0), pnc-2 (1), pnc-20 (2) }
+EnergyTransferMode ::= ENUMERATED { dc (0), dc-bpt (1), ac (2), ac-bpt (3) }
+
+EMSPIdentifiers ::= SEQUENCE (SIZE (1..MAX)) OF EMSPIdentifier
+EMSPIdentifier ::= OCTET STRING (SIZE (1..MAX))
+
+DCChargingLimits ::= SEQUENCE { maximumVoltage INTEGER, minimumVoltage INTEGER, ... }
+
+ConductiveChargingInterfaceLimitations ::= SEQUENCE { maximumContactorTemperature INTEGER, ... }
+
+EVCharacteristics ::= SEQUENCE { vehicleIdentificationNumber OCTET STRING (SIZE (17)) OPTIONAL, evccSoftwareVersion UTF8String (SIZE (1..MAX)) OPTIONAL }
+
+ChargingStationCharacteristics ::= SEQUENCE { evseID OCTET STRING (SIZE (1..MAX)) OPTIONAL, seccSoftwareVersion UTF8String (SIZE (1..MAX)) OPTIONAL }
+
+END
+
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/asn1/archived/esdp_encoded.dat /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/asn1/archived/esdp_encoded.dat
new file mode 100644
index 0000000..14f98aa
Binary files /dev/null and /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/asn1/archived/esdp_encoded.dat differ
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/asn1/archived/requirements.txt /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/asn1/archived/requirements.txt
new file mode 100644
index 0000000..d3fa4ac
--- /dev/null
+++ /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/asn1/archived/requirements.txt
@@ -0,0 +1,2 @@
+hexdump==3.3
+pyasn1==0.4.8
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/asn1/esdp_asn1.py /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/asn1/esdp_asn1.py
new file mode 100644
index 0000000..e176970
--- /dev/null
+++ /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/asn1/esdp_asn1.py
@@ -0,0 +1,230 @@
+# Auto-generated by asn1ate v.0.6.1.dev0 from esdp_definitions.asn
+
+# (last modified on 2024-10-30 15:45:03.203826)
+
+
+# ISO15118-200
+from pyasn1.type import univ, char, namedtype, namedval, tag, constraint, useful
+
+MAX = 2^32 -1 # MAX is a defined concept in ASN.1, autogen didn't differentiate as expected to put in the real max value of the parent type (not all parent types have finite maximums defined)
+
+class AuthorizationMethod(univ.Enumerated):
+    pass
+
+
+AuthorizationMethod.namedValues = namedval.NamedValues(
+    ('eim', 0),
+    ('pnc-2', 1),
+    ('pnc-20', 2)
+)
+
+
+class BasicSignalingProtocol(univ.Enumerated):
+    pass
+
+
+BasicSignalingProtocol.namedValues = namedval.NamedValues(
+    ('iec61851-1-ED2', 0),
+    ('iec61851-1-ED3', 1),
+    ('iec61851-23-ED1', 2),
+    ('iec61851-23-ED2', 3)
+)
+
+
+class BasicSignaling(univ.SequenceOf):
+    pass
+
+
+BasicSignaling.componentType = BasicSignalingProtocol()
+BasicSignaling.subtypeSpec=constraint.ValueSizeConstraint(1, MAX)
+
+
+class ChargingInterface(univ.Enumerated):
+    pass
+
+
+ChargingInterface.namedValues = namedval.NamedValues(
+    ('nacs', 0),
+    ('ccs1', 1),
+    ('ccs2', 2),
+    ('chademo', 3),
+    ('chaoji', 4),
+    ('type-1', 5),
+    ('type-2', 6),
+    ('mcs', 7)
+)
+
+
+class ChargingStationCharacteristics(univ.Sequence):
+    pass
+
+
+ChargingStationCharacteristics.componentType = namedtype.NamedTypes(
+    namedtype.OptionalNamedType('evseID', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, MAX))),
+    namedtype.OptionalNamedType('seccSoftwareVersion', char.UTF8String().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, MAX)))
+)
+
+
+class ConductiveChargingInterfaceLimitations(univ.Sequence):
+    pass
+
+
+ConductiveChargingInterfaceLimitations.componentType = namedtype.NamedTypes(
+    namedtype.NamedType('maximumContactorTemperature', univ.Integer())
+)
+
+
+class DCChargingLimits(univ.Sequence):
+    pass
+
+
+DCChargingLimits.componentType = namedtype.NamedTypes(
+    namedtype.NamedType('maximumVoltage', univ.Integer()),
+    namedtype.NamedType('minimumVoltage', univ.Integer())
+)
+
+
+class EMSPIdentifier(univ.OctetString):
+    pass
+
+
+EMSPIdentifier.subtypeSpec = constraint.ValueSizeConstraint(1, MAX)
+
+
+class EMSPIdentifiers(univ.SequenceOf):
+    pass
+
+
+EMSPIdentifiers.componentType = EMSPIdentifier()
+EMSPIdentifiers.subtypeSpec=constraint.ValueSizeConstraint(1, MAX)
+
+
+class EVCharacteristics(univ.Sequence):
+    pass
+
+
+EVCharacteristics.componentType = namedtype.NamedTypes(
+    namedtype.OptionalNamedType('vehicleIdentificationNumber', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(17, 17))),
+    namedtype.OptionalNamedType('evccSoftwareVersion', char.UTF8String().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, MAX)))
+)
+
+
+class EnergyTransferMode(univ.Enumerated):
+    pass
+
+
+EnergyTransferMode.namedValues = namedval.NamedValues(
+    ('dc', 0),
+    ('dc-bpt', 1),
+    ('ac', 2),
+    ('ac-bpt', 3)
+)
+
+
+class ExternalExtension(univ.Sequence):
+    pass
+
+
+ExternalExtension.componentType = namedtype.NamedTypes(
+    namedtype.NamedType('externalExtensionID', univ.ObjectIdentifier()),
+    namedtype.DefaultedNamedType('critical', univ.Boolean().subtype(value=1)),
+    namedtype.NamedType('extensionValue', univ.OctetString())
+)
+
+
+class ExternalExtensions(univ.SequenceOf):
+    pass
+
+
+ExternalExtensions.componentType = ExternalExtension()
+ExternalExtensions.subtypeSpec=constraint.ValueSizeConstraint(1, MAX)
+
+
+class StandardizedExtension(univ.Sequence):
+    pass
+
+
+StandardizedExtension.componentType = namedtype.NamedTypes(
+    namedtype.NamedType('extensionID', univ.Integer()),
+    namedtype.NamedType('extensionValue', univ.OctetString())
+)
+
+
+class StandardizedExtensions(univ.SequenceOf):
+    pass
+
+
+StandardizedExtensions.componentType = StandardizedExtension()
+StandardizedExtensions.subtypeSpec=constraint.ValueSizeConstraint(1, MAX)
+
+
+class Extensions(univ.Sequence):
+    pass
+
+
+Extensions.componentType = namedtype.NamedTypes(
+    namedtype.NamedType('standardized', StandardizedExtensions()),
+    namedtype.OptionalNamedType('external', ExternalExtensions())
+)
+
+
+class HLCProtocol(univ.Enumerated):
+    pass
+
+
+HLCProtocol.namedValues = namedval.NamedValues(
+    ('din-spec-70121-2014', 0),
+    ('iso-15118-2-2014', 1),
+    ('iso-15118-20-2022', 2),
+    ('sae-j2847-2-202309', 3)
+)
+
+
+class SecurityProfile(univ.Enumerated):
+    pass
+
+
+SecurityProfile.namedValues = namedval.NamedValues(
+    ('tcpOnly', 0),
+    ('tls12-server', 2),
+    ('tls13-mutual', 20)
+)
+
+
+class SecurityProfileTuple(univ.Sequence):
+    pass
+
+
+SecurityProfileTuple.componentType = namedtype.NamedTypes(
+    namedtype.NamedType('securityProfile', SecurityProfile()),
+    namedtype.NamedType('authorizationMethod', univ.SequenceOf(componentType=AuthorizationMethod()).subtype(subtypeSpec=constraint.ValueSizeConstraint(1, MAX))),
+    namedtype.NamedType('energyTransferMode', univ.SequenceOf(componentType=EnergyTransferMode()).subtype(subtypeSpec=constraint.ValueSizeConstraint(1, MAX)))
+)
+
+
+class HighLevelCommunicationTuple(univ.Sequence):
+    pass
+
+
+HighLevelCommunicationTuple.componentType = namedtype.NamedTypes(
+    namedtype.NamedType('hlcProtocol', HLCProtocol()),
+    namedtype.NamedType('securityProfileTuple', univ.SequenceOf(componentType=SecurityProfileTuple()).subtype(subtypeSpec=constraint.ValueSizeConstraint(1, MAX)))
+)
+
+
+class HighLevelCommunication(univ.SequenceOf):
+    pass
+
+
+HighLevelCommunication.componentType = HighLevelCommunicationTuple()
+HighLevelCommunication.subtypeSpec=constraint.ValueSizeConstraint(1, MAX)
+
+
+class IPv6Socket(univ.Sequence):
+    pass
+
+
+IPv6Socket.componentType = namedtype.NamedTypes(
+    namedtype.NamedType('ipv6Address', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(16, 16))),
+    namedtype.NamedType('tcpPort', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(4, 4)))
+)
\ No newline at end of file
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/asn1/esdp_asn1_main.py /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/asn1/esdp_asn1_main.py
new file mode 100644
index 0000000..9f99b57
--- /dev/null
+++ /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/asn1/esdp_asn1_main.py
@@ -0,0 +1,229 @@
+from iso15118.evcc.asn1 import esdp_asn1
+from pyasn1.type import univ, constraint
+from pyasn1.codec.der.encoder import encode
+from pyasn1.codec.der.decoder import decode
+from hexdump import hexdump
+import os
+import logging
+logger = logging.getLogger(__name__)
+
+def encode_data():
+    # map extensionID value to class type for decoding
+    # IDs 1-6 are based on draft of ISO15118-200
+    # IDs > 6 are not defined in the document but are extrapolated from document section headers 
+    extension_ID_map = {
+        1: esdp_asn1.ChargingInterface(), 
+        2: esdp_asn1.BasicSignaling(), 
+        3: esdp_asn1.IPv6Socket(),
+        4: esdp_asn1.HighLevelCommunication(), 
+        5: esdp_asn1.EMSPIdentifiers(),
+        6: esdp_asn1.DCChargingLimits(),
+        7: esdp_asn1.ConductiveChargingInterfaceLimitations(),
+        8: esdp_asn1.EVCharacteristics(),
+        9: esdp_asn1.ChargingStationCharacteristics()
+        }
+
+
+    # Initialized Standard extensions with object and extensionID
+    chg_interface_ext = esdp_asn1.StandardizedExtension()
+    chg_interface_ext['extensionID'] = 1
+    basic_signal_ext = esdp_asn1.StandardizedExtension()
+    basic_signal_ext['extensionID'] = 2
+    ipv6_sock_ext = esdp_asn1.StandardizedExtension()
+    ipv6_sock_ext['extensionID'] = 3
+    hlc_ext = esdp_asn1.StandardizedExtension()
+    hlc_ext['extensionID'] = 4
+    emsp_ids_ext = esdp_asn1.StandardizedExtension()
+    emsp_ids_ext['extensionID'] = 5
+    dc_chg_limits_ext = esdp_asn1.StandardizedExtension()
+    dc_chg_limits_ext['extensionID'] = 6
+
+    # IDS aren't defined, utilizing section numbers
+    con_chg_int_limits_ext = esdp_asn1.StandardizedExtension()
+    con_chg_int_limits_ext['extensionID'] = 7
+    ev_chars_ext = esdp_asn1.StandardizedExtension()
+    ev_chars_ext['extensionID'] = 8
+    evse_chars_ext = esdp_asn1.StandardizedExtension()
+    evse_chars_ext['extensionID'] = 9
+
+
+    ### Set sample data for each extension and encode to OctetString ### 
+
+    # Charging Interface Extension
+    chg_interface = esdp_asn1.ChargingInterface(1)
+    chg_interface_ext['extensionValue'] = univ.OctetString(encode(chg_interface))
+
+    # Basic Signaling Extension
+    basic_signal_proto = esdp_asn1.BasicSignalingProtocol(3) # 'iec61851-23-ED2'
+    basic_signal = esdp_asn1.BasicSignaling()
+    basic_signal.append(basic_signal_proto)
+    basic_signal_ext['extensionValue'] = univ.OctetString(encode(basic_signal))
+
+    # IPv6 socket Extension
+
+    # Not required for ESDPReq Packet
+    ipv6_sock = esdp_asn1.IPv6Socket()
+    ipv6_sock['ipv6Address'] = univ.OctetString(hexValue="0000000000000000000000000000fe00").subtype(subtypeSpec=constraint.ValueSizeConstraint(16, 16))
+    ipv6_sock['tcpPort'] = univ.OctetString(hexValue="00008080").subtype(subtypeSpec=constraint.ValueSizeConstraint(4, 4))
+    ipv6_sock_ext['extensionValue'] = univ.OctetString(encode(ipv6_sock))
+
+    # HLC Extension
+    hlc_seq = esdp_asn1.HighLevelCommunication()
+    hlc_tup1 = esdp_asn1.HighLevelCommunicationTuple()
+    hlc_tup1['hlcProtocol'] = 1
+    sec_prof_tuple = esdp_asn1.SecurityProfileTuple()
+    sec_prof_tuple['securityProfile'] = 0
+    auth_method = esdp_asn1.AuthorizationMethod(0) # eim
+    energy_transfer = esdp_asn1.EnergyTransferMode(0)
+    sec_prof_tuple['authorizationMethod'].append(auth_method)
+    sec_prof_tuple['energyTransferMode'].append(energy_transfer)
+    hlc_tup1['securityProfileTuple'].append(sec_prof_tuple)
+    hlc_seq.append(hlc_tup1)
+    hlc_ext['extensionValue'] = univ.OctetString(encode(hlc_seq))
+
+    # EMSP Identifiers Extension
+
+    emsp_id1 = esdp_asn1.EMSPIdentifier(hexValue="abcde0101") #adding trailing 0, not desireable
+    emsp_id2 = esdp_asn1.EMSPIdentifier(hexValue="abcde0202")
+    emsp_ids = esdp_asn1.EMSPIdentifiers()
+    emsp_ids.extend([emsp_id1,emsp_id2])
+    emsp_ids_ext['extensionValue'] = univ.OctetString(encode(emsp_ids))
+
+    # DC charging limits Extension
+    dc_chg_limits = esdp_asn1.DCChargingLimits()
+    dc_chg_limits['maximumVoltage'] = 920
+    dc_chg_limits['minimumVoltage'] = 250
+    dc_chg_limits_ext['extensionValue'] = univ.OctetString(encode(dc_chg_limits))
+
+    # Conductive charging interface limitations Extensions
+    conductive_chg_int_limits = esdp_asn1.ConductiveChargingInterfaceLimitations()
+    conductive_chg_int_limits['maximumContactorTemperature'] = 80
+    con_chg_int_limits_ext['extensionValue'] = univ.OctetString(encode(conductive_chg_int_limits))
+
+    # EV Characteristics Extensions
+    ev_chars = esdp_asn1.EVCharacteristics()
+    ev_chars['vehicleIdentificationNumber'] = univ.OctetString(hexValue='00112233445566778899aabbccddeeff00').subtype(subtypeSpec=constraint.ValueSizeConstraint(17, 17))
+    ev_chars['evccSoftwareVersion'] = "v2.5.6_20241031"
+    ev_chars_ext['extensionValue'] = univ.OctetString(encode(ev_chars))
+
+    # Charging Station Characteristics Extensions
+    chg_stn_char = esdp_asn1.ChargingStationCharacteristics()
+    chg_stn_char['seccSoftwareVersion'] = "v3.1.0_beta"
+    chg_stn_char['evseID'] = univ.OctetString(hexValue='5A0E').subtype(subtypeSpec=constraint.ValueSizeConstraint(1, esdp_asn1.MAX))
+    evse_chars_ext['extensionValue'] = univ.OctetString(encode(chg_stn_char))
+
+    ### Create top level StandardExtensions and Extensions objects ###
+
+    std_extensions = esdp_asn1.StandardizedExtensions()
+    #std_extensions.extend([chg_interface_ext,basic_signal_ext, ipv6_sock_ext, hlc_ext, emsp_ids_ext, dc_chg_limits_ext, con_chg_int_limits_ext, ev_chars_ext, evse_chars_ext])
+    std_extensions.extend([chg_interface_ext,basic_signal_ext, hlc_ext, dc_chg_limits_ext, con_chg_int_limits_ext, ev_chars_ext])
+    #external_extensions = esdp_asn1.ExternalExtensions()
+
+    extensions = esdp_asn1.Extensions()
+    extensions['standardized'] = std_extensions
+    #print(extensions.prettyPrint())
+
+    ### Encode top level Extensions object, print to string and save to file ###
+    bin_rep = encode(extensions)
+
+    #print("Hexdump of encoded Extensions:")
+    #hexdump(bin_rep)
+    #print(bin_rep)
+    #full_decode(bin_rep)
+
+    # write bytes to file
+    with open("esdp_encoded.dat", "wb") as binary_file:
+        # Write bytes to file
+        binary_file.write(bin_rep)
+    
+    file_size = os.path.getsize(os.getcwd()+"/esdp_encoded.dat")
+
+    logger.info(f'ASN1 file written to esdp_encoded.dat at {os.getcwd()}')
+    logger.info(f'File is of size {file_size}')
+
+
+    return bin_rep, file_size
+
+def decode_data(esdp_extensions):
+
+    extension_ID_map = {
+    1: esdp_asn1.ChargingInterface(), 
+    2: esdp_asn1.BasicSignaling(), 
+    3: esdp_asn1.IPv6Socket(),
+    4: esdp_asn1.HighLevelCommunication(), 
+    5: esdp_asn1.EMSPIdentifiers(),
+    6: esdp_asn1.DCChargingLimits(),
+    7: esdp_asn1.ConductiveChargingInterfaceLimitations(),
+    8: esdp_asn1.EVCharacteristics(),
+    9: esdp_asn1.ChargingStationCharacteristics()
+    }
+
+    #filename = "./esdp_encoded.dat" # remove later
+
+    #with open(filename, 'rb') as file:
+        #esdp_extensions = file.read() # remove later
+
+    ext_obj_decode, rest = decode(esdp_extensions,asn1Spec=esdp_asn1.Extensions())
+
+        # print("Top level Extensions decode:")
+        # print(ext_obj_decode.prettyPrint())
+
+        # print(ext_obj_decode['standardized'][0].prettyPrint())
+
+        # print("Individual Std Ext Decode:")
+    for index in range(len(ext_obj_decode['standardized'])):
+        #print(ext_obj_decode['standardized'][index].prettyPrint())
+        ext_id = ext_obj_decode['standardized'][index]['extensionID']
+        std_ext_value_decode, rest = decode(ext_obj_decode['standardized'][index]['extensionValue'],asn1Spec=extension_ID_map[ext_id])
+        
+        if isinstance(std_ext_value_decode, esdp_asn1.IPv6Socket):
+            ipv6addr = std_ext_value_decode['ipv6Address']
+            # print(bytes(ipv6))
+            prt = std_ext_value_decode['tcpPort']
+            # print(int.from_bytes(bytes(prt),'big'))
+
+        if isinstance(std_ext_value_decode, esdp_asn1.HighLevelCommunication):
+            sec = std_ext_value_decode[0][1][0][0]
+
+        # indent = '\t'
+        # print({indent + type(std_ext_value_decode).__name__})
+        # print(indent + str(std_ext_value_decode).replace('\n','\n' + indent))
+        # print("\n")
+
+    return [prt,ipv6addr,sec]
+"""
+#############################################
+#################   Decode  #################
+#############################################
+
+
+# Decodes top level Extensions object and then each Standard extensions payload and prints to console
+def full_decode(extensions_bin_rep):
+    ext_obj_decode, rest = decode(extensions_bin_rep,asn1Spec=esdp_asn1.Extensions())
+    print("Top level Extensions decode:")
+    print(ext_obj_decode.prettyPrint())
+
+    #print(ext_obj_decode['standardized'][0].prettyPrint())
+
+    print("Individual Std Ext Decode:")
+    for index in range(len(ext_obj_decode['standardized'])):
+        print(ext_obj_decode['standardized'][index].prettyPrint())
+        ext_id = ext_obj_decode['standardized'][index]['extensionID']
+        std_ext_value_decode, rest = decode(ext_obj_decode['standardized'][index]['extensionValue'],asn1Spec=extension_ID_map[ext_id])
+        indent = '\t'
+        print(indent + type(std_ext_value_decode).__name__)
+        print(indent + str(std_ext_value_decode).replace('\n','\n' + indent))
+        print("\n")
+
+# Decode from bytes string literal
+bin_rep_str = b'0\x81\xd40\x81\xd10\x08\x02\x01\x01\x04\x03\n\x01\x010\n\x02\x01\x02\x04\x050\x03\n\x01\x030\x1f\x02\x01\x03\x04\x1a0\x18\x04\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfe\x00\x04\x04\x00\x00\x80\x800\x1d\x02\x01\x04\x04\x180\x160\x14\n\x01\x010\x0f0\r\n\x01\x000\x03\n\x01\x000\x03\n\x01\x000\x15\x02\x01\x05\x04\x100\x0e\x04\x05\xab\xcd\xe0\x10\x10\x04\x05\xab\xcd\xe0  0\x0f\x02\x01\x06\x04\n0\x08\x02\x02\x03\x98\x02\x02\x00\xfa0\n\x02\x01\x07\x04\x050\x03\x02\x01P0+\x02\x01\x08\x04&0$\x04\x11\x00\x11"3DUfw\x88\x99\xaa\xbb\xcc\xdd\xee\xff\x00\x0c\x0fv2.5.6_202410310\x18\x02\x01\t\x04\x130\x11\x04\x02Z\x0e\x0c\x0bv3.1.0_beta'
+#full_decode(bin_rep_str)
+
+
+# Decode from binary file
+filename = "C:/Users/ewatt/Box/ChargeX Root Folder/INTERNAL FOLDERS ONLY/Communications Task Force - Internal Folder/ESDP/ASN1 C/ASN1C_full_output.ber"
+
+with open(filename, 'rb') as file:
+    binary_data = file.read()
+    full_decode(binary_data)
+"""
\ No newline at end of file
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/asn1/esdp_definitions.asn /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/asn1/esdp_definitions.asn
new file mode 100644
index 0000000..1a6937c
--- /dev/null
+++ /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/asn1/esdp_definitions.asn
@@ -0,0 +1,55 @@
+ISO15118-200 DEFINITIONS ::=
+BEGIN
+
+
+Extensions ::= SEQUENCE { 
+    standardized StandardizedExtensions, 
+    external ExternalExtensions OPTIONAL 
+
+}
+StandardizedExtensions ::= SEQUENCE (SIZE (1..MAX)) OF StandardizedExtension
+
+StandardizedExtension ::= SEQUENCE { 
+    extensionID INTEGER, 
+    extensionValue OCTET STRING 
+}
+
+ExternalExtensions ::= SEQUENCE (SIZE (1..MAX)) OF ExternalExtension
+
+ExternalExtension ::= SEQUENCE { 
+    externalExtensionID OBJECT IDENTIFIER, 
+    critical BOOLEAN DEFAULT TRUE, 
+    extensionValue OCTET STRING }
+
+-- StandardExtensions --
+
+
+
+ChargingInterface ::= ENUMERATED { nacs (0), ccs1 (1), ccs2 (2), chademo (3), chaoji (4), type-1 (5), type-2 (6), mcs (7) }
+
+BasicSignaling ::= SEQUENCE (SIZE (1..MAX)) OF BasicSignalingProtocol
+BasicSignalingProtocol ::= ENUMERATED { iec61851-1-ED2 (0), iec61851-1-ED3 (1), iec61851-23-ED1 (2), iec61851-23-ED2 (3) }
+
+IPv6Socket ::= SEQUENCE { ipv6Address OCTET STRING (SIZE (16)), tcpPort OCTET STRING (SIZE (4)) }
+
+HighLevelCommunication ::= SEQUENCE (SIZE (1..MAX)) OF HighLevelCommunicationTuple
+HighLevelCommunicationTuple ::= SEQUENCE { hlcProtocol HLCProtocol, securityProfileTuple SEQUENCE(SIZE (1..MAX)) OF SecurityProfileTuple }
+SecurityProfileTuple ::= SEQUENCE { securityProfile SecurityProfile, authorizationMethod SEQUENCE(SIZE (1..MAX)) OF AuthorizationMethod, energyTransferMode SEQUENCE(SIZE (1..MAX)) OF EnergyTransferMode, ... }
+HLCProtocol ::= ENUMERATED { din-spec-70121-2014 (0), iso-15118-2-2014 (1), iso-15118-20-2022 (2), sae-j2847-2-202309 (3) }
+SecurityProfile ::= ENUMERATED { tcpOnly (0), tls12-server (2), tls13-mutual (20) }
+AuthorizationMethod ::= ENUMERATED { eim (0), pnc-2 (1), pnc-20 (2) }
+EnergyTransferMode ::= ENUMERATED { dc (0), dc-bpt (1), ac (2), ac-bpt (3) }
+
+EMSPIdentifiers ::= SEQUENCE (SIZE (1..MAX)) OF EMSPIdentifier
+EMSPIdentifier ::= OCTET STRING (SIZE (1..MAX))
+
+DCChargingLimits ::= SEQUENCE { maximumVoltage INTEGER, minimumVoltage INTEGER, ... }
+
+ConductiveChargingInterfaceLimitations ::= SEQUENCE { maximumContactorTemperature INTEGER, ... }
+
+EVCharacteristics ::= SEQUENCE { vehicleIdentificationNumber OCTET STRING (SIZE (17)) OPTIONAL, evccSoftwareVersion UTF8String (SIZE (1..MAX)) OPTIONAL }
+
+ChargingStationCharacteristics ::= SEQUENCE { evseID OCTET STRING (SIZE (1..MAX)) OPTIONAL, seccSoftwareVersion UTF8String (SIZE (1..MAX)) OPTIONAL }
+
+END
+
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/asn1/esdp_encoded.dat /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/asn1/esdp_encoded.dat
new file mode 100644
index 0000000..14f98aa
Binary files /dev/null and /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/asn1/esdp_encoded.dat differ
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/comm_session_handler.py /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/comm_session_handler.py
new file mode 100644
index 750cab0..6b0a1ff 100644
--- /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/comm_session_handler.py
+++ /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/comm_session_handler.py
@@ -39,6 +39,7 @@ from iso15118.shared.messages.enums import (
     ISOV20PayloadTypes,
     Namespace,
     Protocol,
+    UINT_32_MAX
 )
 from iso15118.shared.messages.iso15118_2.datatypes import (
     ChargingSession as ChargingSessionV2,
@@ -52,7 +53,7 @@ from iso15118.shared.messages.iso15118_20.common_messages import (
     ScheduleExchangeRes,
 )
 from iso15118.shared.messages.iso15118_20.common_types import Processing
-from iso15118.shared.messages.sdp import SDPRequest, SDPResponse, Security, Transport
+from iso15118.shared.messages.sdp import SDPRequest, SDPResponse, Security, Transport, ESDPRequest, ESDPResponse
 from iso15118.shared.messages.timeouts import Timeouts
 from iso15118.shared.messages.v2gtp import V2GTPMessage
 from iso15118.shared.notifications import (
@@ -62,9 +63,12 @@ from iso15118.shared.notifications import (
 )
 from iso15118.shared.utils import cancel_task, wait_for_tasks
 
+from iso15118.evcc.asn1 import esdp_asn1_main
+
 logger = logging.getLogger(__name__)
 
-SDP_MAX_REQUEST_COUNTER = 50
+ESDP_MAX_REQUEST_COUNTER = 5 # Changed from 50 by PG & MS
+SDP_MAX_REQUEST_COUNTER = 35 # Changed from 50 by PG & MS
 
 
 class EVCCCommunicationSession(V2GCommunicationSession):
@@ -301,8 +305,10 @@ class CommunicationSessionHandler:
         self.config: EVCCConfig = config
         self.iface: str = iface
         self.ev_controller: EVControllerInterface = ev_controller
+        self.esdp_retries_number = ESDP_MAX_REQUEST_COUNTER
         self.sdp_retries_number = SDP_MAX_REQUEST_COUNTER
         self._sdp_retry_cycles = self.config.sdp_retry_cycles
+        self._esdp_retry_cycles = 35 # changed by MS
 
         # Set the selected EXI codec implementation
         EXI().set_exi_codec(codec)
@@ -354,6 +360,30 @@ class CommunicationSessionHandler:
         logger.info(f"Sending SDPRequest: {sdp_request}")
         await self.udp_client.send_and_receive(v2gtp_msg)
 
+    async def send_esdp(self):
+        """
+        Sends an SECC Discovery Protocol Request (SDP Request) via UDP to
+        the SECC to retrieve the IP address and port of the SECC so that we
+        can establish a TCP connection to the SECC's TCP server, given the
+        IP address and port contained in the SDP Response
+        """
+        # the following loop is to allow the synchronization of the udp client
+        # and the task to handle the SDP restart
+        while not self.udp_client.started:
+            await asyncio.sleep(0.1)
+
+        esdp_extensions, file_size = esdp_asn1_main.encode_data()
+
+        logger.info(f"ESDP packet size is {file_size} bytes")
+
+        esdp_request = ESDPRequest(esdp_version=0x0100,max_payload_size=0x0100,esdp_extensions=esdp_extensions) # update this as needed
+        logger.info(f"Sending ESDPRequest: {esdp_request}")
+        v2gtp_msg = V2GTPMessage(
+            Protocol.UNKNOWN, 0x2000, esdp_request.to_payload()
+        )
+        
+        await self.udp_client.send_and_receive_esdp(v2gtp_msg)
+
     async def restart_sdp(self, new_sdp_cycle: bool):
         """
         Initiates a new SECC Discovery Protocol (SDP) request message, which the
@@ -368,7 +398,7 @@ class CommunicationSessionHandler:
 
         The constant SDP_MAX_REQUEST_COUNTER is used to compare the current
         SDP request counter with the maximum allowed number of SDP requests in
-        one go (50).
+        one go (35).
 
         However, once SDP was successful and the ISO 15118 communication
         proceeds, an error can occur later while processing one of the messages.
@@ -394,39 +424,46 @@ class CommunicationSessionHandler:
             SDPFailedError
         """
         shutdown_msg = (
-            "Shutting down high-level communication. Unplug and "
+            "ESDP and SDP failed to setup communication. Shutting down high-level communication. Unplug and "
             "plug in the cable again if you want to start anew."
         )
 
         if new_sdp_cycle:
-            if self._sdp_retry_cycles == 0:
-                raise SDPFailedError(
-                    f"EVCC tried to initiate a V2GCommunicationSession, "
-                    f"but maximum number of SDP retry cycles "
-                    f"({self.config.sdp_retry_cycles}) is now reached. {shutdown_msg}"
-                )
-
-            self._sdp_retry_cycles -= 1
-            self.sdp_retries_number = SDP_MAX_REQUEST_COUNTER
+            if self._esdp_retry_cycles == 0:
+            	raise SDPFailedError(
+            	f"EVCC tried to initiate a V2GCommunicationSession, "
+            	"but maximum number of ESDP retry cycles "
+            	"({self.esdp_retry_cycles}) is now reached. {shutdown_msg}"
+            	)
+
+            self._esdp_retry_cycles -= 1
+            self.esdp_retries_number = ESDP_MAX_REQUEST_COUNTER
             logger.debug(
-                "Initiating new SDP cycle, "
-                f"{self._sdp_retry_cycles} more cycles(s) left"
+                "Initiating new ESDP cycle, "
+                f"{self._esdp_retry_cycles} more cycles(s) left"
             )
 
-        if self.sdp_retries_number > 0:
-            logger.info(f"Remaining SDP requests: {self.sdp_retries_number}")
+        if self.esdp_retries_number > 0:
+            logger.info(f"Remaining ESDP requests: {self.esdp_retries_number}")
             try:
-                await self.send_sdp()
+                await self.send_esdp()
+                logger.info("Sending ESDP Request")
             except InvalidSettingsValueError as exc:
                 logger.error(
                     f"Invalid value for {exc.entity} setting "
                     f"{exc.setting}: {exc.invalid_value}"
                 )
 
-            self.sdp_retries_number -= 1
+            self.esdp_retries_number -= 1
         else:
-            self.sdp_retries_number = SDP_MAX_REQUEST_COUNTER
-            raise SDPFailedError(f"SDPRequest was not successful. " f"{shutdown_msg}")
+            logger.error("Failed ESDP, now re-trying using SDP.")
+            if self.sdp_retries_number > 0:
+                await self.send_sdp()
+                logger.info("Sending regular SDP Request")
+                self.sdp_retries_number-=1
+
+            else:       
+                raise SDPFailedError(f"SDPRequest was not successful. " f"{shutdown_msg}")
 
     async def start_comm_session(self, host: IPv6Address, port: int, is_tls: bool):
         server_type = "TLS" if is_tls else "TCP"
@@ -534,6 +571,56 @@ class CommunicationSessionHandler:
             ip_address_int = int.from_bytes(sdp_response.ip_address, "big")
             host = IPv6Address(ip_address_int)
             port = sdp_response.port
+
+        elif v2gtp_msg.payload_type in [
+            ISOV2PayloadTypes.ESDP_RESPONSE,
+        ]:
+            try:
+                esdp_response = ESDPResponse.from_payload(v2gtp_msg.payload)
+            except InvalidSDPResponseError as exc:
+                logger.error(exc)
+                try:
+                    await self.restart_sdp(True)
+                    return
+                except SDPFailedError as exc:
+
+                    logger.exception(exc)
+                    return  # TODO check if this is correct here
+
+            logger.info(f"ESDPResponse received: {esdp_response}")
+
+            secc_signals_tls = False
+            if esdp_response.security == Security.TLS:
+                secc_signals_tls = True
+
+            # The idea here is to use both the USE_TLS and ENFORCE_TLS setting of the
+            # EVCC. USE_TLS can be used to set the Security byte field of the SDP
+            # request to either 0x00 (TLS) or 0x10 (no NO_TLS). It's basically there
+            # just to test both use cases.
+            #
+            # The ENFORCE_SECURITY setting can be used by the EV OEM to make sure the EV
+            # only accepts TLS-secured communication sessions, if set to True. If set
+            # to False, and USE_TLS is set to True, then the EVCC can also accept an
+            # unsecure communication (triggered by the SECC sending an SDP response with
+            # the Security byte field set to 0x10 (no NO_TLS)).
+            #
+            # The rationale behind this might be that the EV OEM trades convenience
+            # (the EV driver can always charge) over security.
+            if (not secc_signals_tls and self.config.enforce_tls) or (
+                secc_signals_tls and not self.config.use_tls
+            ):
+                logger.error(
+                    "Security mismatch, can't initiate communication session."
+                    f"\nEVCC setting USE_TLS: {self.config.use_tls}"
+                    f"\nEVCC setting ENFORCE_TLS: {self.config.enforce_tls}"
+                    f"\nSDP response signals TLS: {secc_signals_tls}"
+                )
+                return
+
+            ip_address_int = int.from_bytes(esdp_response.ip_address, "big")
+            host = IPv6Address(ip_address_int)
+            port = esdp_response.port
+
         elif v2gtp_msg.payload_type == ISOV20PayloadTypes.SDP_RESPONSE_WIRELESS:
             raise NotImplementedError(
                 "The incoming datagram seems to be a SDPResponse "
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/evcc_config.py /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/evcc_config.py
new file mode 100644
index e9c7ac4..93cc974 100644
--- /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/evcc_config.py
+++ /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/evcc_config.py
@@ -21,8 +21,8 @@ logger = logging.getLogger(__name__)
 
 class EVCCConfig(BaseModel):
     _default_protocols = [
-        "DIN_SPEC_70121",
         "ISO_15118_2",
+        "DIN_SPEC_70121",
         "ISO_15118_20_AC",
         "ISO_15118_20_DC",
     ]
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/everest/ev_state.py /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/everest/ev_state.py
new file mode 100644
index a314fc0..51b4b95 100644
--- /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/everest/ev_state.py
+++ /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/everest/ev_state.py
@@ -39,4 +39,4 @@ class EVState:
 
     def reset(self):
         self.StopCharging = False
-        self.Pause = False
\ No newline at end of file
+        self.Pause = False
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/transport/udp_client.py /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/transport/udp_client.py
new file mode 100644
index c8b54b4..d5f977d 100644
--- /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/transport/udp_client.py
+++ /ext/dist/libexec/everest/3rd_party/josev/iso15118/evcc/transport/udp_client.py
@@ -7,7 +7,7 @@ from typing import Optional, Tuple
 
 from iso15118.shared.messages.timeouts import Timeouts
 from iso15118.shared.messages.v2gtp import V2GTPMessage
-from iso15118.shared.network import SDP_MULTICAST_GROUP, SDP_SERVER_PORT
+from iso15118.shared.network import SDP_MULTICAST_GROUP, SDP_SERVER_PORT, ESDP_SERVER_PORT
 from iso15118.shared.notifications import (
     ReceiveTimeoutNotification,
     UDPPacketNotification,
@@ -169,6 +169,14 @@ class UDPClient(DatagramProtocol):
 
         logger.debug(f"Message sent: {message}")
 
+    def send_esdp(self, message: V2GTPMessage):
+        self._transport.sendto(
+            message.to_bytes(), (SDP_MULTICAST_GROUP, ESDP_SERVER_PORT)
+        )
+
+        logger.debug(f"Message sent: {message}")
+
+
     async def receive(self):
         try:
             udp_packet, _ = await asyncio.wait_for(
@@ -186,3 +194,7 @@ class UDPClient(DatagramProtocol):
     async def send_and_receive(self, message: V2GTPMessage):
         self.send(message)
         await self.receive()
+
+    async def send_and_receive_esdp(self, message: V2GTPMessage):
+        self.send_esdp(message)
+        await self.receive()
\ No newline at end of file
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/secc/comm_session_handler.py /ext/dist/libexec/everest/3rd_party/josev/iso15118/secc/comm_session_handler.py
new file mode 100644
index 2cee3b6..7c3e52f 100644
--- /ext/dist/libexec/everest/3rd_party/josev/iso15118/secc/comm_session_handler.py
+++ /ext/dist/libexec/everest/3rd_party/josev/iso15118/secc/comm_session_handler.py
@@ -139,6 +139,7 @@ class SECCCommunicationSession(V2GCommunicationSession):
         # CurrentDemandRes. The SECC must send a copy in the MeteringReceiptReq
         # TODO Add support for ISO 15118-20 MeterInfo
         self.sent_meter_info: Optional[MeterInfoV2] = None
+        self.ev_session_context: EVSessionContext = EVSessionContext()
         if secc_settings.save_ev_session_context.session_id is not None:
             self.ev_session_context = secc_settings.save_ev_session_context
         self.is_tls = self._is_tls(transport)
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/secc/controller/simulator.py /ext/dist/libexec/everest/3rd_party/josev/iso15118/secc/controller/simulator.py
new file mode 100644
index 25e3aeb..7b11ec7 100644
--- /ext/dist/libexec/everest/3rd_party/josev/iso15118/secc/controller/simulator.py
+++ /ext/dist/libexec/everest/3rd_party/josev/iso15118/secc/controller/simulator.py
@@ -318,7 +318,28 @@ class SimEVSEController(EVSEControllerInterface):
         selected_energy_service: SelectedEnergyService,
         control_mode: ControlMode,
         schedule_exchange_req: ScheduleExchangeReq,
-    ) -> Union[ScheduledScheduleExchangeResParams, DynamicScheduleExchangeResParams]:
+    ) -> Optional[
+        Union[ScheduledScheduleExchangeResParams,
+              DynamicScheduleExchangeResParams]
+    ]:
+        if control_mode == ControlMode.SCHEDULED:
+            return await self.get_scheduled_se_params(
+                selected_energy_service, schedule_exchange_req
+            )
+        else:
+            return await self.get_dynamic_se_params(
+                selected_energy_service, schedule_exchange_req
+            )
+
+    async def get_schedule_exchange_params(
+        self,
+        selected_energy_service: SelectedEnergyService,
+        control_mode: ControlMode,
+        schedule_exchange_req: ScheduleExchangeReq,
+    ) -> Optional[
+        Union[ScheduledScheduleExchangeResParams,
+              DynamicScheduleExchangeResParams]
+    ]:
         if control_mode == ControlMode.SCHEDULED:
             return await self.get_scheduled_se_params(
                 selected_energy_service, schedule_exchange_req
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/secc/states/din_spec_states.py /ext/dist/libexec/everest/3rd_party/josev/iso15118/secc/states/din_spec_states.py
new file mode 100644
index 03049da..e400529 100644
--- /ext/dist/libexec/everest/3rd_party/josev/iso15118/secc/states/din_spec_states.py
+++ /ext/dist/libexec/everest/3rd_party/josev/iso15118/secc/states/din_spec_states.py
@@ -498,6 +498,62 @@ class ChargeParameterDiscovery(StateSECC):
         EVEREST_CTX.publish('DC_EVStatus', ev_status)
         # EVerest code end #
 
+        # EVerest code start #
+        dc_ev_charge_params: DCEVChargeParameter = charge_parameter_discovery_req.dc_ev_charge_parameter
+        ev_max_current_limit: float = dc_ev_charge_params.ev_maximum_current_limit.value * pow(
+            10, dc_ev_charge_params.ev_maximum_current_limit.multiplier
+        )
+        # if ev_max_current_limit < 0: ev_max_current_limit = 0
+        ev_max_voltage_limit: float = dc_ev_charge_params.ev_maximum_voltage_limit.value * pow(
+            10, dc_ev_charge_params.ev_maximum_voltage_limit.multiplier
+        )
+        # if ev_max_voltage_limit < 0: ev_max_voltage_limit = 0
+        ev_maxvalues: dict = dict([
+            ("DC_EVMaximumCurrentLimit", ev_max_current_limit),
+            ("DC_EVMaximumVoltageLimit", ev_max_voltage_limit)
+        ])
+
+        if dc_ev_charge_params.ev_maximum_power_limit:
+            ev_max_power_limit: float = dc_ev_charge_params.ev_maximum_power_limit.value * pow(
+                10, dc_ev_charge_params.ev_maximum_power_limit.multiplier
+            )
+            # if ev_max_power_limit < 0 : ev_max_power_limit = 0
+            ev_maxvalues.update({"DC_EVMaximumPowerLimit": ev_max_power_limit})
+
+        EVEREST_CTX.publish('DC_EVMaximumLimits', ev_maxvalues)
+
+        if dc_ev_charge_params.ev_energy_capacity:
+            ev_energy_capacity: float = dc_ev_charge_params.ev_energy_capacity.value * pow(
+                10, dc_ev_charge_params.ev_energy_capacity.multiplier
+            )
+            EVEREST_CTX.publish('DC_EVEnergyCapacity', ev_energy_capacity)
+        if dc_ev_charge_params.ev_energy_request:
+            p_ev_energy_request: float = dc_ev_charge_params.ev_energy_request.value * pow(
+                10, dc_ev_charge_params.ev_energy_request.multiplier
+            )
+            EVEREST_CTX.publish('DC_EVEnergyRequest', p_ev_energy_request)
+
+        if dc_ev_charge_params.full_soc:
+            EVEREST_CTX.publish('DC_FullSOC', dc_ev_charge_params.full_soc)
+        if dc_ev_charge_params.bulk_soc:
+            EVEREST_CTX.publish('DC_BulkSOC', dc_ev_charge_params.bulk_soc)
+
+        ev_status: dict = dict([
+            ("DC_EVReady", dc_ev_charge_params.dc_ev_status.ev_ready),
+            ("DC_EVErrorCode", dc_ev_charge_params.dc_ev_status.ev_error_code),
+            ("DC_EVRESSSOC", dc_ev_charge_params.dc_ev_status.ev_ress_soc),
+        ])
+
+        if dc_ev_charge_params.dc_ev_status.ev_cabin_conditioning:
+            ev_status.update(
+                {"DC_EVCabinConditioning": dc_ev_charge_params.dc_ev_status.ev_cabin_conditioning})
+        if dc_ev_charge_params.dc_ev_status.ev_ress_conditioning:
+            ev_status.update(
+                {"DC_EVRESSConiditioning": dc_ev_charge_params.dc_ev_status.ev_ress_conditioning})
+
+        EVEREST_CTX.publish('DC_EVStatus', ev_status)
+        # EVerest code end #
+
         sa_schedule_list = (
             await self.comm_session.evse_controller.get_sa_schedule_list_dinspec(
                 None, 0
@@ -538,7 +594,10 @@ class CableCheck(StateSECC):
 
     def __init__(self, comm_session: SECCCommunicationSession):
         super().__init__(comm_session, Timeouts.V2G_SECC_SEQUENCE_TIMEOUT)
-        self.cable_check_started: bool = False
+        self.cable_check_req_was_received = False
+        # EVerest code start #
+        self.isolation_check_requested = False
+        # EVerest code end #
 
     async def process_message(
         self,
@@ -584,9 +643,9 @@ class CableCheck(StateSECC):
             return
 
         # EVerest code start #
-        if not self.cable_check_started:
+        if not self.isolation_check_requested:
             EVEREST_CTX.publish('Start_CableCheck', None)
-            self.cable_check_started = True
+            self.isolation_check_requested = True
             await self.comm_session.evse_controller.setIsolationMonitoringActive(True)
         # EVerest code end #
 
@@ -1218,6 +1277,9 @@ class CurrentDemand(StateSECC):
         if dc_evse_status.evse_status_code is DCEVSEStatusCode.EVSE_SHUTDOWN:
             EVEREST_CTX.publish('currentDemand_Finished', None)
 
+        if dc_evse_status.evse_status_code is DCEVSEStatusCode.EVSE_SHUTDOWN:
+            EVEREST_CTX.publish('currentDemand_Finished', None)
+
         self.create_next_message(
             None,
             current_demand_res,
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/secc/states/iso15118_2_states.py /ext/dist/libexec/everest/3rd_party/josev/iso15118/secc/states/iso15118_2_states.py
new file mode 100644
index f57985e..c8eb033 100644
--- /ext/dist/libexec/everest/3rd_party/josev/iso15118/secc/states/iso15118_2_states.py
+++ /ext/dist/libexec/everest/3rd_party/josev/iso15118/secc/states/iso15118_2_states.py
@@ -1591,7 +1591,8 @@ class ChargeParameterDiscovery(StateSECC):
             ac_evse_charge_params = (
                 await self.comm_session.evse_controller.get_ac_charge_params_v2()
             )
-            evse_data_context.current_type = CurrentType.AC
+            evse_data_context.update_ac_charge_parameters_v2(
+                ac_evse_charge_params)
             ev_data_context.update_ac_charge_parameters_v2(
                 charge_params_req.ac_ev_charge_parameter
             )
@@ -1626,7 +1627,8 @@ class ChargeParameterDiscovery(StateSECC):
             dc_evse_charge_params = (
                 await self.comm_session.evse_controller.get_dc_charge_parameters_v2()
             )
-            evse_data_context.current_type = CurrentType.DC
+            evse_data_context.update_dc_charge_parameters(
+                dc_evse_charge_params)
             ev_data_context.update_dc_charge_parameters(
                 charge_params_req.dc_ev_charge_parameter
             )
@@ -1754,6 +1756,67 @@ class ChargeParameterDiscovery(StateSECC):
             EVEREST_CTX.publish('DC_EVStatus', ev_status)
             # EVerest code end #
 
+            # EVerest code start #
+            ev_max_voltage = (
+                charge_params_req.dc_ev_charge_parameter.ev_maximum_voltage_limit
+            )
+            ev_max_current = (
+                charge_params_req.dc_ev_charge_parameter.ev_maximum_current_limit
+            )
+            ev_energy_request = (
+                charge_params_req.dc_ev_charge_parameter.ev_energy_request
+            )
+            ev_max_power = (
+                charge_params_req.dc_ev_charge_parameter.ev_maximum_power_limit
+            )
+            dc_ev_charge_params: DCEVChargeParameter = charge_params_req.dc_ev_charge_parameter
+            ev_max_current_limit: float = dc_ev_charge_params.ev_maximum_current_limit.value * pow(
+                10, dc_ev_charge_params.ev_maximum_current_limit.multiplier
+            )
+            # if ev_max_current_limit < 0: ev_max_current_limit = 0
+            ev_max_voltage_limit: float = dc_ev_charge_params.ev_maximum_voltage_limit.value * pow(
+                10, dc_ev_charge_params.ev_maximum_voltage_limit.multiplier
+            )
+            # if ev_max_voltage_limit < 0: ev_max_voltage_limit = 0
+            ev_maxvalues: dict = dict([
+                ("DC_EVMaximumCurrentLimit", ev_max_current_limit),
+                ("DC_EVMaximumVoltageLimit", ev_max_voltage_limit)
+            ])
+
+            if dc_ev_charge_params.ev_maximum_power_limit:
+                ev_max_power_limit: float = dc_ev_charge_params.ev_maximum_power_limit.value * pow(
+                    10, dc_ev_charge_params.ev_maximum_power_limit.multiplier
+                )
+                # if ev_max_power_limit < 0: ev_max_power_limit = 0
+                ev_maxvalues.update(
+                    {"DC_EVMaximumPowerLimit": ev_max_power_limit})
+
+            EVEREST_CTX.publish('DC_EVMaximumLimits', ev_maxvalues)
+
+            if dc_ev_charge_params.ev_energy_capacity:
+                ev_energy_capacity: float = dc_ev_charge_params.ev_energy_capacity.value * pow(
+                    10, dc_ev_charge_params.ev_energy_capacity.multiplier
+                )
+                EVEREST_CTX.publish('DC_EVEnergyCapacity', ev_energy_capacity)
+            if ev_energy_request:
+                p_ev_energy_request: float = ev_energy_request.value * pow(
+                    10, ev_energy_request.multiplier
+                )
+                EVEREST_CTX.publish('DC_EVEnergyRequest', p_ev_energy_request)
+
+            if dc_ev_charge_params.full_soc:
+                EVEREST_CTX.publish('DC_FullSOC', dc_ev_charge_params.full_soc)
+            if dc_ev_charge_params.bulk_soc:
+                EVEREST_CTX.publish('DC_BulkSOC', dc_ev_charge_params.bulk_soc)
+
+            ev_status: dict = dict([
+                ("DC_EVReady", dc_ev_charge_params.dc_ev_status.ev_ready),
+                ("DC_EVErrorCode", dc_ev_charge_params.dc_ev_status.ev_error_code),
+                ("DC_EVRESSSOC", dc_ev_charge_params.dc_ev_status.ev_ress_soc),
+            ])
+            EVEREST_CTX.publish('DC_EVStatus', ev_status)
+            # EVerest code end #
+
         departure_time = (
             ev_data_context.departure_time if ev_data_context.departure_time else 0
         )
@@ -2636,7 +2699,10 @@ class CableCheck(StateSECC):
 
     def __init__(self, comm_session: SECCCommunicationSession):
         super().__init__(comm_session, Timeouts.V2G_SECC_SEQUENCE_TIMEOUT)
-        self.cable_check_started = False
+        self.cable_check_req_was_received = False
+        # EVerest code start #
+        self.isolation_check_requested = False
+        # EVerest code end #
 
     async def process_message(
         self,
@@ -2675,9 +2741,9 @@ class CableCheck(StateSECC):
             return
 
         # EVerest code start #
-        if not self.cable_check_started:
+        if not self.isolation_check_requested:
             EVEREST_CTX.publish('Start_CableCheck', None)
-            self.cable_check_started = True
+            self.isolation_check_requested = True
             await self.comm_session.evse_controller.setIsolationMonitoringActive(True)
         # EVerest code end #
 
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/messages/enums.py /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/messages/enums.py
new file mode 100644
index 7bc9502..089279e 100644
--- /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/messages/enums.py
+++ /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/messages/enums.py
@@ -173,6 +173,8 @@ class ISOV2PayloadTypes(IntEnum):
     """
 
     EXI_ENCODED = 0x8001
+    ESDP_REQUEST = 0x2000 # Added by PG & MS
+    ESDP_RESPONSE = 0x2000 # Added by PG & MS
     SDP_REQUEST = 0x9000
     SDP_RESPONSE = 0x9001
 
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/messages/sdp.py /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/messages/sdp.py
new file mode 100644
index a0d8c9a..7652f90 100644
--- /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/messages/sdp.py
+++ /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/messages/sdp.py
@@ -8,8 +8,11 @@ from iso15118.shared.messages.enums import (
     DINPayloadTypes,
     ISOV2PayloadTypes,
     ISOV20PayloadTypes,
+    UINT_32_MAX,
 )
 
+from iso15118.evcc.asn1 import esdp_asn1_main
+
 logger = logging.getLogger(__name__)
 
 MIN_TCP_PORT = 49152
@@ -33,7 +36,7 @@ class Security(IntEnum):
     @classmethod
     def from_byte(cls, byte: bytes) -> "Security":
         if int.from_bytes(byte, "big") == Security.TLS:
-            return Security.TLS
+            return Security.NO_TLS
         if int.from_bytes(byte, "big") == Security.NO_TLS:
             return Security.NO_TLS
 
@@ -69,7 +72,6 @@ class Transport(IntEnum):
         logger.error(f"Invalid byte value for Transport enum: {byte.hex()}")
         raise ValueError
 
-
 class SDPRequest:
     """
     The SECC Discovery Protocol Request message, which the EVCC uses to
@@ -243,7 +245,6 @@ class SDPRequestWireless(SDPRequest):
 class SDPResponseWireless(SDPResponse):
     pass
 
-
 def create_sdp_response(
     sdp_request: Union[SDPRequest, SDPRequestWireless],
     ip_address: bytes,
@@ -278,3 +279,194 @@ def create_sdp_response(
         logger.error("Invalid SDP request, will ignore")
 
     return sdp_response
+
+class ESDPRequest:
+
+    def __init__(self, esdp_version, max_payload_size, esdp_extensions):
+
+        self.payload_type: Union[
+            DINPayloadTypes, ISOV2PayloadTypes, ISOV20PayloadTypes
+        ] = ISOV2PayloadTypes.SDP_REQUEST
+        self.esdp_version = esdp_version                # Per V2G200-52-2
+        self.max_payload_size = max_payload_size        # Should be changed by the maximum size received V2G200-52-3
+        self.esdp_extensions = esdp_extensions
+
+    def to_payload(self) -> bytes:
+        message = self.esdp_version.to_bytes(2  , "big") + \
+        self.max_payload_size.to_bytes(2  , "big") +\
+        self.esdp_extensions
+        #self.esdp_extensions.to_bytes(215  , "big")
+        return bytes(message)
+
+    @staticmethod
+    def from_payload(payload: bytes) -> Union["ESDPRequest"]:
+        if len(payload) < 5:
+            logger.error(
+                "Payload must be of 5 bytes length. "
+                f"Provided: {len(payload)} bytes ({payload.hex()})"
+            )
+            raise InvalidSDPRequestError # Change to ESDPRequestError later
+
+        try:
+            esdp_version = payload[:2]
+            max_payload_size = payload[2:4]
+            esdp_extensions = payload[4:]
+
+            return ESDPRequest(esdp_version,max_payload_size,esdp_extensions)
+        except ValueError as exc:
+            raise InvalidSDPRequestError from exc
+
+    def __len__(self):
+        return 5
+
+    def __repr__(self):
+        return (
+            "["
+            f"esdp_version: {self.esdp_version}"
+            f", max_payload_size: {self.max_payload_size}"
+            f", esdp_extensions: {self.esdp_extensions}"
+            "]"
+        )
+
+class ESDPResponse:
+    """
+    The SECC Discovery Protocol Request message, which the SECC uses to
+    respond to the EVCC's ESDPRequest.
+    """
+
+    def __init__(
+        self,
+        esdp_version: int,
+        max_payload_size: int,
+        ip_address: bytes,
+        port: int,
+        security: Security,
+        transport_protocol: Transport,
+    ):
+
+        if len(ip_address) != 16:
+            logger.error(
+                f"Please provide a valid IPv6 address with 16 bytes. "
+                f"Provided: {len(ip_address)} bytes "
+                f"({ip_address.hex()})"
+            )
+            return
+
+        if port < MIN_TCP_PORT or port > MAX_TCP_PORT:
+            logger.warning(
+                f"The port {port} does not match the mandatory "
+                f"UDP server port 15118."
+            )
+
+        if security not in Security.options():
+            logger.error(
+                f"'{security}' is not a valid value for the "
+                f"field 'security'."
+                f"Allowed: {Security.options()} "
+            )
+            return
+
+        if transport_protocol not in Transport.options():
+            logger.error(
+                f"'{transport_protocol}' is not a valid value for "
+                f"the field 'transport_protocol'."
+                f"Allowed: {Transport.options()} "
+            )
+            return
+
+        self.esdp_version = esdp_version
+        self.max_payload_size = max_payload_size
+        self.ip_address = ip_address
+        self.port = port
+        self.security = security
+        self.transport_protocol = transport_protocol
+        self.payload_type = 0x2000
+
+    def to_payload(self) -> bytes:
+        payload = (
+            self.esdp_version.to_bytes(2, "big")
+            + self.max_payload_size.to_bytes(2, "big")
+            + self.esdp_extensions
+        )
+        return payload
+
+    @staticmethod
+    def from_payload(payload) -> "ESDPResponse":
+        if len(payload) < 5:
+            raise InvalidSDPResponseError(
+                f"Payload must be of 5 bytes length. "
+                f"Provided: {len(payload)} bytes ({payload})"
+            )
+
+        esdp_version = int.from_bytes(payload[:2], "big"),                 # ESDP Version
+        maxpayloadsize = int.from_bytes(payload[2:4], "big"),              # MaxPayload Size
+        [prt,ipv6addr,sec] = esdp_asn1_main.decode_data(payload[4:])        # ESDP Extensions
+
+        logger.info(f'SECC requested Security = {str(sec)}')
+
+        if str(sec)=='tcpOnly': # This is to change the ESDP format back to native SDP format for communicating TCP vs TLS.
+            secint=16 # For TCP
+        else:
+            secint=0 # Anything else than TCP is TLS for native format.
+
+        return ESDPResponse( 
+        int.from_bytes(payload[:2], "big"),                 # ESDP Version
+        int.from_bytes(payload[2:4], "big"),                # MaxPayload Size
+        ipv6addr,                                           # IPv6 address
+        int.from_bytes(bytes(prt), "big"),                  # Port
+        Security(secint),                                   # Security
+        Transport(0),                                       # Transport protocol hard coded to 0x00 or TCP
+        )
+
+    def __len__(self):
+        return 24
+
+    def __repr__(self):
+        ip_address: str = IPv6Address(int.from_bytes(self.ip_address, "big")).compressed
+        return (
+            f"[ ESDP Version: {self.esdp_version}"
+            f", Max Payload Size: {self.max_payload_size}"
+            f", IP address: {ip_address}"
+            f", Port: {str(self.port)} "
+            f", Security: {self.security.name} "
+            f", Transport: {self.transport_protocol.name} ]"
+        )
+
+def create_esdp_response(
+    esdp_request: Union[SDPRequest, SDPRequestWireless, ESDPRequest],
+    esdp_version: int,
+    max_payload_size: int,
+    ip_address: bytes,
+    port: int,
+    tls_enabled: bool,
+) -> Union[SDPResponse, SDPResponseWireless, ESDPResponse]:
+    """
+    Creates an SDP response based on the incoming SDP request
+
+    Args:
+        sdp_request: The SDP request received from the UDP client
+        ip_address: The IP address of the TCP server
+        port: The port of the TCP or TLS server
+        tls_enabled: Indicates if a TLS enabled server is available on SECC
+
+    Returns:
+        An SDPResponse or an SDPResponseWireless, depending on the SDP
+        request type
+    """
+    esdp_response = None
+
+    if tls_enabled:
+        security = Security.TLS
+    else:
+        security = Security.NO_TLS
+
+    if isinstance(sdp_request, SDPRequest):
+        sdp_response = SDPResponse(ip_address, port, security, Transport.TCP)
+    elif isinstance(esdp_request, ESDPRequest):
+        esdp_response = ESDPResponse(esdp_version, max_payload_size, ip_address, port, security, Transport.TCP)
+    elif isinstance(sdp_request, SDPRequestWireless):
+        raise NotImplementedError("SDPRequestWireless is not yet implemented")
+    else:
+        logger.error("Invalid ESDP request, will ignore")
+
+    return esdp_response
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/network.py /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/network.py
new file mode 100644
index 9d7fc6e..75c56a6 100644
--- /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/network.py
+++ /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/network.py
@@ -17,6 +17,7 @@ logger = logging.getLogger(__name__)
 
 SDP_MULTICAST_GROUP = "FF02::1"
 SDP_SERVER_PORT = 15118
+ESDP_SERVER_PORT = 15200 # Added by MS for ESDP
 
 
 def _get_link_local_addr(nic: str) -> Union[IPv6Address, None]:
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/V2G_CI_AppProtocol.xsd /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/V2G_CI_AppProtocol.xsd
new file mode 000000
index 98b84fc..0000000
--- /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/V2G_CI_AppProtocol.xsd
+++ /dev/null
@@ -1,55 +0,0 @@
-<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" 
-	xmlns="urn:iso:15118:2:2010:AppProtocol" 
-	targetNamespace="urn:iso:15118:2:2010:AppProtocol">
-	
-	<xs:element name="supportedAppProtocolReq">
-		<xs:complexType>
-			<xs:sequence>
-				<xs:element name="AppProtocol" type="AppProtocolType" maxOccurs="20"/>
-			</xs:sequence>
-		</xs:complexType>
-	</xs:element>
-	<xs:element name="supportedAppProtocolRes">
-		<xs:complexType>
-			<xs:sequence>
-				<xs:element name="ResponseCode" type="responseCodeType"/>
-				<xs:element name="SchemaID" type="idType" minOccurs="0"/>
-			</xs:sequence>
-		</xs:complexType>
-	</xs:element>
-	<xs:complexType name="AppProtocolType">
-		<xs:sequence>
-			<xs:element name="ProtocolNamespace" type="protocolNamespaceType"/>
-			<xs:element name="VersionNumberMajor" type="xs:unsignedInt"/>
-			<xs:element name="VersionNumberMinor" type="xs:unsignedInt"/>
-			<xs:element name="SchemaID" type="idType"/>
-			<xs:element name="Priority" type="priorityType"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:simpleType name="idType">
-		<xs:restriction base="xs:unsignedByte"/>
-	</xs:simpleType>
-	<xs:simpleType name="protocolNameType">
-		<xs:restriction base="xs:string">
-			<xs:maxLength value="30"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="protocolNamespaceType">
-		<xs:restriction base="xs:anyURI">
-			<xs:maxLength value="100"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="priorityType">
-		<xs:restriction base="xs:unsignedByte">
-			<xs:minInclusive value="1"/>
-			<xs:maxInclusive value="20"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="responseCodeType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="OK_SuccessfulNegotiation"/>
-			<xs:enumeration value="OK_SuccessfulNegotiationWithMinorDeviation"/>
-			<xs:enumeration value="Failed_NoNegotiation"/>
-		</xs:restriction>
-	</xs:simpleType>
-</xs:schema>
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/din_spec/V2G_CI_MsgBody.xsd /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/din_spec/V2G_CI_MsgBody.xsd
new file mode 000000
index 39785b7..0000000
--- /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/din_spec/V2G_CI_MsgBody.xsd
+++ /dev/null
@@ -1,477 +0,0 @@
-<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" 
-xmlns="urn:din:70121:2012:MsgBody" 
-xmlns:v2gci_d="urn:din:70121:2012:MsgDef"
-xmlns:v2gci_t="urn:din:70121:2012:MsgDataTypes"
-targetNamespace="urn:din:70121:2012:MsgBody"
-elementFormDefault="qualified" attributeFormDefault="unqualified">
-  <xs:import namespace="urn:din:70121:2012:MsgDef" schemaLocation="V2G_CI_MsgDef.xsd"/>
-  <xs:import namespace="urn:din:70121:2012:MsgDataTypes" schemaLocation="V2G_CI_MsgDataTypes.xsd"/>
-  <!-- ....................... -->
-  <!-- Common Messages (AC/DC) -->
-  <!-- ....................... -->
-  <!--  -->
-  <!-- SessionSetup -->
-  <!-- -->
-  <xs:element name="SessionSetupReq" type="SessionSetupReqType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="SessionSetupReqType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="EVCCID" type="v2gci_t:evccIDType"/>
-        </xs:sequence>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <xs:element name="SessionSetupRes" type="SessionSetupResType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="SessionSetupResType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-          <xs:element name="EVSEID" type="v2gci_t:evseIDType"/>
-          <xs:element name="DateTimeNow" type="xs:long" minOccurs="0"/>
-        </xs:sequence>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <!-- -->
-  <!-- Service Discovery -->
-  <!-- -->
-  <xs:element name="ServiceDiscoveryReq" type="ServiceDiscoveryReqType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="ServiceDiscoveryReqType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="ServiceScope" type="v2gci_t:serviceScopeType" minOccurs="0"/>
-          <xs:element name="ServiceCategory" type="v2gci_t:serviceCategoryType" minOccurs="0"/>
-        </xs:sequence>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <xs:element name="ServiceDiscoveryRes" type="ServiceDiscoveryResType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="ServiceDiscoveryResType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-          <xs:element name="PaymentOptions" type="v2gci_t:PaymentOptionsType"/>
-          <xs:element name="ChargeService" type="v2gci_t:ServiceChargeType"/>
-          <xs:element name="ServiceList" type="v2gci_t:ServiceTagListType" minOccurs="0"/>
-        </xs:sequence>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <!-- -->
-  <!-- Service Detail -->
-  <!-- -->
-  <xs:element name="ServiceDetailReq" type="ServiceDetailReqType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="ServiceDetailReqType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="ServiceID" type="v2gci_t:serviceIDType"/>
-        </xs:sequence>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <xs:element name="ServiceDetailRes" type="ServiceDetailResType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="ServiceDetailResType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-          <xs:element name="ServiceID" type="v2gci_t:serviceIDType"/>
-          <xs:element name="ServiceParameterList" type="v2gci_t:ServiceParameterListType" minOccurs="0"/>
-        </xs:sequence>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <!-- -->
-  <!-- Service Payment & Selection -->
-  <!-- -->
-  <xs:element name="ServicePaymentSelectionReq" type="ServicePaymentSelectionReqType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="ServicePaymentSelectionReqType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="SelectedPaymentOption" type="v2gci_t:paymentOptionType"/>
-          <xs:element name="SelectedServiceList" type="v2gci_t:SelectedServiceListType"/>
-        </xs:sequence>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <xs:element name="ServicePaymentSelectionRes" type="ServicePaymentSelectionResType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="ServicePaymentSelectionResType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-        </xs:sequence>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <!-- -->
-  <!-- Payment Details -->
-  <!-- -->
-  <xs:element name="PaymentDetailsReq" type="PaymentDetailsReqType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="PaymentDetailsReqType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="ContractID" type="v2gci_t:contractIDType"/>
-          <xs:element name="ContractSignatureCertChain" type="v2gci_t:CertificateChainType"/>
-        </xs:sequence>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <xs:element name="PaymentDetailsRes" type="PaymentDetailsResType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="PaymentDetailsResType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-          <xs:element name="GenChallenge" type="v2gci_t:genChallengeType"/>
-          <xs:element name="DateTimeNow" type="xs:long"/>
-        </xs:sequence>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <!-- -->
-  <!-- Contract Authentification -->
-  <!-- -->
-  <xs:element name="ContractAuthenticationReq" type="ContractAuthenticationReqType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="ContractAuthenticationReqType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="GenChallenge" type="v2gci_t:genChallengeType" minOccurs="0"/>
-        </xs:sequence>
-        <xs:attribute name="Id" type="xs:IDREF"/>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <xs:element name="ContractAuthenticationRes" type="ContractAuthenticationResType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="ContractAuthenticationResType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-          <xs:element name="EVSEProcessing" type="v2gci_t:EVSEProcessingType"/>
-        </xs:sequence>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <!-- -->
-  <!-- Charge Parameter Discovery -->
-  <!-- -->
-  <xs:element name="ChargeParameterDiscoveryReq" type="ChargeParameterDiscoveryReqType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="ChargeParameterDiscoveryReqType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="EVRequestedEnergyTransferType" type="v2gci_t:EVRequestedEnergyTransferType"/>
-          <xs:element ref="v2gci_t:EVChargeParameter"/>
-        </xs:sequence>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <xs:element name="ChargeParameterDiscoveryRes" type="ChargeParameterDiscoveryResType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="ChargeParameterDiscoveryResType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-          <xs:element name="EVSEProcessing" type="v2gci_t:EVSEProcessingType"/>
-          <xs:element ref="v2gci_t:SASchedules"/>
-          <xs:element ref="v2gci_t:EVSEChargeParameter"/>
-        </xs:sequence>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <!-- -->
-  <!-- Power Delivery -->
-  <!-- -->
-  <xs:element name="PowerDeliveryReq" type="PowerDeliveryReqType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="PowerDeliveryReqType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="ReadyToChargeState" type="xs:boolean"/>
-          <xs:element name="ChargingProfile" type="v2gci_t:ChargingProfileType" minOccurs="0"/>
-          <xs:element ref="v2gci_t:EVPowerDeliveryParameter" minOccurs="0"/>
-        </xs:sequence>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <xs:element name="PowerDeliveryRes" type="PowerDeliveryResType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="PowerDeliveryResType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-          <xs:element ref="v2gci_t:EVSEStatus"/>
-        </xs:sequence>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <!-- -->
-  <!-- Charging Status -->
-  <!-- -->
-  <xs:element name="ChargingStatusReq" type="ChargingStatusReqType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="ChargingStatusReqType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence/>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <xs:element name="ChargingStatusRes" type="ChargingStatusResType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="ChargingStatusResType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-          <xs:element name="EVSEID" type="v2gci_t:evseIDType"/>
-          <xs:element name="SAScheduleTupleID" type="v2gci_t:SAIDType"/>
-          <xs:element name="EVSEMaxCurrent" type="v2gci_t:PhysicalValueType" minOccurs="0"/>
-          <xs:element name="MeterInfo" type="v2gci_t:MeterInfoType" minOccurs="0"/>
-          <xs:element name="ReceiptRequired" type="xs:boolean"/>
-          <xs:element name="AC_EVSEStatus" type="v2gci_t:AC_EVSEStatusType"/>
-        </xs:sequence>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <!-- -->
-  <!-- Metering Receipt -->
-  <!-- -->
-  <xs:element name="MeteringReceiptReq" type="MeteringReceiptReqType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="MeteringReceiptReqType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="SessionID" type="v2gci_t:sessionIDType"/>
-          <xs:element name="SAScheduleTupleID" type="v2gci_t:SAIDType" minOccurs="0"/>
-          <xs:element name="MeterInfo" type="v2gci_t:MeterInfoType"/>
-        </xs:sequence>
-        <xs:attribute name="Id" type="xs:IDREF"/>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <xs:element name="MeteringReceiptRes" type="MeteringReceiptResType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="MeteringReceiptResType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-          <xs:element name="AC_EVSEStatus" type="v2gci_t:AC_EVSEStatusType"/>
-        </xs:sequence>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <!-- -->
-  <!-- SessionStop -->
-  <!-- -->
-  <xs:element name="SessionStopReq" type="SessionStopType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="SessionStopType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence/>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <xs:element name="SessionStopRes" type="SessionStopResType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="SessionStopResType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-        </xs:sequence>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <!-- -->
-  <!-- Certificate Update -->
-  <!-- -->
-  <xs:element name="CertificateUpdateReq" type="CertificateUpdateReqType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="CertificateUpdateReqType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="ContractSignatureCertChain" type="v2gci_t:CertificateChainType"/>
-          <xs:element name="ContractID" type="v2gci_t:contractIDType"/>
-          <xs:element name="ListOfRootCertificateIDs" type="v2gci_t:ListOfRootCertificateIDsType"/>
-          <xs:element name="DHParams" type="v2gci_t:dHParamsType"/>
-        </xs:sequence>
-        <xs:attribute name="Id" type="xs:IDREF"/>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <xs:element name="CertificateUpdateRes" type="CertificateUpdateResType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="CertificateUpdateResType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-          <xs:element name="ContractSignatureCertChain" type="v2gci_t:CertificateChainType"/>
-          <xs:element name="ContractSignatureEncryptedPrivateKey" type="v2gci_t:privateKeyType"/>
-          <xs:element name="DHParams" type="v2gci_t:dHParamsType"/>
-          <xs:element name="ContractID" type="v2gci_t:contractIDType"/>
-          <xs:element name="RetryCounter" type="xs:short"/>
-        </xs:sequence>
-        <xs:attribute name="Id" type="xs:IDREF" use="required"/>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <!-- -->
-  <!-- Certificate Installation -->
-  <!-- -->
-  <xs:element name="CertificateInstallationReq" type="CertificateInstallationReqType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="CertificateInstallationReqType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="OEMProvisioningCert" type="v2gci_t:certificateType"/>
-          <xs:element name="ListOfRootCertificateIDs" type="v2gci_t:ListOfRootCertificateIDsType"/>
-          <xs:element name="DHParams" type="v2gci_t:dHParamsType"/>
-        </xs:sequence>
-        <xs:attribute name="Id" type="xs:IDREF" />
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <xs:element name="CertificateInstallationRes" type="CertificateInstallationResType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="CertificateInstallationResType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-          <xs:element name="ContractSignatureCertChain" type="v2gci_t:CertificateChainType"/>
-          <xs:element name="ContractSignatureEncryptedPrivateKey" type="v2gci_t:privateKeyType"/>
-          <xs:element name="DHParams" type="v2gci_t:dHParamsType"/>
-          <xs:element name="ContractID" type="v2gci_t:contractIDType"/>
-        </xs:sequence>
-        <xs:attribute name="Id" type="xs:IDREF" use="required"/>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <!-- -->
-  <!-- DC Messages -->
-  <!-- -->
-  <!-- -->
-  <!-- Cable Check -->
-  <!-- -->
-  <xs:element name="CableCheckReq" type="CableCheckReqType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="CableCheckReqType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="DC_EVStatus" type="v2gci_t:DC_EVStatusType"/>
-        </xs:sequence>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <xs:element name="CableCheckRes" type="CableCheckResType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="CableCheckResType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-          <xs:element name="DC_EVSEStatus" type="v2gci_t:DC_EVSEStatusType"/>
-          <xs:element name="EVSEProcessing" type="v2gci_t:EVSEProcessingType"/>
-        </xs:sequence>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <!-- -->
-  <!-- Pre-Charge -->
-  <!-- -->
-  <xs:element name="PreChargeReq" type="PreChargeReqType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="PreChargeReqType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="DC_EVStatus" type="v2gci_t:DC_EVStatusType"/>
-          <xs:element name="EVTargetVoltage" type="v2gci_t:PhysicalValueType"/>
-          <xs:element name="EVTargetCurrent" type="v2gci_t:PhysicalValueType"/>
-        </xs:sequence>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <xs:element name="PreChargeRes" type="PreChargeResType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="PreChargeResType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-          <xs:element name="DC_EVSEStatus" type="v2gci_t:DC_EVSEStatusType"/>
-          <xs:element name="EVSEPresentVoltage" type="v2gci_t:PhysicalValueType"/>
-        </xs:sequence>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <!-- -->
-  <!-- Current Demand -->
-  <!-- -->
-  <xs:element name="CurrentDemandReq" type="CurrentDemandReqType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="CurrentDemandReqType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="DC_EVStatus" type="v2gci_t:DC_EVStatusType"/>
-          <xs:element name="EVTargetCurrent" type="v2gci_t:PhysicalValueType"/>
-          <xs:element name="EVMaximumVoltageLimit" type="v2gci_t:PhysicalValueType" minOccurs="0"/>
-          <xs:element name="EVMaximumCurrentLimit" type="v2gci_t:PhysicalValueType" minOccurs="0"/>
-          <xs:element name="EVMaximumPowerLimit" type="v2gci_t:PhysicalValueType" minOccurs="0"/>
-          <xs:element name="BulkChargingComplete" type="xs:boolean" minOccurs="0"/>
-          <xs:element name="ChargingComplete" type="xs:boolean"/>
-          <xs:element name="RemainingTimeToFullSoC" type="v2gci_t:PhysicalValueType" minOccurs="0"/>
-          <xs:element name="RemainingTimeToBulkSoC" type="v2gci_t:PhysicalValueType" minOccurs="0"/>
-          <xs:element name="EVTargetVoltage" type="v2gci_t:PhysicalValueType"/>
-        </xs:sequence>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <xs:element name="CurrentDemandRes" type="CurrentDemandResType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="CurrentDemandResType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-          <xs:element name="DC_EVSEStatus" type="v2gci_t:DC_EVSEStatusType"/>
-          <xs:element name="EVSEPresentVoltage" type="v2gci_t:PhysicalValueType"/>
-          <xs:element name="EVSEPresentCurrent" type="v2gci_t:PhysicalValueType"/>
-          <xs:element name="EVSECurrentLimitAchieved" type="xs:boolean"/>
-          <xs:element name="EVSEVoltageLimitAchieved" type="xs:boolean"/>
-          <xs:element name="EVSEPowerLimitAchieved" type="xs:boolean"/>
-          <xs:element name="EVSEMaximumVoltageLimit" type="v2gci_t:PhysicalValueType" minOccurs="0"/>
-          <xs:element name="EVSEMaximumCurrentLimit" type="v2gci_t:PhysicalValueType" minOccurs="0"/>
-          <xs:element name="EVSEMaximumPowerLimit" type="v2gci_t:PhysicalValueType" minOccurs="0"/>
-        </xs:sequence>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <!-- -->
-  <!-- Welding Detection -->
-  <!-- -->
-  <xs:element name="WeldingDetectionReq" type="WeldingDetectionReqType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="WeldingDetectionReqType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="DC_EVStatus" type="v2gci_t:DC_EVStatusType"/>
-        </xs:sequence>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-  <xs:element name="WeldingDetectionRes" type="WeldingDetectionResType" substitutionGroup="v2gci_d:BodyElement"/>
-  <xs:complexType name="WeldingDetectionResType">
-    <xs:complexContent>
-      <xs:extension base="v2gci_d:BodyBaseType">
-        <xs:sequence>
-          <xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-          <xs:element name="DC_EVSEStatus" type="v2gci_t:DC_EVSEStatusType"/>
-          <xs:element name="EVSEPresentVoltage" type="v2gci_t:PhysicalValueType"/>
-        </xs:sequence>
-      </xs:extension>
-    </xs:complexContent>
-  </xs:complexType>
-</xs:schema>
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/din_spec/V2G_CI_MsgDataTypes.xsd /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/din_spec/V2G_CI_MsgDataTypes.xsd
new file mode 000000
index 7bea43c..0000000
--- /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/din_spec/V2G_CI_MsgDataTypes.xsd
+++ /dev/null
@@ -1,694 +0,0 @@
-<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
-xmlns="urn:din:70121:2012:MsgDataTypes"
-xmlns:v2gci_b="urn:din:70121:2012:MsgBody"
-targetNamespace="urn:din:70121:2012:MsgDataTypes"
-elementFormDefault="qualified"
-attributeFormDefault="unqualified">
-<xs:import namespace="urn:din:70121:2012:MsgBody" schemaLocation="V2G_CI_MsgBody.xsd"/>
-
-<!-- =================== -->
-<!-- Complex types -->
-<!-- =================== -->
-<!-- -->
-<!-- service-related types -->
-<!-- -->
-<xs:complexType name="ServiceType">
-  <xs:sequence>
-    <xs:element name="ServiceTag" type="ServiceTagType"/>
-    <xs:element name="FreeService" type="xs:boolean"/>
-  </xs:sequence>
-</xs:complexType>
-<xs:complexType name="ServiceTagListType">
-  <xs:sequence>
-    <xs:element name="Service" type="ServiceType" maxOccurs="unbounded"/>
-  </xs:sequence>
-</xs:complexType>
-<xs:complexType name="ServiceTagType">
-  <xs:sequence>
-    <xs:element name="ServiceID" type="serviceIDType"/>
-    <xs:element name="ServiceName" type="serviceNameType" minOccurs="0"/>
-    <xs:element name="ServiceCategory" type="serviceCategoryType"/>
-    <xs:element name="ServiceScope" type="serviceScopeType" minOccurs="0"/>
-  </xs:sequence>
-</xs:complexType>
-<xs:complexType name="SelectedServiceListType">
-  <xs:sequence>
-    <xs:element name="SelectedService" type="SelectedServiceType" maxOccurs="unbounded"/>
-  </xs:sequence>
-</xs:complexType>
-<xs:complexType name="SelectedServiceType">
-  <xs:sequence>
-    <xs:element name="ServiceID" type="serviceIDType"/>
-    <xs:element name="ParameterSetID" type="xs:short" minOccurs="0"/>
-  </xs:sequence>
-</xs:complexType>
-<xs:complexType name="ServiceParameterListType">
-  <xs:sequence>
-    <xs:element name="ParameterSet" type="ParameterSetType" maxOccurs="unbounded"/>
-  </xs:sequence>
-</xs:complexType>
-<xs:complexType name="ParameterSetType">
-  <xs:sequence>
-    <xs:element name="ParameterSetID" type="xs:short"/>
-    <xs:element name="Parameter" type="ParameterType" maxOccurs="unbounded"/>
-  </xs:sequence>
-</xs:complexType>
-<xs:complexType name="ParameterType">
-  <xs:choice>
-    <xs:element name="boolValue" type="xs:boolean"/>
-    <xs:element name="byteValue" type="xs:byte"/>
-    <xs:element name="shortValue" type="xs:short"/>
-    <xs:element name="intValue" type="xs:int"/>
-    <xs:element name="physicalValue" type="PhysicalValueType"/>
-    <xs:element name="stringValue" type="xs:string"/>
-  </xs:choice>
-  <xs:attribute name="Name" type="xs:string" use="required"/>
-  <xs:attribute name="ValueType" type="valueType" use="required"/>
-</xs:complexType>
-<xs:simpleType name="valueType">
-  <xs:restriction base="xs:string">
-    <xs:enumeration value="bool"/>
-    <xs:enumeration value="byte"/>
-    <xs:enumeration value="short"/>
-    <xs:enumeration value="int"/>
-    <xs:enumeration value="physicalValue"/>
-    <xs:enumeration value="string"/>
-  </xs:restriction>
-</xs:simpleType>
-<xs:element name="ServiceCharge" type="ServiceChargeType"/>
-<xs:complexType name="ServiceChargeType">
-  <xs:complexContent>
-    <xs:extension base="ServiceType">
-      <xs:sequence>
-        <xs:element name="EnergyTransferType" type="EVSESupportedEnergyTransferType"/>
-      </xs:sequence>
-    </xs:extension>
-  </xs:complexContent>
-</xs:complexType>
-<!-- -->
-<!-- security related types -->
-<!-- -->
-<xs:complexType name="CertificateChainType">
-  <xs:sequence>
-    <xs:element name="Certificate" type="certificateType"/>
-    <xs:element name="SubCertificates" type="SubCertificatesType" minOccurs="0"/>
-  </xs:sequence>
-</xs:complexType>
-<xs:complexType name="SubCertificatesType">
-  <xs:sequence>
-    <xs:element name="Certificate" type="certificateType" maxOccurs="unbounded"/>
-  </xs:sequence>
-</xs:complexType>
-<xs:complexType name="ListOfRootCertificateIDsType">
-  <xs:sequence>
-    <xs:element name="RootCertificateID" type="rootCertificateIDType" maxOccurs="unbounded"/>
-  </xs:sequence>
-</xs:complexType>
-<!-- -->
-<!-- metering related types -->
-<!-- -->
-<xs:complexType name="MeterInfoType">
-  <xs:sequence>
-    <xs:element name="MeterID" type="meterIDType" />
-    <xs:element name="MeterReading" type="PhysicalValueType" minOccurs="0"/>
-    <xs:element name="SigMeterReading" type="sigMeterReadingType" minOccurs="0"/>
-    <xs:element name="MeterStatus" type="meterStatusType" minOccurs="0"/>
-    <xs:element name="TMeter" type="xs:long" minOccurs="0"/>
-  </xs:sequence>
-</xs:complexType>
-<xs:simpleType name="meterStatusType">
-  <xs:restriction base="xs:short"/>
-</xs:simpleType>
-<!-- -->
-<!-- Physical value type -->
-<!-- -->
-<xs:complexType name="PhysicalValueType">
-  <xs:sequence>
-    <xs:element name="Multiplier" type="unitMultiplierType"/>
-    <xs:element name="Unit" type="unitSymbolType" minOccurs="0"/>
-    <xs:element name="Value" type="xs:short"/>
-  </xs:sequence>
-</xs:complexType>
-<!-- -->
-<!-- header related types -->
-<!-- -->
-<xs:complexType name="NotificationType">
-  <xs:sequence>
-    <xs:element name="FaultCode" type="faultCodeType"/>
-    <xs:element name="FaultMsg" type="faultMsgType" minOccurs="0"/>
-  </xs:sequence>
-</xs:complexType>
-<!-- -->
-<!-- Tariff related types -->
-<!-- -->
-<xs:complexType name="SASchedulesType" abstract="true"/>
-<xs:element name="SASchedules" type="SASchedulesType"/>
-<xs:element name="SAScheduleList" type="SAScheduleListType" substitutionGroup="SASchedules"/>
-<xs:complexType name="SAScheduleListType">
-  <xs:complexContent>
-    <xs:extension base="SASchedulesType">
-      <xs:sequence>
-        <xs:element name="SAScheduleTuple" type="SAScheduleTupleType" maxOccurs="unbounded"/>
-      </xs:sequence>
-    </xs:extension>
-  </xs:complexContent>
-</xs:complexType>
-<xs:complexType name="SAScheduleTupleType">
-  <xs:sequence>
-    <xs:element name="SAScheduleTupleID" type="SAIDType"/>
-    <xs:element name="PMaxSchedule" type="PMaxScheduleType"/>
-    <xs:element name="SalesTariff" type="SalesTariffType" minOccurs="0"/>
-  </xs:sequence>
-</xs:complexType>
-<xs:complexType name="SalesTariffType">
-  <xs:sequence>
-    <xs:element name="SalesTariffID" type="SAIDType"/>
-    <xs:element name="SalesTariffDescription" type="tariffDescriptionType" minOccurs="0"/>
-    <xs:element name="NumEPriceLevels" type="xs:unsignedByte"/>
-    <xs:element ref="SalesTariffEntry" maxOccurs="unbounded"/>
-  </xs:sequence>
-  <xs:attribute name="Id" type="xs:IDREF" use="required"/>
-</xs:complexType>
-<xs:complexType name="PMaxScheduleType">
-  <xs:sequence>
-    <xs:element name="PMaxScheduleID" type="SAIDType"/>
-    <xs:element ref="PMaxScheduleEntry" maxOccurs="unbounded"/>
-  </xs:sequence>
-</xs:complexType>
-<xs:element name="Entry" type="EntryType"/>
-<xs:complexType name="EntryType" abstract="true">
-  <xs:sequence>
-    <xs:element ref="TimeInterval"/>
-  </xs:sequence>
-</xs:complexType>
-<xs:element name="SalesTariffEntry" type="SalesTariffEntryType" substitutionGroup="Entry"/>
-<xs:complexType name="SalesTariffEntryType">
-  <xs:complexContent>
-    <xs:extension base="EntryType">
-      <xs:sequence>
-        <xs:element name="EPriceLevel" type="xs:unsignedByte"/>
-        <xs:element name="ConsumptionCost" type="ConsumptionCostType" minOccurs="0" maxOccurs="unbounded"/>
-      </xs:sequence>
-    </xs:extension>
-  </xs:complexContent>
-</xs:complexType>
-<xs:element name="PMaxScheduleEntry" type="PMaxScheduleEntryType" substitutionGroup="Entry"/>
-<xs:complexType name="PMaxScheduleEntryType">
-  <xs:complexContent>
-    <xs:extension base="EntryType">
-      <xs:sequence>
-        <xs:element name="PMax" type="PMaxType"/>
-      </xs:sequence>
-    </xs:extension>
-  </xs:complexContent>
-</xs:complexType>
-<xs:complexType name="IntervalType" abstract="true"/>
-<xs:element name="TimeInterval" type="IntervalType"/>
-<xs:element name="RelativeTimeInterval" type="RelativeTimeIntervalType" substitutionGroup="TimeInterval"/>
-<xs:complexType name="RelativeTimeIntervalType">
-  <xs:complexContent>
-    <xs:extension base="IntervalType">
-      <xs:sequence>
-        <xs:element name="start" type="xs:unsignedInt"/>
-        <xs:element name="duration" type="xs:unsignedInt" minOccurs="0"/>
-      </xs:sequence>
-    </xs:extension>
-  </xs:complexContent>
-</xs:complexType>
-<xs:complexType name="ConsumptionCostType">
-  <xs:sequence>
-    <xs:element name="startValue" type="xs:unsignedInt"/>
-    <xs:element name="Cost" type="CostType" minOccurs="0" maxOccurs="unbounded"/>
-  </xs:sequence>
-</xs:complexType>
-<xs:complexType name="CostType">
-  <xs:sequence>
-    <xs:element name="costKind" type="costKindType"/>
-    <xs:element name="amount" type="xs:unsignedInt"/>
-    <xs:element name="amountMultiplier" type="unitMultiplierType" minOccurs="0"/>
-  </xs:sequence>
-</xs:complexType>
-<!-- -->
-<!-- EV/EVSE related types -->
-<!-- -->
-<xs:complexType name="EVSEStatusType" abstract="true"/>
-<xs:element name="EVSEStatus" type="EVSEStatusType"/>
-<xs:element name="AC_EVSEStatus" type="AC_EVSEStatusType" substitutionGroup="EVSEStatus"/>
-<xs:complexType name="AC_EVSEStatusType">
-  <xs:complexContent>
-    <xs:extension base="EVSEStatusType">
-      <xs:sequence>
-        <xs:element name="PowerSwitchClosed" type="xs:boolean"/>
-        <xs:element name="RCD" type="xs:boolean"/>
-        <xs:element name="NotificationMaxDelay" type="xs:unsignedInt"/>
-        <xs:element name="EVSENotification" type="EVSENotificationType"/>
-      </xs:sequence>
-    </xs:extension>
-  </xs:complexContent>
-</xs:complexType>
-<xs:complexType name="EVStatusType" abstract="true"/>
-<xs:element name="EVStatus" type="EVStatusType"/>
-<xs:element name="DC_EVSEStatus" type="DC_EVSEStatusType" substitutionGroup="EVSEStatus"/>
-<xs:complexType name="DC_EVSEStatusType">
-  <xs:complexContent>
-    <xs:extension base="EVSEStatusType">
-      <xs:sequence>
-        <xs:element name="EVSEIsolationStatus" type="isolationLevelType" minOccurs="0"/>
-        <xs:element name="EVSEStatusCode" type="DC_EVSEStatusCodeType"/>
-        <xs:element name="NotificationMaxDelay" type="xs:unsignedInt"/>
-        <xs:element name="EVSENotification" type="EVSENotificationType"/>
-      </xs:sequence>
-    </xs:extension>
-  </xs:complexContent>
-</xs:complexType>
-<xs:element name="DC_EVStatus" type="DC_EVStatusType" substitutionGroup="EVStatus"/>
-<xs:complexType name="DC_EVStatusType">
-  <xs:complexContent>
-    <xs:extension base="EVStatusType">
-      <xs:sequence>
-        <xs:element name="EVReady" type="xs:boolean"/>
-        <xs:element name="EVCabinConditioning" type="xs:boolean" minOccurs="0"/>
-        <xs:element name="EVRESSConditioning" type="xs:boolean" minOccurs="0"/>
-        <xs:element name="EVErrorCode" type="DC_EVErrorCodeType"/>
-        <xs:element name="EVRESSSOC" type="percentValueType"/>
-      </xs:sequence>
-    </xs:extension>
-  </xs:complexContent>
-</xs:complexType>
-<!-- -->
-<!-- EVSE/EV Charge Parameter related types -->
-<!-- -->
-<xs:complexType name="EVChargeParameterType" abstract="true"/>
-<xs:element name="EVChargeParameter" type="EVChargeParameterType"/>
-<xs:element name="AC_EVChargeParameter" type="AC_EVChargeParameterType" substitutionGroup="EVChargeParameter"/>
-<xs:complexType name="AC_EVChargeParameterType">
-  <xs:complexContent>
-    <xs:extension base="EVChargeParameterType">
-      <xs:sequence>
-        <xs:element name="DepartureTime" type="xs:unsignedInt"/>
-        <xs:element name="EAmount" type="PhysicalValueType"/>
-        <xs:element name="EVMaxVoltage" type="PhysicalValueType"/>
-        <xs:element name="EVMaxCurrent" type="PhysicalValueType"/>
-        <xs:element name="EVMinCurrent" type="PhysicalValueType"/>
-      </xs:sequence>
-    </xs:extension>
-  </xs:complexContent>
-</xs:complexType>
-<xs:element name="DC_EVChargeParameter" type="DC_EVChargeParameterType" substitutionGroup="EVChargeParameter"/>
-<xs:complexType name="DC_EVChargeParameterType">
-  <xs:complexContent>
-    <xs:extension base="EVChargeParameterType">
-      <xs:sequence>
-        <xs:element name="DC_EVStatus" type="DC_EVStatusType"/>
-        <xs:element name="EVMaximumCurrentLimit" type="PhysicalValueType"/>
-        <xs:element name="EVMaximumPowerLimit" type="PhysicalValueType" minOccurs="0"/>
-        <xs:element name="EVMaximumVoltageLimit" type="PhysicalValueType"/>
-        <xs:element name="EVEnergyCapacity" type="PhysicalValueType" minOccurs="0"/>
-        <xs:element name="EVEnergyRequest" type="PhysicalValueType" minOccurs="0"/>
-        <xs:element name="FullSOC" type="percentValueType" minOccurs="0"/>
-        <xs:element name="BulkSOC" type="percentValueType" minOccurs="0"/>
-      </xs:sequence>
-    </xs:extension>
-  </xs:complexContent>
-</xs:complexType>
-<xs:complexType name="EVSEChargeParameterType" abstract="true"/>
-<xs:element name="EVSEChargeParameter" type="EVSEChargeParameterType"/>
-<xs:element name="AC_EVSEChargeParameter" type="AC_EVSEChargeParameterType" substitutionGroup="EVSEChargeParameter"/>
-<xs:complexType name="AC_EVSEChargeParameterType">
-  <xs:complexContent>
-    <xs:extension base="EVSEChargeParameterType">
-      <xs:sequence>
-        <xs:element name="AC_EVSEStatus" type="AC_EVSEStatusType"/>
-        <xs:element name="EVSEMaxVoltage" type="PhysicalValueType"/>
-        <xs:element name="EVSEMaxCurrent" type="PhysicalValueType"/>
-        <xs:element name="EVSEMinCurrent" type="PhysicalValueType"/>
-      </xs:sequence>
-    </xs:extension>
-  </xs:complexContent>
-</xs:complexType>
-<xs:element name="DC_EVSEChargeParameter" type="DC_EVSEChargeParameterType" substitutionGroup="EVSEChargeParameter"/>
-<xs:complexType name="DC_EVSEChargeParameterType">
-  <xs:complexContent>
-    <xs:extension base="EVSEChargeParameterType">
-      <xs:sequence>
-        <xs:element name="DC_EVSEStatus" type="DC_EVSEStatusType"/>
-        <xs:element name="EVSEMaximumCurrentLimit" type="PhysicalValueType"/>
-        <xs:element name="EVSEMaximumPowerLimit" type="PhysicalValueType" minOccurs="0"/>
-        <xs:element name="EVSEMaximumVoltageLimit" type="PhysicalValueType"/>
-        <xs:element name="EVSEMinimumCurrentLimit" type="PhysicalValueType"/>
-        <xs:element name="EVSEMinimumVoltageLimit" type="PhysicalValueType"/>
-        <xs:element name="EVSECurrentRegulationTolerance" type="PhysicalValueType" minOccurs="0"/>
-        <xs:element name="EVSEPeakCurrentRipple" type="PhysicalValueType"/>
-        <xs:element name="EVSEEnergyToBeDelivered" type="PhysicalValueType" minOccurs="0"/>
-      </xs:sequence>
-    </xs:extension>
-  </xs:complexContent>
-</xs:complexType>
-<!-- -->
-<!-- EV Power Delivery related types -->
-<!-- -->
-<xs:complexType name="EVPowerDeliveryParameterType" abstract="true"/>
-<xs:element name="EVPowerDeliveryParameter" type="EVPowerDeliveryParameterType"/>
-<xs:element name="DC_EVPowerDeliveryParameter" type="DC_EVPowerDeliveryParameterType" substitutionGroup="EVPowerDeliveryParameter"/>
-<xs:complexType name="DC_EVPowerDeliveryParameterType">
-  <xs:complexContent>
-    <xs:extension base="EVPowerDeliveryParameterType">
-      <xs:sequence>
-        <xs:element name="DC_EVStatus" type="DC_EVStatusType"/>
-        <xs:element name="BulkChargingComplete" type="xs:boolean" minOccurs="0"/>
-        <xs:element name="ChargingComplete" type="xs:boolean"/>
-      </xs:sequence>
-    </xs:extension>
-  </xs:complexContent>
-</xs:complexType>
-<!-- -->
-<!-- ChargingProfileType -->
-<!-- -->
-<xs:complexType name="ChargingProfileType">
-  <xs:sequence>
-    <xs:element name="SAScheduleTupleID" type="SAIDType"/>
-    <xs:element name="ProfileEntry" type="ProfileEntryType" maxOccurs="unbounded"/>
-  </xs:sequence>
-</xs:complexType>
-<xs:complexType name="ProfileEntryType">
-  <xs:sequence>
-    <xs:element name="ChargingProfileEntryStart" type="xs:unsignedInt"/>
-    <xs:element name="ChargingProfileEntryMaxPower" type="PMaxType"/>
-  </xs:sequence>
-</xs:complexType>
-<!-- =================== -->
-<!-- Simple types -->
-<!-- =================== -->
-<!-- -->
-<!-- General Types -->
-<!-- -->
-<xs:simpleType name="PMaxType">
-  <xs:restriction base="xs:short"/>
-</xs:simpleType>
-<xs:simpleType name="percentValueType">
-  <xs:restriction base="xs:byte">
-    <xs:minInclusive value="0"/>
-    <xs:maxInclusive value="100"/>
-  </xs:restriction>
-</xs:simpleType>
-<xs:simpleType name="faultMsgType">
-  <xs:restriction base="xs:string">
-    <xs:maxLength value="64"/>
-  </xs:restriction>
-</xs:simpleType>
-<xs:simpleType name="EVSEProcessingType">
-  <xs:restriction base="xs:string">
-    <xs:enumeration value="Finished"/>
-    <xs:enumeration value="Ongoing"/>
-  </xs:restriction>
-</xs:simpleType>
-<xs:simpleType name="EVSENotificationType">
-  <xs:restriction base="xs:string">
-    <xs:enumeration value="None"/>
-    <xs:enumeration value="StopCharging"/>
-    <xs:enumeration value="ReNegotiation"/>
-  </xs:restriction>
-</xs:simpleType>
-<!-- -->
-<!-- service related types -->
-<!-- -->
-<xs:simpleType name="serviceNameType">
-  <xs:restriction base="xs:string">
-    <xs:maxLength value="32"/>
-  </xs:restriction>
-</xs:simpleType>
-<xs:simpleType name="serviceCategoryType">
-  <xs:restriction base="xs:string">
-    <xs:enumeration value="EVCharging"/>
-    <xs:enumeration value="Internet"/>
-    <xs:enumeration value="ContractCertificate"/>
-    <xs:enumeration value="OtherCustom"/>
-  </xs:restriction>
-</xs:simpleType>
-<xs:simpleType name="serviceScopeType">
-  <xs:restriction base="xs:string">
-    <xs:maxLength value="32"/>
-  </xs:restriction>
-</xs:simpleType>
-<!-- -->
-<!-- EnergyTransferType -->
-<!-- -->
-<xs:simpleType name="EVSESupportedEnergyTransferType">
-  <xs:restriction base="xs:string">
-    <xs:enumeration value="AC_single_phase_core"/>
-    <xs:enumeration value="AC_three_phase_core"/>
-    <xs:enumeration value="DC_core"/>
-    <xs:enumeration value="DC_extended"/>
-    <xs:enumeration value="DC_combo_core"/>
-    <xs:enumeration value="DC_dual"/>
-    <xs:enumeration value="AC_core1p_DC_extended"/>
-    <xs:enumeration value="AC_single_DC_core"/>
-    <xs:enumeration value="AC_single_phase_three_phase_core_DC_extended"/>
-    <xs:enumeration value="AC_core3p_DC_extended"/>
-  </xs:restriction>
-</xs:simpleType>
-<xs:simpleType name="EVRequestedEnergyTransferType">
-  <xs:restriction base="xs:string">
-    <xs:enumeration value="AC_single_phase_core"/>
-    <xs:enumeration value="AC_three_phase_core"/>
-    <xs:enumeration value="DC_core"/>
-    <xs:enumeration value="DC_extended"/>
-    <xs:enumeration value="DC_combo_core"/>
-    <xs:enumeration value="DC_unique"/>
-  </xs:restriction>
-</xs:simpleType>
-<!-- -->
-<!-- security types -->
-<!-- -->
-<xs:simpleType name="genChallengeType">
-  <xs:restriction base="xs:string"/>
-</xs:simpleType>
-<xs:simpleType name="certificateType">
-  <xs:restriction base="xs:base64Binary">
-    <xs:maxLength value="1200"/>
-  </xs:restriction>
-</xs:simpleType>
-<xs:simpleType name="rootCertificateIDType">
-  <xs:restriction base="xs:string">
-    <xs:maxLength value="40"/>
-  </xs:restriction>
-</xs:simpleType>
-<xs:simpleType name="dHParamsType">
-  <xs:restriction base="xs:base64Binary">
-    <xs:maxLength value="256"/>
-  </xs:restriction>
-</xs:simpleType>
-<xs:simpleType name="privateKeyType">
-  <xs:restriction base="xs:base64Binary">
-    <xs:maxLength value="128"/>
-  </xs:restriction>
-</xs:simpleType>
-<xs:simpleType name="sigMeterReadingType">
-  <xs:restriction base="xs:base64Binary">
-    <xs:maxLength value="32"/>
-  </xs:restriction>
-</xs:simpleType>
-<!-- -->
-<!-- Identification Numbers -->
-<!-- -->
-<xs:simpleType name="sessionIDType">
-  <xs:restriction base="xs:hexBinary">
-    <xs:maxLength value="8"/>
-  </xs:restriction>
-</xs:simpleType>
-<xs:simpleType name="evccIDType">
-  <xs:restriction base="xs:hexBinary">
-    <xs:maxLength value="8"/>
-  </xs:restriction>
-</xs:simpleType>
-<xs:simpleType name="evseIDType">
-  <xs:restriction base="xs:hexBinary">
-    <xs:maxLength value="32"/>
-  </xs:restriction>
-</xs:simpleType>
-<xs:simpleType name="serviceIDType">
-  <xs:restriction base="xs:unsignedShort"/>
-</xs:simpleType>
-<xs:simpleType name="contractIDType">
-  <xs:restriction base="xs:string">
-    <xs:maxLength value="24"/>
-  </xs:restriction>
-</xs:simpleType>
-<xs:simpleType name="meterIDType">
-  <xs:restriction base="xs:string">
-    <xs:maxLength value="32"/>
-  </xs:restriction>
-</xs:simpleType>
-<!-- -->
-<!-- Tariffs and payment -->
-<!-- -->
-<xs:simpleType name="SAIDType">
-  <xs:restriction base="xs:short"/>
-</xs:simpleType>
-<xs:simpleType name="tariffDescriptionType">
-  <xs:restriction base="xs:string">
-    <xs:maxLength value="32"/>
-  </xs:restriction>
-</xs:simpleType>
-<xs:simpleType name="costKindType">
-  <xs:restriction base="xs:string">
-    <xs:enumeration value="relativePricePercentage"/>
-    <xs:enumeration value="RenewableGenerationPercentage"/>
-    <xs:enumeration value="CarbonDioxideEmission"/>
-  </xs:restriction>
-</xs:simpleType>
-<xs:complexType name="PaymentOptionsType">
-  <xs:sequence>
-    <xs:element name="PaymentOption" type="paymentOptionType" maxOccurs="unbounded"/>
-  </xs:sequence>
-</xs:complexType>
-<xs:simpleType name="paymentOptionType">
-  <xs:restriction base="xs:string">
-    <xs:enumeration value="Contract"/>
-    <xs:enumeration value="ExternalPayment"/>
-  </xs:restriction>
-</xs:simpleType>
-<!-- -->
-<!-- Fault and Response Codes -->
-<!-- -->
-<xs:simpleType name="faultCodeType">
-  <xs:restriction base="xs:string">
-    <xs:enumeration value="ParsingError"/>
-    <xs:enumeration value="NoTLSRootCertificatAvailable"/>
-    <xs:enumeration value="UnknownError"/>
-  </xs:restriction>
-</xs:simpleType>
-<xs:simpleType name="responseCodeType">
-  <xs:restriction base="xs:string">
-    <xs:enumeration value="OK"/>
-    <xs:enumeration value="OK_NewSessionEstablished"/>
-    <xs:enumeration value="OK_OldSessionJoined"/>
-    <xs:enumeration value="OK_CertificateExpiresSoon"/>
-    <xs:enumeration value="FAILED"/>
-    <xs:enumeration value="FAILED_SequenceError"/>
-    <xs:enumeration value="FAILED_ServiceIDInvalid"/>
-    <xs:enumeration value="FAILED_UnknownSession"/>
-    <xs:enumeration value="FAILED_ServiceSelectionInvalid"/>
-    <xs:enumeration value="FAILED_PaymentSelectionInvalid"/>
-    <xs:enumeration value="FAILED_CertificateExpired"/>
-    <xs:enumeration value="FAILED_SignatureError"/>
-    <xs:enumeration value="FAILED_NoCertificateAvailable"/>
-    <xs:enumeration value="FAILED_CertChainError"/>
-    <xs:enumeration value="FAILED_ChallengeInvalid"/>
-    <xs:enumeration value="FAILED_ContractCanceled"/>
-    <xs:enumeration value="FAILED_WrongChargeParameter"/>
-    <xs:enumeration value="FAILED_PowerDeliveryNotApplied"/>
-    <xs:enumeration value="FAILED_TariffSelectionInvalid"/>
-    <xs:enumeration value="FAILED_ChargingProfileInvalid"/>
-    <xs:enumeration value="FAILED_EVSEPresentVoltageToLow"/>
-    <xs:enumeration value="FAILED_MeteringSignatureNotValid"/>
-    <xs:enumeration value="FAILED_WrongEnergyTransferType"/>
-  </xs:restriction>
-</xs:simpleType>
-<!-- -->
-<!-- Multiplier and Unit Types -->
-<!-- -->
-<xs:simpleType name="unitMultiplierType">
-  <xs:restriction base="xs:byte">
-    <xs:minInclusive value="-3"/>
-    <xs:maxInclusive value="3"/>
-  </xs:restriction>
-</xs:simpleType>
-<xs:simpleType name="unitSymbolType">
-  <xs:restriction base="xs:string">
-    <xs:enumeration value="h">
-      <xs:annotation>
-        <xs:documentation>Time in hours</xs:documentation>
-      </xs:annotation>
-    </xs:enumeration>
-    <xs:enumeration value="m">
-      <xs:annotation>
-        <xs:documentation>Time in minutes</xs:documentation>
-      </xs:annotation>
-    </xs:enumeration>
-    <xs:enumeration value="s">
-      <xs:annotation>
-        <xs:documentation>Time in seconds</xs:documentation>
-      </xs:annotation>
-    </xs:enumeration>
-    <xs:enumeration value="A">
-      <xs:annotation>
-        <xs:documentation>Current in Ampere</xs:documentation>
-      </xs:annotation>
-    </xs:enumeration>
-    <xs:enumeration value="Ah">
-      <xs:annotation>
-        <xs:documentation>Ampere hour</xs:documentation>
-      </xs:annotation>
-    </xs:enumeration>
-    <xs:enumeration value="V">
-      <xs:annotation>
-        <xs:documentation>Voltage in Volt</xs:documentation>
-      </xs:annotation>
-    </xs:enumeration>
-    <xs:enumeration value="VA">
-      <xs:annotation>
-        <xs:documentation>Apparent power in Volt Ampere</xs:documentation>
-      </xs:annotation>
-    </xs:enumeration>
-    <xs:enumeration value="W">
-      <xs:annotation>
-        <xs:documentation>Active power in Watt</xs:documentation>
-      </xs:annotation>
-    </xs:enumeration>
-    <xs:enumeration value="W/s">
-      <xs:annotation>
-        <xs:documentation>Watt per second</xs:documentation>
-      </xs:annotation>
-    </xs:enumeration>
-    <xs:enumeration value="Wh">
-      <xs:annotation>
-        <xs:documentation>Real energy in Watt hours</xs:documentation>
-      </xs:annotation>
-    </xs:enumeration>
-  </xs:restriction>
-</xs:simpleType>
-<!-- -->
-<!-- only DC related -->
-<!-- -->
-<xs:simpleType name="DC_EVSEStatusCodeType">
-  <xs:restriction base="xs:string">
-    <xs:enumeration value="EVSE_NotReady"/>
-    <xs:enumeration value="EVSE_Ready"/>
-    <xs:enumeration value="EVSE_Shutdown"/>
-    <xs:enumeration value="EVSE_UtilityInterruptEvent"/>
-    <xs:enumeration value="EVSE_IsolationMonitoringActive"/>
-    <xs:enumeration value="EVSE_EmergencyShutdown"/>
-    <xs:enumeration value="EVSE_Malfunction"/>
-    <xs:enumeration value="Reserved_8"/>
-    <xs:enumeration value="Reserved_9"/>
-    <xs:enumeration value="Reserved_A"/>
-    <xs:enumeration value="Reserved_B"/>
-    <xs:enumeration value="Reserved_C"/>
-  </xs:restriction>
-</xs:simpleType>
-<xs:simpleType name="isolationLevelType">
-  <xs:restriction base="xs:string">
-    <xs:enumeration value="Invalid"/>
-    <xs:enumeration value="Valid"/>
-    <xs:enumeration value="Warning"/>
-    <xs:enumeration value="Fault"/>
-  </xs:restriction>
-</xs:simpleType>
-<xs:simpleType name="DC_EVErrorCodeType">
-  <xs:restriction base="xs:string">
-    <xs:enumeration value="NO_ERROR"/>
-    <xs:enumeration value="FAILED_RESSTemperatureInhibit"/>
-    <xs:enumeration value="FAILED_EVShiftPosition"/>
-    <xs:enumeration value="FAILED_ChargerConnectorLockFault"/>
-    <xs:enumeration value="FAILED_EVRESSMalfunction"/>
-    <xs:enumeration value="FAILED_ChargingCurrentdifferential"/>
-    <xs:enumeration value="FAILED_ChargingVoltageOutOfRange"/>
-    <xs:enumeration value="Reserved_A"/>
-    <xs:enumeration value="Reserved_B"/>
-    <xs:enumeration value="Reserved_C"/>
-    <xs:enumeration value="FAILED_ChargingSystemIncompatibility"/>
-    <xs:enumeration value="NoData"/>
-  </xs:restriction>
-</xs:simpleType>
-</xs:schema>
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/din_spec/V2G_CI_MsgDef.xsd /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/din_spec/V2G_CI_MsgDef.xsd
new file mode 000000
index 974ac0a..0000000
--- /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/din_spec/V2G_CI_MsgDef.xsd
+++ /dev/null
@@ -1,20 +0,0 @@
-<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="urn:din:70121:2012:MsgDef" xmlns="urn:din:70121:2012:MsgDef" xmlns:v2gci_h="urn:din:70121:2012:MsgHeader" elementFormDefault="qualified" attributeFormDefault="unqualified">
-  <xs:import namespace="urn:din:70121:2012:MsgHeader" schemaLocation="V2G_CI_MsgHeader.xsd"/>
-  <!-- Message Structure -->
-  <xs:element name="V2G_Message">
-    <xs:complexType>
-      <xs:sequence>
-        <xs:element name="Header" type="v2gci_h:MessageHeaderType"/>
-        <xs:element name="Body" type="BodyType"/>
-      </xs:sequence>
-    </xs:complexType>
-  </xs:element>
-  <!-- Body -->
-  <xs:complexType name="BodyType">
-    <xs:sequence>
-      <xs:element ref="BodyElement" minOccurs="0"/>
-    </xs:sequence>
-  </xs:complexType>
-  <xs:element name="BodyElement" type="BodyBaseType"/>
-  <xs:complexType name="BodyBaseType" abstract="true"/>
-</xs:schema>
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/din_spec/V2G_CI_MsgHeader.xsd /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/din_spec/V2G_CI_MsgHeader.xsd
new file mode 000000
index 73785d7..0000000
--- /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/din_spec/V2G_CI_MsgHeader.xsd
+++ /dev/null
@@ -1,13 +0,0 @@
-<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="urn:din:70121:2012:MsgHeader" xmlns="urn:din:70121:2012:MsgHeader" xmlns:v2gci_d="urn:din:70121:2012:MsgDef" xmlns:v2gci_t="urn:din:70121:2012:MsgDataTypes" xmlns:xmlsig="http://www.w3.org/2000/09/xmldsig#" elementFormDefault="qualified" attributeFormDefault="unqualified">
-  <xs:import namespace="urn:din:70121:2012:MsgDef" schemaLocation="V2G_CI_MsgDef.xsd"/>
-  <xs:import namespace="urn:din:70121:2012:MsgDataTypes" schemaLocation="V2G_CI_MsgDataTypes.xsd"/>
-  <xs:import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
-  <!-- Message Header -->
-  <xs:complexType name="MessageHeaderType">
-    <xs:sequence>
-      <xs:element name="SessionID" type="v2gci_t:sessionIDType"/>
-      <xs:element name="Notification" type="v2gci_t:NotificationType" minOccurs="0"/>
-      <xs:element ref="xmlsig:Signature" minOccurs="0"/>
-    </xs:sequence>
-  </xs:complexType>
-</xs:schema>
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/din_spec/__init__.py /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/din_spec/__init__.py
new file mode 000000
index e69de29..0000000
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_2/V2G_CI_MsgBody.xsd /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_2/V2G_CI_MsgBody.xsd
new file mode 000000
index c0a0377..0000000
--- /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_2/V2G_CI_MsgBody.xsd
+++ /dev/null
@@ -1,498 +0,0 @@
-<!-- This XML document originates from the ISO/IEC 15118-2 standard which can be obtained from ISO at http://www.iso.org/iso/catalogue_detail.htm?csnumber=55366 -->
-<xs:schema
-	xmlns:xs="http://www.w3.org/2001/XMLSchema"
-	xmlns="urn:iso:15118:2:2013:MsgBody"
-	xmlns:v2gci_d="urn:iso:15118:2:2013:MsgDef"
-	xmlns:v2gci_t="urn:iso:15118:2:2013:MsgDataTypes"
-targetNamespace="urn:iso:15118:2:2013:MsgBody"
-elementFormDefault="qualified" attributeFormDefault="qualified">
-	<xs:import namespace="urn:iso:15118:2:2013:MsgDataTypes" schemaLocation="V2G_CI_MsgDataTypes.xsd"/>
-	<!-- Body -->
-	<xs:complexType name="BodyType">
-		<xs:sequence>
-			<xs:element ref="BodyElement" minOccurs="0"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:element name="BodyElement" type="BodyBaseType" abstract="true"/>
-	<xs:complexType name="BodyBaseType" abstract="true"/>
-	<!-- ....................... -->
-	<!-- Common Messages (AC/DC) -->
-	<!-- ....................... -->
-	<!-- -->
-	<!-- Session Setup -->
-	<!-- -->
-	<xs:element name="SessionSetupReq" type="SessionSetupReqType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="SessionSetupReqType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="EVCCID" type="v2gci_t:evccIDType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="SessionSetupRes" type="SessionSetupResType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="SessionSetupResType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-					<xs:element name="EVSEID" type="v2gci_t:evseIDType"/>
-					<xs:element name="EVSETimeStamp" type="xs:long" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- -->
-	<!-- Service Discovery -->
-	<!-- -->
-	<xs:element name="ServiceDiscoveryReq" type="ServiceDiscoveryReqType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="ServiceDiscoveryReqType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="ServiceScope" type="v2gci_t:serviceScopeType" minOccurs="0"/>
-					<xs:element name="ServiceCategory" type="v2gci_t:serviceCategoryType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="ServiceDiscoveryRes" type="ServiceDiscoveryResType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="ServiceDiscoveryResType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-					<xs:element name="PaymentOptionList" type="v2gci_t:PaymentOptionListType"/>
-					<xs:element name="ChargeService" type="v2gci_t:ChargeServiceType"/>
-					<!--<xs:element name="ServiceList" type="v2gci_t:ServiceTagListType" minOccurs="0"/> -->
-					<xs:element name="ServiceList" type="v2gci_t:ServiceListType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- -->
-	<!-- Service Detail -->
-	<!-- -->
-	<xs:element name="ServiceDetailReq" type="ServiceDetailReqType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="ServiceDetailReqType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="ServiceID" type="v2gci_t:serviceIDType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="ServiceDetailRes" type="ServiceDetailResType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="ServiceDetailResType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-					<xs:element name="ServiceID" type="v2gci_t:serviceIDType"/>
-					<xs:element name="ServiceParameterList" type="v2gci_t:ServiceParameterListType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- -->
-	<!-- Service Payment & Selection -->
-	<!-- -->
-	<xs:element name="PaymentServiceSelectionReq" type="PaymentServiceSelectionReqType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="PaymentServiceSelectionReqType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="SelectedPaymentOption" type="v2gci_t:paymentOptionType"/>
-					<xs:element name="SelectedServiceList" type="v2gci_t:SelectedServiceListType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="PaymentServiceSelectionRes" type="PaymentServiceSelectionResType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="PaymentServiceSelectionResType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- -->
-	<!-- Payment Details -->
-	<!-- -->
-	<xs:element name="PaymentDetailsReq" type="PaymentDetailsReqType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="PaymentDetailsReqType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="eMAID" type="v2gci_t:eMAIDType"/>
-					<xs:element name="ContractSignatureCertChain" type="v2gci_t:CertificateChainType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="PaymentDetailsRes" type="PaymentDetailsResType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="PaymentDetailsResType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-					<xs:element name="GenChallenge" type="v2gci_t:genChallengeType"/>
-					<xs:element name="EVSETimeStamp" type="xs:long"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- -->
-	<!-- Authorization-->
-	<!-- -->
-	<xs:element name="AuthorizationReq" type="AuthorizationReqType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="AuthorizationReqType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="GenChallenge" type="v2gci_t:genChallengeType" minOccurs="0"/>
-				</xs:sequence>
-				<xs:attribute name="Id" type="xs:ID"/>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="AuthorizationRes" type="AuthorizationResType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="AuthorizationResType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-					<xs:element name="EVSEProcessing" type="v2gci_t:EVSEProcessingType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- -->
-	<!-- Charge Parameter Discovery -->
-	<!-- -->
-	<xs:element name="ChargeParameterDiscoveryReq" type="ChargeParameterDiscoveryReqType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="ChargeParameterDiscoveryReqType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="MaxEntriesSAScheduleTuple" type="xs:unsignedShort" minOccurs="0"/>
-					<!-- new -->
-					<xs:element name="RequestedEnergyTransferMode" type="v2gci_t:EnergyTransferModeType"/>
-					<xs:element ref="v2gci_t:EVChargeParameter"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="ChargeParameterDiscoveryRes" type="ChargeParameterDiscoveryResType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="ChargeParameterDiscoveryResType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-					<xs:element name="EVSEProcessing" type="v2gci_t:EVSEProcessingType"/>
-					<xs:element ref="v2gci_t:SASchedules" minOccurs="0"/>
-					<xs:element ref="v2gci_t:EVSEChargeParameter"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- -->
-	<!-- Power Delivery -->
-	<!-- -->
-	<xs:element name="PowerDeliveryReq" type="PowerDeliveryReqType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="PowerDeliveryReqType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="ChargeProgress" type="v2gci_t:chargeProgressType"/>
-					<xs:element name="SAScheduleTupleID" type="v2gci_t:SAIDType"/>
-					<xs:element name="ChargingProfile" type="v2gci_t:ChargingProfileType" minOccurs="0"/>
-					<xs:element ref="v2gci_t:EVPowerDeliveryParameter" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="PowerDeliveryRes" type="PowerDeliveryResType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="PowerDeliveryResType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-					<xs:element ref="v2gci_t:EVSEStatus"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- -->
-	<!-- Metering Receipt -->
-	<!-- -->
-	<xs:element name="MeteringReceiptReq" type="MeteringReceiptReqType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="MeteringReceiptReqType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="SessionID" type="v2gci_t:sessionIDType"/>
-					<xs:element name="SAScheduleTupleID" type="v2gci_t:SAIDType" minOccurs="0"/>
-					<xs:element name="MeterInfo" type="v2gci_t:MeterInfoType"/>
-				</xs:sequence>
-				<xs:attribute name="Id" type="xs:ID"/>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="MeteringReceiptRes" type="MeteringReceiptResType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="MeteringReceiptResType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-					<xs:element ref="v2gci_t:EVSEStatus"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- -->
-	<!-- SessionStop -->
-	<!-- -->
-	<xs:element name="SessionStopReq" type="SessionStopReqType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="SessionStopReqType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="ChargingSession" type="v2gci_t:chargingSessionType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="SessionStopRes" type="SessionStopResType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="SessionStopResType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- -->
-	<!-- Certificate Update -->
-	<!-- -->
-	<xs:element name="CertificateUpdateReq" type="CertificateUpdateReqType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="CertificateUpdateReqType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="ContractSignatureCertChain" type="v2gci_t:CertificateChainType"/>
-					<xs:element name="eMAID" type="v2gci_t:eMAIDType"/>
-					<xs:element name="ListOfRootCertificateIDs" type="v2gci_t:ListOfRootCertificateIDsType"/>
-				</xs:sequence>
-				<xs:attribute name="Id" type="xs:ID" use="required"/>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="CertificateUpdateRes" type="CertificateUpdateResType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="CertificateUpdateResType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-					<xs:element name="SAProvisioningCertificateChain" type="v2gci_t:CertificateChainType"/>
-					<xs:element name="ContractSignatureCertChain" type="v2gci_t:CertificateChainType"/>
-					<xs:element name="ContractSignatureEncryptedPrivateKey" type="v2gci_t:ContractSignatureEncryptedPrivateKeyType"/>
-					<xs:element name="DHpublickey" type="v2gci_t:DiffieHellmanPublickeyType"/>
-					<xs:element name="eMAID" type="v2gci_t:EMAIDType"/>
-					<xs:element name="RetryCounter" type="xs:short" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- -->
-	<!-- Certificate Installation -->
-	<!-- -->
-	<xs:element name="CertificateInstallationReq" type="CertificateInstallationReqType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="CertificateInstallationReqType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="OEMProvisioningCert" type="v2gci_t:certificateType"/>
-					<xs:element name="ListOfRootCertificateIDs" type="v2gci_t:ListOfRootCertificateIDsType"/>
-				</xs:sequence>
-				<xs:attribute name="Id" type="xs:ID" use="required"/>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="CertificateInstallationRes" type="CertificateInstallationResType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="CertificateInstallationResType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-					<xs:element name="SAProvisioningCertificateChain" type="v2gci_t:CertificateChainType"/>
-					<!-- new -->
-					<xs:element name="ContractSignatureCertChain" type="v2gci_t:CertificateChainType"/>
-					<xs:element name="ContractSignatureEncryptedPrivateKey" type="v2gci_t:ContractSignatureEncryptedPrivateKeyType"/>
-					<xs:element name="DHpublickey" type="v2gci_t:DiffieHellmanPublickeyType"/>
-					<xs:element name="eMAID" type="v2gci_t:EMAIDType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- ....................... -->
-	<!-- AC-Messages -->
-	<!-- ....................... -->
-	<!-- -->
-	<!-- Charging Status -->
-	<!-- -->
-	<xs:element name="ChargingStatusReq" type="ChargingStatusReqType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="ChargingStatusReqType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence/>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="ChargingStatusRes" type="ChargingStatusResType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="ChargingStatusResType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-					<xs:element name="EVSEID" type="v2gci_t:evseIDType"/>
-					<xs:element name="SAScheduleTupleID" type="v2gci_t:SAIDType"/>
-					<xs:element name="EVSEMaxCurrent" type="v2gci_t:PhysicalValueType" minOccurs="0"/>
-					<xs:element name="MeterInfo" type="v2gci_t:MeterInfoType" minOccurs="0"/>
-					<xs:element name="ReceiptRequired" type="xs:boolean" minOccurs="0"/>
-					<xs:element name="AC_EVSEStatus" type="v2gci_t:AC_EVSEStatusType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- ....................... -->
-	<!-- DC-Messages -->
-	<!-- ....................... -->
-	<!-- -->
-	<!-- Cable Check -->
-	<!-- -->
-	<xs:element name="CableCheckReq" type="CableCheckReqType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="CableCheckReqType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="DC_EVStatus" type="v2gci_t:DC_EVStatusType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="CableCheckRes" type="CableCheckResType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="CableCheckResType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-					<xs:element name="DC_EVSEStatus" type="v2gci_t:DC_EVSEStatusType"/>
-					<xs:element name="EVSEProcessing" type="v2gci_t:EVSEProcessingType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- -->
-	<!-- Pre-Charge -->
-	<!-- -->
-	<xs:element name="PreChargeReq" type="PreChargeReqType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="PreChargeReqType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="DC_EVStatus" type="v2gci_t:DC_EVStatusType"/>
-					<xs:element name="EVTargetVoltage" type="v2gci_t:PhysicalValueType"/>
-					<xs:element name="EVTargetCurrent" type="v2gci_t:PhysicalValueType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="PreChargeRes" type="PreChargeResType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="PreChargeResType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-					<xs:element name="DC_EVSEStatus" type="v2gci_t:DC_EVSEStatusType"/>
-					<xs:element name="EVSEPresentVoltage" type="v2gci_t:PhysicalValueType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- -->
-	<!-- Current Demand -->
-	<!-- -->
-	<xs:element name="CurrentDemandReq" type="CurrentDemandReqType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="CurrentDemandReqType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="DC_EVStatus" type="v2gci_t:DC_EVStatusType"/>
-					<xs:element name="EVTargetCurrent" type="v2gci_t:PhysicalValueType"/>
-					<xs:element name="EVMaximumVoltageLimit" type="v2gci_t:PhysicalValueType" minOccurs="0"/>
-					<xs:element name="EVMaximumCurrentLimit" type="v2gci_t:PhysicalValueType" minOccurs="0"/>
-					<xs:element name="EVMaximumPowerLimit" type="v2gci_t:PhysicalValueType" minOccurs="0"/>
-					<xs:element name="BulkChargingComplete" type="xs:boolean" minOccurs="0"/>
-					<xs:element name="ChargingComplete" type="xs:boolean"/>
-					<xs:element name="RemainingTimeToFullSoC" type="v2gci_t:PhysicalValueType" minOccurs="0"/>
-					<xs:element name="RemainingTimeToBulkSoC" type="v2gci_t:PhysicalValueType" minOccurs="0"/>
-					<xs:element name="EVTargetVoltage" type="v2gci_t:PhysicalValueType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="CurrentDemandRes" type="CurrentDemandResType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="CurrentDemandResType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-					<xs:element name="DC_EVSEStatus" type="v2gci_t:DC_EVSEStatusType"/>
-					<xs:element name="EVSEPresentVoltage" type="v2gci_t:PhysicalValueType"/>
-					<xs:element name="EVSEPresentCurrent" type="v2gci_t:PhysicalValueType"/>
-					<xs:element name="EVSECurrentLimitAchieved" type="xs:boolean"/>
-					<xs:element name="EVSEVoltageLimitAchieved" type="xs:boolean"/>
-					<xs:element name="EVSEPowerLimitAchieved" type="xs:boolean"/>
-					<xs:element name="EVSEMaximumVoltageLimit" type="v2gci_t:PhysicalValueType" minOccurs="0"/>
-					<xs:element name="EVSEMaximumCurrentLimit" type="v2gci_t:PhysicalValueType" minOccurs="0"/>
-					<xs:element name="EVSEMaximumPowerLimit" type="v2gci_t:PhysicalValueType" minOccurs="0"/>
-					<xs:element name="EVSEID" type="v2gci_t:evseIDType"/>
-					<xs:element name="SAScheduleTupleID" type="v2gci_t:SAIDType"/>
-					<xs:element name="MeterInfo" type="v2gci_t:MeterInfoType" minOccurs="0"/>
-					<xs:element name="ReceiptRequired" type="xs:boolean" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- -->
-	<!-- Welding Detection -->
-	<!-- -->
-	<xs:element name="WeldingDetectionReq" type="WeldingDetectionReqType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="WeldingDetectionReqType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="DC_EVStatus" type="v2gci_t:DC_EVStatusType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="WeldingDetectionRes" type="WeldingDetectionResType" substitutionGroup="BodyElement"/>
-	<xs:complexType name="WeldingDetectionResType">
-		<xs:complexContent>
-			<xs:extension base="BodyBaseType">
-				<xs:sequence>
-					<xs:element name="ResponseCode" type="v2gci_t:responseCodeType"/>
-					<xs:element name="DC_EVSEStatus" type="v2gci_t:DC_EVSEStatusType"/>
-					<xs:element name="EVSEPresentVoltage" type="v2gci_t:PhysicalValueType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-</xs:schema>
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_2/V2G_CI_MsgDataTypes.xsd /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_2/V2G_CI_MsgDataTypes.xsd
new file mode 000000
index 236ad61..0000000
--- /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_2/V2G_CI_MsgDataTypes.xsd
+++ /dev/null
@@ -1,722 +0,0 @@
-<!-- This XML document originates from the ISO/IEC 15118-2 standard which can be obtained from ISO at http://www.iso.org/iso/catalogue_detail.htm?csnumber=55366 -->
-<xs:schema
-	xmlns:xs="http://www.w3.org/2001/XMLSchema"
-	xmlns="urn:iso:15118:2:2013:MsgDataTypes"
-	xmlns:xmlsig="http://www.w3.org/2000/09/xmldsig#"
-targetNamespace="urn:iso:15118:2:2013:MsgDataTypes"
-elementFormDefault="qualified" attributeFormDefault="qualified">
-	<xs:import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="../xmldsig-core-schema.xsd"/>
-	<!-- =================== -->
-	<!-- Complex types -->
-	<!-- =================== -->
-	<!-- -->
-	<!-- service-related types -->
-	<!-- -->
-	<xs:complexType name="ServiceType">
-		<xs:sequence>
-			<xs:element name="ServiceID" type="serviceIDType"/>
-			<xs:element name="ServiceName" type="serviceNameType" minOccurs="0"/>
-			<xs:element name="ServiceCategory" type="serviceCategoryType"/>
-			<xs:element name="ServiceScope" type="serviceScopeType" minOccurs="0"/>
-			<xs:element name="FreeService" type="xs:boolean"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="ServiceListType">
-		<xs:sequence>
-			<xs:element name="Service" type="ServiceType" maxOccurs="8"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="SelectedServiceListType">
-		<xs:sequence>
-			<xs:element name="SelectedService" type="SelectedServiceType" maxOccurs="16"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="SelectedServiceType">
-		<xs:sequence>
-			<xs:element name="ServiceID" type="serviceIDType"/>
-			<xs:element name="ParameterSetID" type="xs:short" minOccurs="0"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="ServiceParameterListType">
-		<xs:sequence>
-			<xs:element name="ParameterSet" type="ParameterSetType" maxOccurs="255"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="ParameterSetType">
-		<xs:sequence>
-			<xs:element name="ParameterSetID" type="xs:short"/>
-			<xs:element name="Parameter" type="ParameterType" maxOccurs="16"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="ParameterType">
-		<xs:choice>
-			<xs:element name="boolValue" type="xs:boolean"/>
-			<xs:element name="byteValue" type="xs:byte"/>
-			<xs:element name="shortValue" type="xs:short"/>
-			<xs:element name="intValue" type="xs:int"/>
-			<xs:element name="physicalValue" type="PhysicalValueType"/>
-			<xs:element name="stringValue" type="xs:string"/>
-		</xs:choice>
-		<xs:attribute name="Name" type="xs:string" use="required"/>
-	</xs:complexType>
-	<xs:complexType name="ChargeServiceType">
-		<xs:complexContent>
-			<xs:extension base="ServiceType">
-				<xs:sequence>
-					<xs:element name="SupportedEnergyTransferMode" type="SupportedEnergyTransferModeType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:complexType name="SupportedEnergyTransferModeType">
-		<xs:sequence>
-			<xs:element name="EnergyTransferMode" type="EnergyTransferModeType" maxOccurs="6"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- -->
-	<!-- security related types -->
-	<!-- -->
-	<xs:complexType name="ContractSignatureEncryptedPrivateKeyType">
-		<xs:simpleContent>
-			<xs:extension base="privateKeyType">
-				<xs:attribute name="Id" type="xs:ID" use="required"/>
-			</xs:extension>
-		</xs:simpleContent>
-	</xs:complexType>
-	<xs:complexType name="DiffieHellmanPublickeyType">
-		<xs:simpleContent>
-			<xs:extension base="dHpublickeyType">
-				<xs:attribute name="Id" type="xs:ID" use="required"/>
-			</xs:extension>
-		</xs:simpleContent>
-	</xs:complexType>
-	<xs:complexType name="EMAIDType">
-		<xs:simpleContent>
-			<xs:extension base="eMAIDType">
-				<xs:attribute name="Id" type="xs:ID" use="required"/>
-			</xs:extension>
-		</xs:simpleContent>
-	</xs:complexType>
-	<xs:complexType name="CertificateChainType">
-		<xs:sequence>
-			<xs:element name="Certificate" type="certificateType"/>
-			<xs:element name="SubCertificates" type="SubCertificatesType" minOccurs="0"/>
-		</xs:sequence>
-		<xs:attribute name="Id" type="xs:ID"/>
-	</xs:complexType>
-	<xs:complexType name="SubCertificatesType">
-		<xs:sequence>
-			<xs:element name="Certificate" type="certificateType" maxOccurs="4"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="ListOfRootCertificateIDsType">
-		<xs:sequence>
-			<xs:element name="RootCertificateID" type="xmlsig:X509IssuerSerialType" maxOccurs="20"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- -->
-	<!-- metering related types -->
-	<!-- -->
-	<xs:complexType name="MeterInfoType">
-		<xs:sequence>
-			<xs:element name="MeterID" type="meterIDType"/>
-			<xs:element name="MeterReading" type="xs:unsignedLong" minOccurs="0"/>
-			<xs:element name="SigMeterReading" type="sigMeterReadingType" minOccurs="0"/>
-			<xs:element name="MeterStatus" type="meterStatusType" minOccurs="0"/>
-			<xs:element name="TMeter" type="xs:long" minOccurs="0"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- -->
-	<!-- Physical value type -->
-	<!-- -->
-	<xs:complexType name="PhysicalValueType">
-		<xs:sequence>
-			<xs:element name="Multiplier" type="unitMultiplierType"/>
-			<xs:element name="Unit" type="unitSymbolType"/>
-			<xs:element name="Value" type="xs:short"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- -->
-	<!-- header related types -->
-	<!-- -->
-	<xs:complexType name="NotificationType">
-		<xs:sequence>
-			<xs:element name="FaultCode" type="faultCodeType"/>
-			<xs:element name="FaultMsg" type="faultMsgType" minOccurs="0"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- -->
-	<!-- Tariff related types -->
-	<!-- -->
-	<xs:complexType name="SASchedulesType" abstract="true"/>
-	<xs:element name="SASchedules" type="SASchedulesType" abstract="true"/>
-	<xs:element name="SAScheduleList" type="SAScheduleListType" substitutionGroup="SASchedules"/>
-	<xs:complexType name="SAScheduleListType">
-		<xs:complexContent>
-			<xs:extension base="SASchedulesType">
-				<xs:sequence>
-					<xs:element name="SAScheduleTuple" type="SAScheduleTupleType" maxOccurs="3"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:complexType name="SAScheduleTupleType">
-		<xs:sequence>
-			<xs:element name="SAScheduleTupleID" type="SAIDType"/>
-			<xs:element name="PMaxSchedule" type="PMaxScheduleType"/>
-			<xs:element name="SalesTariff" type="SalesTariffType" minOccurs="0"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="SalesTariffType">
-		<xs:sequence>
-			<xs:element name="SalesTariffID" type="SAIDType"/>
-			<xs:element name="SalesTariffDescription" type="tariffDescriptionType" minOccurs="0"/>
-			<xs:element name="NumEPriceLevels" type="xs:unsignedByte" minOccurs="0"/>
-			<xs:element ref="SalesTariffEntry" maxOccurs="1024"/>
-		</xs:sequence>
-		<xs:attribute name="Id" type="xs:ID"/>
-	</xs:complexType>
-	<xs:complexType name="PMaxScheduleType">
-		<xs:sequence>
-			<xs:element ref="PMaxScheduleEntry" maxOccurs="1024"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:element name="Entry" type="EntryType" abstract="true"/>
-	<xs:complexType name="EntryType" abstract="true">
-		<xs:sequence>
-			<xs:element ref="TimeInterval"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:element name="SalesTariffEntry" type="SalesTariffEntryType" substitutionGroup="Entry"/>
-	<xs:complexType name="SalesTariffEntryType">
-		<xs:complexContent>
-			<xs:extension base="EntryType">
-				<xs:sequence>
-					<xs:element name="EPriceLevel" type="xs:unsignedByte" minOccurs="0"/>
-					<xs:element name="ConsumptionCost" type="ConsumptionCostType" minOccurs="0" maxOccurs="3"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="PMaxScheduleEntry" type="PMaxScheduleEntryType" substitutionGroup="Entry"/>
-	<xs:complexType name="PMaxScheduleEntryType">
-		<xs:complexContent>
-			<xs:extension base="EntryType">
-				<xs:sequence>
-					<xs:element name="PMax" type="PhysicalValueType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:complexType name="IntervalType" abstract="true"/>
-	<xs:element name="TimeInterval" type="IntervalType" abstract="true"/>
-	<xs:element name="RelativeTimeInterval" type="RelativeTimeIntervalType" substitutionGroup="TimeInterval"/>
-	<xs:complexType name="RelativeTimeIntervalType">
-		<xs:complexContent>
-			<xs:extension base="IntervalType">
-				<xs:sequence>
-					<xs:element name="start">
-						<xs:simpleType>
-							<xs:restriction base="xs:unsignedInt">
-								<xs:minInclusive value="0"/>
-								<xs:maxInclusive value="16777214"/>
-							</xs:restriction>
-						</xs:simpleType>
-					</xs:element>
-					<xs:element name="duration" minOccurs="0">
-						<xs:simpleType>
-							<xs:restriction base="xs:unsignedInt">
-								<xs:minInclusive value="0"/>
-								<xs:maxInclusive value="86400"/>
-							</xs:restriction>
-						</xs:simpleType>
-					</xs:element>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:complexType name="ConsumptionCostType">
-		<xs:sequence>
-			<xs:element name="startValue" type="PhysicalValueType"/>
-			<xs:element name="Cost" type="CostType" maxOccurs="3"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="CostType">
-		<xs:sequence>
-			<xs:element name="costKind" type="costKindType"/>
-			<xs:element name="amount" type="xs:unsignedInt"/>
-			<xs:element name="amountMultiplier" type="unitMultiplierType" minOccurs="0"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- -->
-	<!-- EV/EVSE related types -->
-	<!-- -->
-	<xs:complexType name="EVSEStatusType" abstract="true">
-		<xs:sequence>
-			<xs:element name="NotificationMaxDelay" type="xs:unsignedShort"/>
-			<xs:element name="EVSENotification" type="EVSENotificationType"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:element name="EVSEStatus" type="EVSEStatusType" abstract="true"/>
-	<xs:element name="AC_EVSEStatus" type="AC_EVSEStatusType" substitutionGroup="EVSEStatus"/>
-	<xs:complexType name="AC_EVSEStatusType">
-		<xs:complexContent>
-			<xs:extension base="EVSEStatusType">
-				<xs:sequence>
-					<xs:element name="RCD" type="xs:boolean"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:complexType name="EVStatusType" abstract="true"/>
-	<xs:element name="EVStatus" type="EVStatusType" abstract="true"/>
-	<xs:element name="DC_EVSEStatus" type="DC_EVSEStatusType" substitutionGroup="EVSEStatus"/>
-	<xs:complexType name="DC_EVSEStatusType">
-		<xs:complexContent>
-			<xs:extension base="EVSEStatusType">
-				<xs:sequence>
-					<xs:element name="EVSEIsolationStatus" type="isolationLevelType" minOccurs="0"/>
-					<xs:element name="EVSEStatusCode" type="DC_EVSEStatusCodeType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="DC_EVStatus" type="DC_EVStatusType" substitutionGroup="EVStatus"/>
-	<xs:complexType name="DC_EVStatusType">
-		<xs:complexContent>
-			<xs:extension base="EVStatusType">
-				<xs:sequence>
-					<xs:element name="EVReady" type="xs:boolean"/>
-					<xs:element name="EVErrorCode" type="DC_EVErrorCodeType"/>
-					<xs:element name="EVRESSSOC" type="percentValueType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- -->
-	<!-- EVSE/EV Charge Parameter related types -->
-	<!-- -->
-	<xs:complexType name="EVChargeParameterType" abstract="true">
-		<xs:sequence>
-			<xs:element name="DepartureTime" type="xs:unsignedInt" minOccurs="0"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:element name="EVChargeParameter" type="EVChargeParameterType" abstract="true"/>
-	<xs:element name="AC_EVChargeParameter" type="AC_EVChargeParameterType" substitutionGroup="EVChargeParameter"/>
-	<xs:complexType name="AC_EVChargeParameterType">
-		<xs:complexContent>
-			<xs:extension base="EVChargeParameterType">
-				<xs:sequence>
-					<xs:element name="EAmount" type="PhysicalValueType"/>
-					<xs:element name="EVMaxVoltage" type="PhysicalValueType"/>
-					<xs:element name="EVMaxCurrent" type="PhysicalValueType"/>
-					<xs:element name="EVMinCurrent" type="PhysicalValueType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="DC_EVChargeParameter" type="DC_EVChargeParameterType" substitutionGroup="EVChargeParameter"/>
-	<xs:complexType name="DC_EVChargeParameterType">
-		<xs:complexContent>
-			<xs:extension base="EVChargeParameterType">
-				<xs:sequence>
-					<xs:element name="DC_EVStatus" type="DC_EVStatusType"/>
-					<xs:element name="EVMaximumCurrentLimit" type="PhysicalValueType"/>
-					<xs:element name="EVMaximumPowerLimit" type="PhysicalValueType" minOccurs="0"/>
-					<xs:element name="EVMaximumVoltageLimit" type="PhysicalValueType"/>
-					<xs:element name="EVEnergyCapacity" type="PhysicalValueType" minOccurs="0"/>
-					<xs:element name="EVEnergyRequest" type="PhysicalValueType" minOccurs="0"/>
-					<xs:element name="FullSOC" type="percentValueType" minOccurs="0"/>
-					<xs:element name="BulkSOC" type="percentValueType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:complexType name="EVSEChargeParameterType" abstract="true"/>
-	<xs:element name="EVSEChargeParameter" type="EVSEChargeParameterType" abstract="true"/>
-	<xs:element name="AC_EVSEChargeParameter" type="AC_EVSEChargeParameterType" substitutionGroup="EVSEChargeParameter"/>
-	<xs:complexType name="AC_EVSEChargeParameterType">
-		<xs:complexContent>
-			<xs:extension base="EVSEChargeParameterType">
-				<xs:sequence>
-					<xs:element name="AC_EVSEStatus" type="AC_EVSEStatusType"/>
-					<!--<xs:element name="EVSEMaxVoltage" type="PhysicalValueType"/> -->
-					<xs:element name="EVSENominalVoltage" type="PhysicalValueType"/>
-					<xs:element name="EVSEMaxCurrent" type="PhysicalValueType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="DC_EVSEChargeParameter" type="DC_EVSEChargeParameterType" substitutionGroup="EVSEChargeParameter"/>
-	<xs:complexType name="DC_EVSEChargeParameterType">
-		<xs:complexContent>
-			<xs:extension base="EVSEChargeParameterType">
-				<xs:sequence>
-					<xs:element name="DC_EVSEStatus" type="DC_EVSEStatusType"/>
-					<xs:element name="EVSEMaximumCurrentLimit" type="PhysicalValueType"/>
-					<xs:element name="EVSEMaximumPowerLimit" type="PhysicalValueType"/>
-					<xs:element name="EVSEMaximumVoltageLimit" type="PhysicalValueType"/>
-					<xs:element name="EVSEMinimumCurrentLimit" type="PhysicalValueType"/>
-					<xs:element name="EVSEMinimumVoltageLimit" type="PhysicalValueType"/>
-					<xs:element name="EVSECurrentRegulationTolerance" type="PhysicalValueType" minOccurs="0"/>
-					<xs:element name="EVSEPeakCurrentRipple" type="PhysicalValueType"/>
-					<xs:element name="EVSEEnergyToBeDelivered" type="PhysicalValueType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- -->
-	<!-- EV Power Delivery related types -->
-	<!-- -->
-	<xs:complexType name="EVPowerDeliveryParameterType" abstract="true"/>
-	<xs:element name="EVPowerDeliveryParameter" type="EVPowerDeliveryParameterType" abstract="true"/>
-	<xs:element name="DC_EVPowerDeliveryParameter" type="DC_EVPowerDeliveryParameterType" substitutionGroup="EVPowerDeliveryParameter"/>
-	<xs:complexType name="DC_EVPowerDeliveryParameterType">
-		<xs:complexContent>
-			<xs:extension base="EVPowerDeliveryParameterType">
-				<xs:sequence>
-					<xs:element name="DC_EVStatus" type="DC_EVStatusType"/>
-					<xs:element name="BulkChargingComplete" type="xs:boolean" minOccurs="0"/>
-					<xs:element name="ChargingComplete" type="xs:boolean"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- -->
-	<!-- ChargingProfileType -->
-	<!-- -->
-	<xs:complexType name="ChargingProfileType">
-		<xs:sequence>
-			<xs:element name="ProfileEntry" type="ProfileEntryType" maxOccurs="24"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="ProfileEntryType">
-		<xs:sequence>
-			<xs:element name="ChargingProfileEntryStart" type="xs:unsignedInt"/>
-			<!-- <xs:element name="ChargingProfileEntryMaxPower" type="PMaxType"/> -->
-			<xs:element name="ChargingProfileEntryMaxPower" type="PhysicalValueType"/>
-			<!-- 2013-06-20 VR: added per DE 101 and AT 5 -->
-			<xs:element name="ChargingProfileEntryMaxNumberOfPhasesInUse" type="maxNumPhasesType" minOccurs="0"/>
-			<!-- end add-->
-		</xs:sequence>
-	</xs:complexType>
-	<!-- =================== -->
-	<!-- Simple types -->
-	<!-- =================== -->
-	<!-- -->
-	<!-- General Types -->
-	<!-- -->
-	<xs:simpleType name="percentValueType">
-		<xs:restriction base="xs:byte">
-			<xs:minInclusive value="0"/>
-			<xs:maxInclusive value="100"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="faultMsgType">
-		<xs:restriction base="xs:string">
-			<xs:maxLength value="64"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="EVSEProcessingType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="Finished"/>
-			<xs:enumeration value="Ongoing"/>
-			<xs:enumeration value="Ongoing_WaitingForCustomerInteraction"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="EVSENotificationType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="None"/>
-			<xs:enumeration value="StopCharging"/>
-			<xs:enumeration value="ReNegotiation"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="chargeProgressType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="Start"/>
-			<xs:enumeration value="Stop"/>
-			<xs:enumeration value="Renegotiate"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="chargingSessionType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="Terminate"/>
-			<xs:enumeration value="Pause"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="serviceNameType">
-		<xs:restriction base="xs:string">
-			<xs:maxLength value="32"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="serviceCategoryType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="EVCharging"/>
-			<xs:enumeration value="Internet"/>
-			<xs:enumeration value="ContractCertificate"/>
-			<xs:enumeration value="OtherCustom"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="serviceScopeType">
-		<xs:restriction base="xs:string">
-			<xs:maxLength value="64"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="maxNumPhasesType">
-		<xs:restriction base="xs:byte">
-			<xs:minInclusive value="1"/>
-			<xs:maxInclusive value="3"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="valueType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="bool"/>
-			<xs:enumeration value="byte"/>
-			<xs:enumeration value="short"/>
-			<xs:enumeration value="int"/>
-			<xs:enumeration value="physicalValue"/>
-			<xs:enumeration value="string"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="meterStatusType">
-		<xs:restriction base="xs:short"/>
-	</xs:simpleType>
-	<!-- -->
-	<!-- EnergyTransferType -->
-	<!-- -->
-	<xs:simpleType name="EnergyTransferModeType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="AC_single_phase_core"/>
-			<xs:enumeration value="AC_three_phase_core"/>
-			<xs:enumeration value="DC_core"/>
-			<xs:enumeration value="DC_extended"/>
-			<xs:enumeration value="DC_combo_core"/>
-			<xs:enumeration value="DC_unique"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<!-- -->
-	<!-- security types -->
-	<!-- -->
-	<xs:simpleType name="genChallengeType">
-		<xs:restriction base="xs:base64Binary">
-			<xs:length value="16"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="certificateType">
-		<xs:restriction base="xs:base64Binary">
-			<xs:maxLength value="800"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="dHpublickeyType">
-		<xs:restriction base="xs:base64Binary">
-			<xs:maxLength value="65"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="privateKeyType">
-		<xs:restriction base="xs:base64Binary">
-			<xs:maxLength value="48"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="sigMeterReadingType">
-		<xs:restriction base="xs:base64Binary">
-			<xs:maxLength value="64"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<!-- -->
-	<!-- Identification Numbers -->
-	<!-- -->
-	<xs:simpleType name="sessionIDType">
-		<xs:restriction base="xs:hexBinary">
-			<xs:maxLength value="8"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="evccIDType">
-		<xs:restriction base="xs:hexBinary">
-			<xs:maxLength value="6"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="evseIDType">
-		<xs:restriction base="xs:string">
-			<xs:minLength value="7"/>
-			<xs:maxLength value="37"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="serviceIDType">
-		<xs:restriction base="xs:unsignedShort"/>
-	</xs:simpleType>
-	<xs:simpleType name="eMAIDType">
-		<xs:restriction base="xs:string">
-			<xs:minLength value="14"/>
-			<xs:maxLength value="15"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="meterIDType">
-		<xs:restriction base="xs:string">
-			<xs:maxLength value="32"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<!-- -->
-	<!-- Tariffs and payment -->
-	<!-- -->
-	<xs:simpleType name="SAIDType">
-		<xs:restriction base="xs:unsignedByte">
-			<xs:minInclusive value="1"/>
-			<xs:maxInclusive value="255"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="tariffDescriptionType">
-		<xs:restriction base="xs:string">
-			<xs:maxLength value="32"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="costKindType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="relativePricePercentage"/>
-			<xs:enumeration value="RenewableGenerationPercentage"/>
-			<xs:enumeration value="CarbonDioxideEmission"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:complexType name="PaymentOptionListType">
-		<xs:sequence>
-			<xs:element name="PaymentOption" type="paymentOptionType" minOccurs="1" maxOccurs="2"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:simpleType name="paymentOptionType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="Contract"/>
-			<xs:enumeration value="ExternalPayment"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<!-- -->
-	<!-- Fault and Response Codes -->
-	<!-- -->
-	<xs:simpleType name="faultCodeType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="ParsingError"/>
-			<xs:enumeration value="NoTLSRootCertificatAvailable"/>
-			<xs:enumeration value="UnknownError"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="responseCodeType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="OK"/>
-			<xs:enumeration value="OK_NewSessionEstablished"/>
-			<xs:enumeration value="OK_OldSessionJoined"/>
-			<xs:enumeration value="OK_CertificateExpiresSoon"/>
-			<xs:enumeration value="FAILED"/>
-			<xs:enumeration value="FAILED_SequenceError"/>
-			<xs:enumeration value="FAILED_ServiceIDInvalid"/>
-			<xs:enumeration value="FAILED_UnknownSession"/>
-			<xs:enumeration value="FAILED_ServiceSelectionInvalid"/>
-			<xs:enumeration value="FAILED_PaymentSelectionInvalid"/>
-			<xs:enumeration value="FAILED_CertificateExpired"/>
-			<xs:enumeration value="FAILED_SignatureError"/>
-			<xs:enumeration value="FAILED_NoCertificateAvailable"/>
-			<xs:enumeration value="FAILED_CertChainError"/>
-			<xs:enumeration value="FAILED_ChallengeInvalid"/>
-			<xs:enumeration value="FAILED_ContractCanceled"/>
-			<xs:enumeration value="FAILED_WrongChargeParameter"/>
-			<xs:enumeration value="FAILED_PowerDeliveryNotApplied"/>
-			<xs:enumeration value="FAILED_TariffSelectionInvalid"/>
-			<xs:enumeration value="FAILED_ChargingProfileInvalid"/>
-			<xs:enumeration value="FAILED_MeteringSignatureNotValid"/>
-			<xs:enumeration value="FAILED_NoChargeServiceSelected"/>
-			<xs:enumeration value="FAILED_WrongEnergyTransferMode"/>
-			<xs:enumeration value="FAILED_ContactorError"/>
-			<xs:enumeration value="FAILED_CertificateNotAllowedAtThisEVSE"/>
-			<xs:enumeration value="FAILED_CertificateRevoked"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<!-- -->
-	<!-- Multiplier and Unit Types -->
-	<!-- -->
-	<xs:simpleType name="unitMultiplierType">
-		<xs:restriction base="xs:byte">
-			<xs:minInclusive value="-3"/>
-			<xs:maxInclusive value="3"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="unitSymbolType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="h">
-				<xs:annotation>
-					<xs:documentation>Time in hours</xs:documentation>
-				</xs:annotation>
-			</xs:enumeration>
-			<xs:enumeration value="m">
-				<xs:annotation>
-					<xs:documentation>Time in minutes</xs:documentation>
-				</xs:annotation>
-			</xs:enumeration>
-			<xs:enumeration value="s">
-				<xs:annotation>
-					<xs:documentation>Time in seconds</xs:documentation>
-				</xs:annotation>
-			</xs:enumeration>
-			<xs:enumeration value="A">
-				<xs:annotation>
-					<xs:documentation>Current in Ampere</xs:documentation>
-				</xs:annotation>
-			</xs:enumeration>
-			<xs:enumeration value="V">
-				<xs:annotation>
-					<xs:documentation>Voltage in Volt</xs:documentation>
-				</xs:annotation>
-			</xs:enumeration>
-			<xs:enumeration value="W">
-				<xs:annotation>
-					<xs:documentation>Active power in Watt</xs:documentation>
-				</xs:annotation>
-			</xs:enumeration>
-			<xs:enumeration value="Wh">
-				<xs:annotation>
-					<xs:documentation>Real energy in Watt hours</xs:documentation>
-				</xs:annotation>
-			</xs:enumeration>
-		</xs:restriction>
-	</xs:simpleType>
-	<!-- -->
-	<!-- only DC related -->
-	<!-- -->
-	<xs:simpleType name="DC_EVSEStatusCodeType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="EVSE_NotReady"/>
-			<xs:enumeration value="EVSE_Ready"/>
-			<xs:enumeration value="EVSE_Shutdown"/>
-			<xs:enumeration value="EVSE_UtilityInterruptEvent"/>
-			<xs:enumeration value="EVSE_IsolationMonitoringActive"/>
-			<xs:enumeration value="EVSE_EmergencyShutdown"/>
-			<xs:enumeration value="EVSE_Malfunction"/>
-			<xs:enumeration value="Reserved_8"/>
-			<xs:enumeration value="Reserved_9"/>
-			<xs:enumeration value="Reserved_A"/>
-			<xs:enumeration value="Reserved_B"/>
-			<xs:enumeration value="Reserved_C"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="isolationLevelType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="Invalid"/>
-			<xs:enumeration value="Valid"/>
-			<xs:enumeration value="Warning"/>
-			<xs:enumeration value="Fault"/>
-			<xs:enumeration value="No_IMD"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="DC_EVErrorCodeType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="NO_ERROR"/>
-			<xs:enumeration value="FAILED_RESSTemperatureInhibit"/>
-			<xs:enumeration value="FAILED_EVShiftPosition"/>
-			<xs:enumeration value="FAILED_ChargerConnectorLockFault"/>
-			<xs:enumeration value="FAILED_EVRESSMalfunction"/>
-			<xs:enumeration value="FAILED_ChargingCurrentdifferential"/>
-			<xs:enumeration value="FAILED_ChargingVoltageOutOfRange"/>
-			<xs:enumeration value="Reserved_A"/>
-			<xs:enumeration value="Reserved_B"/>
-			<xs:enumeration value="Reserved_C"/>
-			<xs:enumeration value="FAILED_ChargingSystemIncompatibility"/>
-			<xs:enumeration value="NoData"/>
-		</xs:restriction>
-	</xs:simpleType>
-</xs:schema>
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_2/V2G_CI_MsgDef.xsd /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_2/V2G_CI_MsgDef.xsd
new file mode 000000
index 1d7e568..0000000
--- /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_2/V2G_CI_MsgDef.xsd
+++ /dev/null
@@ -1,20 +0,0 @@
-<!-- This XML document originates from the ISO/IEC 15118-2 standard which can be obtained from ISO at http://www.iso.org/iso/catalogue_detail.htm?csnumber=55366 -->
-<xs:schema
-	xmlns:xs="http://www.w3.org/2001/XMLSchema"
-	xmlns="urn:iso:15118:2:2013:MsgDef"
-	xmlns:v2gci_h="urn:iso:15118:2:2013:MsgHeader"
-	xmlns:v2gci_b="urn:iso:15118:2:2013:MsgBody" targetNamespace="urn:iso:15118:2:2013:MsgDef"
-elementFormDefault="qualified" attributeFormDefault="qualified" version="15118 2.0">
-	<!-- attributeFormDefault="unqualified" -->
-	<xs:import namespace="urn:iso:15118:2:2013:MsgHeader" schemaLocation="V2G_CI_MsgHeader.xsd"/>
-	<xs:import namespace="urn:iso:15118:2:2013:MsgBody" schemaLocation="V2G_CI_MsgBody.xsd"/>
-	<!-- Message Structure -->
-	<xs:element name="V2G_Message">
-		<xs:complexType>
-			<xs:sequence>
-				<xs:element name="Header" type="v2gci_h:MessageHeaderType"/>
-				<xs:element name="Body" type="v2gci_b:BodyType"/>
-			</xs:sequence>
-		</xs:complexType>
-	</xs:element>
-</xs:schema>
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_2/V2G_CI_MsgHeader.xsd /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_2/V2G_CI_MsgHeader.xsd
new file mode 000000
index 7373b9d..0000000
--- /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_2/V2G_CI_MsgHeader.xsd
+++ /dev/null
@@ -1,19 +0,0 @@
-<!-- This XML document originates from the ISO/IEC 15118-2 standard which can be obtained from ISO at http://www.iso.org/iso/catalogue_detail.htm?csnumber=55366 -->
-<xs:schema
-	xmlns:xs="http://www.w3.org/2001/XMLSchema"
-	xmlns="urn:iso:15118:2:2013:MsgHeader"
-	xmlns:v2gci_t="urn:iso:15118:2:2013:MsgDataTypes"
-	xmlns:xmlsig="http://www.w3.org/2000/09/xmldsig#"
-targetNamespace="urn:iso:15118:2:2013:MsgHeader"
-elementFormDefault="qualified" attributeFormDefault="qualified">
-	<xs:import namespace="urn:iso:15118:2:2013:MsgDataTypes" schemaLocation="V2G_CI_MsgDataTypes.xsd"/>
-	<xs:import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="../xmldsig-core-schema.xsd"/>
-	<!-- Message Header -->
-	<xs:complexType name="MessageHeaderType">
-		<xs:sequence>
-			<xs:element name="SessionID" type="v2gci_t:sessionIDType"/>
-			<xs:element name="Notification" type="v2gci_t:NotificationType" minOccurs="0"/>
-			<xs:element ref="xmlsig:Signature" minOccurs="0"/>
-		</xs:sequence>
-	</xs:complexType>
-</xs:schema>
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_2/__init__.py /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_2/__init__.py
new file mode 000000
index e69de29..0000000
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_20/V2G_CI_AC.xsd /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_20/V2G_CI_AC.xsd
new file mode 000000
index fa514a7..0000000
--- /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_20/V2G_CI_AC.xsd
+++ /dev/null
@@ -1,250 +0,0 @@
-<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="urn:iso:std:iso:15118:-20:AC" xmlns:v2gci_ct="urn:iso:std:iso:15118:-20:CommonTypes" targetNamespace="urn:iso:std:iso:15118:-20:AC" elementFormDefault="qualified" attributeFormDefault="qualified" version="15118:-20">
-	<xs:import namespace="urn:iso:std:iso:15118:-20:CommonTypes" schemaLocation="V2G_CI_CommonTypes.xsd"/>
-	<!--             -->
-	<!-- ––––––––––– -->
-	<!-- AC Messages -->
-	<!-- ––––––––––– -->
-	<!--                               -->
-	<!-- AC Charge Parameter Discovery -->
-	<!--                               -->
-	<xs:element name="AC_ChargeParameterDiscoveryReq" type="AC_ChargeParameterDiscoveryReqType"/>
-	<xs:complexType name="AC_ChargeParameterDiscoveryReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:ChargeParameterDiscoveryReqType">
-				<xs:sequence>
-					<xs:element ref="AC_CPDReqEnergyTransferMode"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="AC_ChargeParameterDiscoveryRes" type="AC_ChargeParameterDiscoveryResType"/>
-	<xs:complexType name="AC_ChargeParameterDiscoveryResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:ChargeParameterDiscoveryResType">
-				<xs:sequence>
-					<xs:element ref="AC_CPDResEnergyTransferMode"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--                -->
-	<!-- AC Charge Loop -->
-	<!--                -->
-	<xs:element name="AC_ChargeLoopReq" type="AC_ChargeLoopReqType"/>
-	<xs:complexType name="AC_ChargeLoopReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:ChargeLoopReqType">
-				<xs:sequence>
-					<xs:element ref="v2gci_ct:CLReqControlMode"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="AC_ChargeLoopRes" type="AC_ChargeLoopResType"/>
-	<xs:complexType name="AC_ChargeLoopResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:ChargeLoopResType">
-				<xs:sequence>
-					<xs:element name="EVSETargetFrequency" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element ref="v2gci_ct:CLResControlMode"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--                        -->
-	<!-- –––––––––––––––––––––– -->
-	<!-- Message Specific Types -->
-	<!-- –––––––––––––––––––––– -->
-	<!--                               -->
-	<!-- AC Charge Parameter Discovery -->
-	<!--                               -->
-	<!-- Energy Transfer Mode - AC -->
-	<xs:element name="AC_CPDReqEnergyTransferMode" type="AC_CPDReqEnergyTransferModeType"/>
-	<xs:complexType name="AC_CPDReqEnergyTransferModeType">
-		<xs:sequence>
-			<xs:element name="EVMaximumChargePower" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="EVMaximumChargePower_L2" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-			<xs:element name="EVMaximumChargePower_L3" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-			<xs:element name="EVMinimumChargePower" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="EVMinimumChargePower_L2" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-			<xs:element name="EVMinimumChargePower_L3" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:element name="AC_CPDResEnergyTransferMode" type="AC_CPDResEnergyTransferModeType"/>
-	<xs:complexType name="AC_CPDResEnergyTransferModeType">
-		<xs:sequence>
-			<xs:element name="EVSEMaximumChargePower" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="EVSEMaximumChargePower_L2" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-			<xs:element name="EVSEMaximumChargePower_L3" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-			<xs:element name="EVSEMinimumChargePower" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="EVSEMinimumChargePower_L2" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-			<xs:element name="EVSEMinimumChargePower_L3" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-			<xs:element name="EVSENominalFrequency" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="MaximumPowerAsymmetry" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-			<xs:element name="EVSEPowerRampLimitation" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-			<xs:element name="EVSEPresentActivePower" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-			<xs:element name="EVSEPresentActivePower_L2" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-			<xs:element name="EVSEPresentActivePower_L3" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- Energy Transfer Mode - AC BPT -->
-	<xs:element name="BPT_AC_CPDReqEnergyTransferMode" type="BPT_AC_CPDReqEnergyTransferModeType" substitutionGroup="AC_CPDReqEnergyTransferMode"/>
-	<xs:complexType name="BPT_AC_CPDReqEnergyTransferModeType">
-		<xs:complexContent>
-			<xs:extension base="AC_CPDReqEnergyTransferModeType">
-				<xs:sequence>
-					<xs:element name="EVMaximumDischargePower" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVMaximumDischargePower_L2" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMaximumDischargePower_L3" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMinimumDischargePower" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVMinimumDischargePower_L2" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMinimumDischargePower_L3" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="BPT_AC_CPDResEnergyTransferMode" type="BPT_AC_CPDResEnergyTransferModeType" substitutionGroup="AC_CPDResEnergyTransferMode"/>
-	<xs:complexType name="BPT_AC_CPDResEnergyTransferModeType">
-		<xs:complexContent>
-			<xs:extension base="AC_CPDResEnergyTransferModeType">
-				<xs:sequence>
-					<xs:element name="EVSEMaximumDischargePower" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVSEMaximumDischargePower_L2" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVSEMaximumDischargePower_L3" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVSEMinimumDischargePower" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVSEMinimumDischargePower_L2" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVSEMinimumDischargePower_L3" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--                -->
-	<!-- AC Charge Loop -->
-	<!--                -->
-	<!-- Control Modes - Scheduled -->
-	<xs:element name="Scheduled_AC_CLReqControlMode" type="Scheduled_AC_CLReqControlModeType" substitutionGroup="v2gci_ct:CLReqControlMode"/>
-	<xs:complexType name="Scheduled_AC_CLReqControlModeType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:Scheduled_CLReqControlModeType">
-				<xs:sequence>
-					<xs:element name="EVMaximumChargePower" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMaximumChargePower_L2" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMaximumChargePower_L3" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMinimumChargePower" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMinimumChargePower_L2" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMinimumChargePower_L3" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVPresentActivePower" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVPresentActivePower_L2" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVPresentActivePower_L3" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVPresentReactivePower" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVPresentReactivePower_L2" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVPresentReactivePower_L3" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="Scheduled_AC_CLResControlMode" type="Scheduled_AC_CLResControlModeType" substitutionGroup="v2gci_ct:CLResControlMode"/>
-	<xs:complexType name="Scheduled_AC_CLResControlModeType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:Scheduled_CLResControlModeType">
-				<xs:sequence>
-					<xs:element name="EVSETargetActivePower" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVSETargetActivePower_L2" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVSETargetActivePower_L3" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVSETargetReactivePower" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVSETargetReactivePower_L2" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVSETargetReactivePower_L3" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVSEPresentActivePower" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVSEPresentActivePower_L2" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVSEPresentActivePower_L3" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- Control Modes - Scheduled - BPT -->
-	<xs:element name="BPT_Scheduled_AC_CLReqControlMode" type="BPT_Scheduled_AC_CLReqControlModeType" substitutionGroup="Scheduled_AC_CLReqControlMode"/>
-	<xs:complexType name="BPT_Scheduled_AC_CLReqControlModeType">
-		<xs:complexContent>
-			<xs:extension base="Scheduled_AC_CLReqControlModeType">
-				<xs:sequence>
-					<xs:element name="EVMaximumDischargePower" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMaximumDischargePower_L2" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMaximumDischargePower_L3" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMinimumDischargePower" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMinimumDischargePower_L2" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMinimumDischargePower_L3" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="BPT_Scheduled_AC_CLResControlMode" type="BPT_Scheduled_AC_CLResControlModeType" substitutionGroup="Scheduled_AC_CLResControlMode"/>
-	<xs:complexType name="BPT_Scheduled_AC_CLResControlModeType">
-		<xs:complexContent>
-			<xs:extension base="Scheduled_AC_CLResControlModeType"/>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- Control Modes - Dynamic -->
-	<xs:element name="Dynamic_AC_CLReqControlMode" type="Dynamic_AC_CLReqControlModeType" substitutionGroup="v2gci_ct:CLReqControlMode"/>
-	<xs:complexType name="Dynamic_AC_CLReqControlModeType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:Dynamic_CLReqControlModeType">
-				<xs:sequence>
-					<xs:element name="EVMaximumChargePower" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVMaximumChargePower_L2" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMaximumChargePower_L3" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMinimumChargePower" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVMinimumChargePower_L2" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMinimumChargePower_L3" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVPresentActivePower" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVPresentActivePower_L2" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVPresentActivePower_L3" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVPresentReactivePower" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVPresentReactivePower_L2" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVPresentReactivePower_L3" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="Dynamic_AC_CLResControlMode" type="Dynamic_AC_CLResControlModeType" substitutionGroup="v2gci_ct:CLResControlMode"/>
-	<xs:complexType name="Dynamic_AC_CLResControlModeType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:Dynamic_CLResControlModeType">
-				<xs:sequence>
-					<xs:element name="EVSETargetActivePower" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVSETargetActivePower_L2" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVSETargetActivePower_L3" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVSETargetReactivePower" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVSETargetReactivePower_L2" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVSETargetReactivePower_L3" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVSEPresentActivePower" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVSEPresentActivePower_L2" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVSEPresentActivePower_L3" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- Control Modes - Dynamic - BPT -->
-	<xs:element name="BPT_Dynamic_AC_CLReqControlMode" type="BPT_Dynamic_AC_CLReqControlModeType" substitutionGroup="Dynamic_AC_CLReqControlMode"/>
-	<xs:complexType name="BPT_Dynamic_AC_CLReqControlModeType">
-		<xs:complexContent>
-			<xs:extension base="Dynamic_AC_CLReqControlModeType">
-				<xs:sequence>
-					<xs:element name="EVMaximumDischargePower" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVMaximumDischargePower_L2" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMaximumDischargePower_L3" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMinimumDischargePower" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVMinimumDischargePower_L2" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMinimumDischargePower_L3" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMaximumV2XEnergyRequest" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMinimumV2XEnergyRequest" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="BPT_Dynamic_AC_CLResControlMode" type="BPT_Dynamic_AC_CLResControlModeType" substitutionGroup="Dynamic_AC_CLResControlMode"/>
-	<xs:complexType name="BPT_Dynamic_AC_CLResControlModeType">
-		<xs:complexContent>
-			<xs:extension base="Dynamic_AC_CLResControlModeType"/>
-		</xs:complexContent>
-	</xs:complexType>
-</xs:schema>
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_20/V2G_CI_ACDP.xsd /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_20/V2G_CI_ACDP.xsd
new file mode 000000
index 2ade753..0000000
--- /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_20/V2G_CI_ACDP.xsd
+++ /dev/null
@@ -1,174 +0,0 @@
-<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="urn:iso:std:iso:15118:-20:ACDP" xmlns:v2gci_ct="urn:iso:std:iso:15118:-20:CommonTypes" targetNamespace="urn:iso:std:iso:15118:-20:ACDP" elementFormDefault="qualified" attributeFormDefault="qualified" version="15118:-20">
-	<xs:import namespace="urn:iso:std:iso:15118:-20:CommonTypes" schemaLocation="V2G_CI_CommonTypes.xsd"/>
-	<!--               -->
-	<!-- ––––––––––––– -->
-	<!-- ACDP Messages -->
-	<!-- ––––––––––––– -->
-	<!--                          -->
-	<!-- ACDP Vehicle Positioning -->
-	<!--                          -->
-	<xs:element name="ACDP_VehiclePositioningReq" type="ACDP_VehiclePositioningReqType"/>
-	<xs:complexType name="ACDP_VehiclePositioningReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GRequestType">
-				<xs:sequence>
-					<xs:element name="EVMobilityStatus" type="xs:boolean"/>
-					<xs:element name="EVPositioningSupport" type="xs:boolean"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="ACDP_VehiclePositioningRes" type="ACDP_VehiclePositioningResType"/>
-	<xs:complexType name="ACDP_VehiclePositioningResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GResponseType">
-				<xs:sequence>
-					<xs:element name="EVSEProcessing" type="v2gci_ct:processingType"/>
-					<xs:element name="EVSEPositioningSupport" type="xs:boolean"/>
-					<xs:element name="EVRelativeXDeviation" type="xs:short"/>
-					<xs:element name="EVRelativeYDeviation" type="xs:short"/>
-					<xs:element name="ContactWindowXc" type="xs:short"/>
-					<xs:element name="ContactWindowYc" type="xs:short"/>
-					<xs:element name="EVInChargePosition" type="xs:boolean"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--              -->
-	<!-- ACDP Connect -->
-	<!--              -->
-	<xs:element name="ACDP_ConnectReq" type="ACDP_ConnectReqType"/>
-	<xs:complexType name="ACDP_ConnectReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GRequestType">
-				<xs:sequence>
-					<xs:element name="EVElectricalChargingDeviceStatus" type="electricalChargingDeviceStatusType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="ACDP_ConnectRes" type="ACDP_ConnectResType"/>
-	<xs:complexType name="ACDP_ConnectResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GResponseType">
-				<xs:sequence>
-					<xs:element name="EVSEProcessing" type="v2gci_ct:processingType"/>
-					<xs:element name="EVSEElectricalChargingDeviceStatus" type="electricalChargingDeviceStatusType"/>
-					<xs:element name="EVSEMechanicalChargingDeviceStatus" type="mechanicalChargingDeviceStatusType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--                 -->
-	<!-- ACDP Disconnect -->
-	<!--                 -->
-	<xs:element name="ACDP_DisconnectReq" type="ACDP_ConnectReqType"/>
-	<!--
-	<xs:complexType name="ACDP_DisconnectReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GRequestType"/>
-		</xs:complexContent>
-	</xs:complexType>
-	-->
-	<xs:element name="ACDP_DisconnectRes" type="ACDP_ConnectResType"/>
-	<!--
-	<xs:complexType name="ACDP_DisconnectResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GResponseType"/>
-		</xs:complexContent>
-	</xs:complexType>
-	-->
-	<!--                    -->
-	<!-- ACDP System Status -->
-	<!--                    -->
-	<xs:element name="ACDP_SystemStatusReq" type="ACDP_SystemStatusReqType"/>
-	<xs:complexType name="ACDP_SystemStatusReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GRequestType">
-				<xs:sequence>
-					<xs:element name="EVTechnicalStatus" type="EVTechnicalStatusType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="ACDP_SystemStatusRes" type="ACDP_SystemStatusResType"/>
-	<xs:complexType name="ACDP_SystemStatusResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GResponseType">
-				<xs:sequence>
-					<xs:element name="EVSEMechanicalChargingDeviceStatus" type="mechanicalChargingDeviceStatusType"/>
-					<xs:element name="EVSEReadyToCharge" type="xs:boolean"/>
-					<xs:element name="EVSEIsolationStatus" type="isolationStatusType"/>
-					<xs:element name="EVSEDisabled" type="xs:boolean"/>
-					<xs:element name="EVSEUtilityInterruptEvent" type="xs:boolean"/>
-					<xs:element name="EVSEEmergencyShutdown" type="xs:boolean"/>
-					<xs:element name="EVSEMalfunction" type="xs:boolean"/>
-					<xs:element name="EVInChargePosition" type="xs:boolean"/>
-					<xs:element name="EVAssociationStatus" type="xs:boolean"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--                        -->
-	<!-- –––––––––––––––––––––– -->
-	<!-- Message Specific Types -->
-	<!-- –––––––––––––––––––––– -->
-	<xs:simpleType name="cpStatusType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="StateA"/>
-			<xs:enumeration value="StateB"/>
-			<xs:enumeration value="StateC"/>
-			<xs:enumeration value="StateD"/>
-			<xs:enumeration value="StateE"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="errorCodeType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="OK_NoEVError"/>
-			<xs:enumeration value="FAILED"/>
-			<xs:enumeration value="FAILED_EmergencyEvent"/>
-			<xs:enumeration value="FAILED_Breaker"/>
-			<xs:enumeration value="FAILED_RESSTemperatureInhibit"/>
-			<xs:enumeration value="FAILED_RESS"/>
-			<xs:enumeration value="FAILED_ChargingCurrentDifferential"/>
-			<xs:enumeration value="FAILED_ChargingVoltageOutOfRange"/>
-			<xs:enumeration value="FAILED_Reserved1"/>
-			<xs:enumeration value="FAILED_Reserved2"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="isolationStatusType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="Invalid"/>
-			<xs:enumeration value="Safe"/>
-			<xs:enumeration value="Warning"/>
-			<xs:enumeration value="Fault"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="electricalChargingDeviceStatusType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="State_A"/>
-			<xs:enumeration value="State_B"/>
-			<xs:enumeration value="State_C"/>
-			<xs:enumeration value="State_D"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="mechanicalChargingDeviceStatusType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="Home"/>
-			<xs:enumeration value="Moving"/>
-			<xs:enumeration value="EndPosition"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:complexType name="EVTechnicalStatusType">
-		<xs:sequence>
-			<xs:element name="EVReadyToCharge" type="xs:boolean"/>
-			<xs:element name="EVImmobilizationRequest" type="xs:boolean"/>
-			<xs:element name="EVImmobilized" type="xs:boolean" minOccurs="0"/>
-			<xs:element name="EVWLANStrength" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-			<xs:element name="EVCPStatus" type="cpStatusType" minOccurs="0"/>
-			<xs:element name="EVSOC" type="v2gci_ct:percentValueType" minOccurs="0"/>
-			<xs:element name="EVErrorCode" type="errorCodeType" minOccurs="0"/>
-			<xs:element name="EVTimeout" type="xs:boolean" minOccurs="0"/>
-		</xs:sequence>
-	</xs:complexType>
-</xs:schema>
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_20/V2G_CI_CommonMessages.xsd /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_20/V2G_CI_CommonMessages.xsd
new file mode 000000
index 867415a..0000000
--- /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_20/V2G_CI_CommonMessages.xsd
+++ /dev/null
@@ -1,911 +0,0 @@
-<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="urn:iso:std:iso:15118:-20:CommonMessages" xmlns:v2gci_ct="urn:iso:std:iso:15118:-20:CommonTypes" targetNamespace="urn:iso:std:iso:15118:-20:CommonMessages" elementFormDefault="qualified" attributeFormDefault="qualified" version="15118:-20">
-	<xs:import namespace="urn:iso:std:iso:15118:-20:CommonTypes" schemaLocation="V2G_CI_CommonTypes.xsd"/>
-	<!-- ––––––––––––––– -->
-	<!-- Common Messages -->
-	<!-- ––––––––––––––– -->
-	<!--               -->
-	<!-- Session Setup -->
-	<!--               -->
-	<xs:element name="SessionSetupReq" type="SessionSetupReqType"/>
-	<xs:complexType name="SessionSetupReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GRequestType">
-				<xs:sequence>
-					<xs:element name="EVCCID" type="v2gci_ct:identifierType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="SessionSetupRes" type="SessionSetupResType"/>
-	<xs:complexType name="SessionSetupResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GResponseType">
-				<xs:sequence>
-					<xs:element name="EVSEID" type="v2gci_ct:identifierType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--                     -->
-	<!-- Authorization Setup -->
-	<!--                     -->
-	<xs:element name="AuthorizationSetupReq" type="AuthorizationSetupReqType"/>
-	<xs:complexType name="AuthorizationSetupReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GRequestType"/>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="AuthorizationSetupRes" type="AuthorizationSetupResType"/>
-	<xs:complexType name="AuthorizationSetupResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GResponseType">
-				<xs:sequence>
-					<xs:element name="AuthorizationServices" type="authorizationType" maxOccurs="2"/>
-					<xs:element name="CertificateInstallationService" type="xs:boolean"/>
-					<xs:choice>
-						<xs:element name="EIM_ASResAuthorizationMode" type="EIM_ASResAuthorizationModeType"/>
-						<xs:element name="PnC_ASResAuthorizationMode" type="PnC_ASResAuthorizationModeType"/>
-					</xs:choice>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--               -->
-	<!-- Authorization -->
-	<!--               -->
-	<xs:element name="AuthorizationReq" type="AuthorizationReqType"/>
-	<xs:complexType name="AuthorizationReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GRequestType">
-				<xs:sequence>
-					<xs:element name="SelectedAuthorizationService" type="authorizationType"/>
-					<xs:choice>
-						<xs:element name="EIM_AReqAuthorizationMode" type="EIM_AReqAuthorizationModeType"/>
-						<xs:element name="PnC_AReqAuthorizationMode" type="PnC_AReqAuthorizationModeType"/>
-					</xs:choice>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="AuthorizationRes" type="AuthorizationResType"/>
-	<xs:complexType name="AuthorizationResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GResponseType">
-				<xs:sequence>
-					<xs:element name="EVSEProcessing" type="v2gci_ct:processingType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--                   -->
-	<!-- Service Discovery -->
-	<!--                   -->
-	<xs:element name="ServiceDiscoveryReq" type="ServiceDiscoveryReqType"/>
-	<xs:complexType name="ServiceDiscoveryReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GRequestType">
-				<xs:sequence>
-					<xs:element name="SupportedServiceIDs" type="ServiceIDListType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="ServiceDiscoveryRes" type="ServiceDiscoveryResType"/>
-	<xs:complexType name="ServiceDiscoveryResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GResponseType">
-				<xs:sequence>
-					<xs:element name="ServiceRenegotiationSupported" type="xs:boolean"/>
-					<xs:element name="EnergyTransferServiceList" type="ServiceListType"/>
-					<xs:element name="VASList" type="ServiceListType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--                -->
-	<!-- Service Detail -->
-	<!--                -->
-	<xs:element name="ServiceDetailReq" type="ServiceDetailReqType"/>
-	<xs:complexType name="ServiceDetailReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GRequestType">
-				<xs:sequence>
-					<xs:element name="ServiceID" type="serviceIDType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="ServiceDetailRes" type="ServiceDetailResType"/>
-	<xs:complexType name="ServiceDetailResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GResponseType">
-				<xs:sequence>
-					<xs:element name="ServiceID" type="serviceIDType"/>
-					<xs:element name="ServiceParameterList" type="ServiceParameterListType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--                   -->
-	<!-- Service Selection -->
-	<!--                   -->
-	<xs:element name="ServiceSelectionReq" type="ServiceSelectionReqType"/>
-	<xs:complexType name="ServiceSelectionReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GRequestType">
-				<xs:sequence>
-					<xs:element name="SelectedEnergyTransferService" type="SelectedServiceType"/>
-					<xs:element name="SelectedVASList" type="SelectedServiceListType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="ServiceSelectionRes" type="ServiceSelectionResType"/>
-	<xs:complexType name="ServiceSelectionResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GResponseType"/>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--                   -->
-	<!-- Schedule Exchange -->
-	<!--                   -->
-	<xs:element name="ScheduleExchangeReq" type="ScheduleExchangeReqType"/>
-	<xs:complexType name="ScheduleExchangeReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GRequestType">
-				<xs:sequence>
-					<xs:element name="MaximumSupportingPoints" type="maxSupportingPointsScheduleTupleType"/>
-					<xs:choice>
-						<xs:element name="Dynamic_SEReqControlMode" type="Dynamic_SEReqControlModeType"/>
-						<xs:element name="Scheduled_SEReqControlMode" type="Scheduled_SEReqControlModeType"/>
-					</xs:choice>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="ScheduleExchangeRes" type="ScheduleExchangeResType"/>
-	<xs:complexType name="ScheduleExchangeResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GResponseType">
-				<xs:sequence>
-					<xs:element name="EVSEProcessing" type="v2gci_ct:processingType"/>
-					<xs:element name="GoToPause" type="xs:boolean" minOccurs="0"/>
-					<xs:choice>
-						<xs:element name="Dynamic_SEResControlMode" type="Dynamic_SEResControlModeType"/>
-						<xs:element name="Scheduled_SEResControlMode" type="Scheduled_SEResControlModeType"/>
-					</xs:choice>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--                -->
-	<!-- Power Delivery -->
-	<!--                -->
-	<xs:element name="PowerDeliveryReq" type="PowerDeliveryReqType"/>
-	<xs:complexType name="PowerDeliveryReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GRequestType">
-				<xs:sequence>
-					<xs:element name="EVProcessing" type="v2gci_ct:processingType"/>
-					<xs:element name="ChargeProgress" type="chargeProgressType"/>
-					<xs:element name="EVPowerProfile" type="EVPowerProfileType" minOccurs="0"/>
-					<xs:element name="BPT_ChannelSelection" type="channelSelectionType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="PowerDeliveryRes" type="PowerDeliveryResType"/>
-	<xs:complexType name="PowerDeliveryResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GResponseType">
-				<xs:sequence>
-					<xs:element name="EVSEStatus" type="v2gci_ct:EVSEStatusType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--                       -->
-	<!-- Metering Confirmation -->
-	<!--                       -->
-	<xs:element name="MeteringConfirmationReq" type="MeteringConfirmationReqType"/>
-	<xs:complexType name="MeteringConfirmationReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GRequestType">
-				<xs:sequence>
-					<xs:element name="SignedMeteringData" type="SignedMeteringDataType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="MeteringConfirmationRes" type="MeteringConfirmationResType"/>
-	<xs:complexType name="MeteringConfirmationResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GResponseType"/>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--              -->
-	<!-- Session Stop -->
-	<!--              -->
-	<xs:element name="SessionStopReq" type="SessionStopReqType"/>
-	<xs:complexType name="SessionStopReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GRequestType">
-				<xs:sequence>
-					<xs:element name="ChargingSession" type="chargingSessionType"/>
-					<xs:element name="EVTerminationCode" type="v2gci_ct:nameType" minOccurs="0"/>
-					<xs:element name="EVTerminationExplanation" type="v2gci_ct:descriptionType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="SessionStopRes" type="SessionStopResType"/>
-	<xs:complexType name="SessionStopResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GResponseType"/>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--                          -->
-	<!-- Certificate Installation -->
-	<!--                          -->
-	<xs:element name="CertificateInstallationReq" type="CertificateInstallationReqType"/>
-	<xs:complexType name="CertificateInstallationReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GRequestType">
-				<xs:sequence>
-					<xs:element name="OEMProvisioningCertificateChain" type="SignedCertificateChainType"/>
-					<xs:element name="ListOfRootCertificateIDs" type="v2gci_ct:ListOfRootCertificateIDsType"/>
-					<xs:element name="MaximumContractCertificateChains" type="xs:unsignedByte"/>
-					<xs:element name="PrioritizedEMAIDs" type="EMAIDListType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="CertificateInstallationRes" type="CertificateInstallationResType"/>
-	<xs:complexType name="CertificateInstallationResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GResponseType">
-				<xs:sequence>
-					<xs:element name="EVSEProcessing" type="v2gci_ct:processingType"/>
-					<xs:element name="CPSCertificateChain" type="CertificateChainType"/>
-					<xs:element name="SignedInstallationData" type="SignedInstallationDataType"/>
-					<xs:element name="RemainingContractCertificateChains" type="xs:unsignedByte"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--                  -->
-	<!-- Vehicle Check In -->
-	<!--                  -->
-	<xs:element name="VehicleCheckInReq" type="VehicleCheckInReqType"/>
-	<xs:complexType name="VehicleCheckInReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GRequestType">
-				<xs:sequence>
-					<xs:element name="EVCheckInStatus" type="evCheckInStatusType"/>
-					<xs:element name="ParkingMethod" type="parkingMethodType"/>
-					<xs:element name="VehicleFrame" type="xs:short" minOccurs="0"/>
-					<xs:element name="DeviceOffset" type="xs:short" minOccurs="0"/>
-					<xs:element name="VehicleTravel" type="xs:short" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="VehicleCheckInRes" type="VehicleCheckInResType"/>
-	<xs:complexType name="VehicleCheckInResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GResponseType">
-				<xs:sequence>
-					<xs:element name="ParkingSpace" type="xs:short" minOccurs="0"/>
-					<xs:element name="DeviceLocation" type="xs:short" minOccurs="0"/>
-					<xs:element name="TargetDistance" type="xs:short" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--                   -->
-	<!-- Vehicle Check Out -->
-	<!--                   -->
-	<xs:element name="VehicleCheckOutReq" type="VehicleCheckOutReqType"/>
-	<xs:complexType name="VehicleCheckOutReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GRequestType">
-				<xs:sequence>
-					<xs:element name="EVCheckOutStatus" type="evCheckOutStatusType"/>
-					<xs:element name="CheckOutTime" type="xs:unsignedLong"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="VehicleCheckOutRes" type="VehicleCheckOutResType"/>
-	<xs:complexType name="VehicleCheckOutResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GResponseType">
-				<xs:sequence>
-					<xs:element name="EVSECheckOutStatus" type="evseCheckOutStatusType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- –––––––––––––––––––––– -->
-	<!-- Message Specific Types -->
-	<!-- –––––––––––––––––––––– -->
-	<!--                     -->
-	<!-- Authorization Setup -->
-	<!--                     -->
-	<xs:simpleType name="authorizationType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="EIM"/>
-			<xs:enumeration value="PnC"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="genChallengeType">
-		<xs:restriction base="xs:base64Binary">
-			<xs:length value="16"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<!-- Identification Mode / PnC -->
-	<xs:complexType name="PnC_ASResAuthorizationModeType">
-		<xs:sequence>
-			<xs:element name="GenChallenge" type="genChallengeType"/>
-			<xs:element name="SupportedProviders" type="SupportedProvidersListType" minOccurs="0"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="SupportedProvidersListType">
-		<xs:sequence>
-			<xs:element name="ProviderID" type="v2gci_ct:nameType" maxOccurs="128"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- Identification Mode / EIM -->
-	<xs:complexType name="EIM_ASResAuthorizationModeType"/>
-	<!--               -->
-	<!-- Authorization -->
-	<!--               -->
-	<!-- Identification Mode / PnC -->
-	<xs:complexType name="PnC_AReqAuthorizationModeType">
-		<xs:sequence>
-			<xs:element name="GenChallenge" type="genChallengeType"/>
-			<xs:element name="ContractCertificateChain" type="ContractCertificateChainType"/>
-		</xs:sequence>
-		<xs:attribute name="Id" type="xs:ID" use="required"/>
-	</xs:complexType>
-	<!-- Identification Mode / EIM -->
-	<xs:complexType name="EIM_AReqAuthorizationModeType"/>
-	<!--                                                        -->
-	<!-- Service Discovery / Service Detail / Service Selection -->
-	<!--                                                        -->
-	<xs:simpleType name="serviceIDType">
-		<xs:restriction base="xs:unsignedShort"/>
-	</xs:simpleType>
-	<xs:complexType name="ServiceIDListType">
-		<xs:sequence>
-			<xs:element name="ServiceID" type="serviceIDType" maxOccurs="16"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="ServiceType">
-		<xs:sequence>
-			<xs:element name="ServiceID" type="serviceIDType"/>
-			<xs:element name="FreeService" type="xs:boolean"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="ServiceListType">
-		<xs:sequence>
-			<xs:element name="Service" type="ServiceType" maxOccurs="8"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="SelectedServiceType">
-		<xs:sequence>
-			<xs:element name="ServiceID" type="serviceIDType"/>
-			<xs:element name="ParameterSetID" type="serviceIDType"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="SelectedServiceListType">
-		<xs:sequence>
-			<xs:element name="SelectedService" type="SelectedServiceType" maxOccurs="16"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="ParameterType">
-		<xs:choice>
-			<xs:element name="boolValue" type="xs:boolean"/>
-			<xs:element name="byteValue" type="xs:byte"/>
-			<xs:element name="shortValue" type="xs:short"/>
-			<xs:element name="intValue" type="xs:int"/>
-			<xs:element name="rationalNumber" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="finiteString" type="v2gci_ct:nameType"/>
-		</xs:choice>
-		<xs:attribute name="Name" type="v2gci_ct:nameType" use="required"/>
-	</xs:complexType>
-	<xs:complexType name="ParameterSetType">
-		<xs:sequence>
-			<xs:element name="ParameterSetID" type="serviceIDType"/>
-			<xs:element name="Parameter" type="ParameterType" maxOccurs="32"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="ServiceParameterListType">
-		<xs:sequence>
-			<xs:element name="ParameterSet" type="ParameterSetType" maxOccurs="32"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!--                   -->
-	<!-- Schedule Exchange -->
-	<!--                   -->
-	<xs:simpleType name="maxSupportingPointsScheduleTupleType">
-		<xs:restriction base="xs:unsignedShort">
-			<xs:minInclusive value="12"/>
-			<xs:maxInclusive value="1024"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<!-- ScheduleTupleType -->
-	<xs:complexType name="ScheduleTupleType">
-		<xs:sequence>
-			<xs:element name="ScheduleTupleID" type="v2gci_ct:numericIDType"/>
-			<xs:element name="ChargingSchedule" type="ChargingScheduleType"/>
-			<xs:element name="DischargingSchedule" type="ChargingScheduleType" minOccurs="0"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- ScheduleTupleType/ChargingScheduleType -->
-	<xs:complexType name="ChargingScheduleType">
-		<xs:sequence>
-			<xs:element name="PowerSchedule" type="PowerScheduleType"/>
-			<xs:choice minOccurs="0">
-				<xs:element name="AbsolutePriceSchedule" type="AbsolutePriceScheduleType"/>
-				<xs:element name="PriceLevelSchedule" type="PriceLevelScheduleType"/>
-			</xs:choice>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- Control Modes - Scheduled -->
-	<xs:complexType name="Scheduled_SEReqControlModeType">
-		<xs:sequence>
-			<xs:element name="DepartureTime" type="xs:unsignedInt" minOccurs="0"/>
-			<xs:element name="EVTargetEnergyRequest" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-			<xs:element name="EVMaximumEnergyRequest" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-			<xs:element name="EVMinimumEnergyRequest" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-			<xs:element name="EVEnergyOffer" type="EVEnergyOfferType" minOccurs="0"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="Scheduled_SEResControlModeType">
-		<xs:sequence>
-			<xs:element name="ScheduleTuple" type="ScheduleTupleType" maxOccurs="3"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- Control Modes - Dynamic -->
-	<xs:complexType name="Dynamic_SEReqControlModeType">
-		<xs:sequence>
-			<xs:element name="DepartureTime" type="xs:unsignedInt"/>
-			<xs:element name="MinimumSOC" type="v2gci_ct:percentValueType" minOccurs="0"/>
-			<xs:element name="TargetSOC" type="v2gci_ct:percentValueType" minOccurs="0"/>
-			<xs:element name="EVTargetEnergyRequest" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="EVMaximumEnergyRequest" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="EVMinimumEnergyRequest" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="EVMaximumV2XEnergyRequest" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-			<xs:element name="EVMinimumV2XEnergyRequest" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="Dynamic_SEResControlModeType">
-		<xs:sequence>
-			<xs:element name="DepartureTime" type="xs:unsignedInt" minOccurs="0"/>
-			<xs:element name="MinimumSOC" type="v2gci_ct:percentValueType" minOccurs="0"/>
-			<xs:element name="TargetSOC" type="v2gci_ct:percentValueType" minOccurs="0"/>
-			<xs:choice minOccurs="0">
-				<xs:element name="AbsolutePriceSchedule" type="AbsolutePriceScheduleType"/>
-				<xs:element name="PriceLevelSchedule" type="PriceLevelScheduleType"/>
-			</xs:choice>
-		</xs:sequence>
-	</xs:complexType>
-	<!--                -->
-	<!-- Power Delivery -->
-	<!--                -->
-	<xs:simpleType name="chargeProgressType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="Start"/>
-			<xs:enumeration value="Stop"/>
-			<xs:enumeration value="Standby"/>
-			<xs:enumeration value="ScheduleRenegotiation"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="channelSelectionType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="Charge"/>
-			<xs:enumeration value="Discharge"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<!--                          -->
-	<!-- Certificate Installation -->
-	<!--                          -->
-	<xs:simpleType name="ecdhCurveType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="SECP521"/>
-			<xs:enumeration value="X448"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="dhPublicKeyType">
-		<xs:restriction base="xs:base64Binary">
-			<xs:length value="133"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="secp521_EncryptedPrivateKeyType">
-		<xs:restriction base="xs:base64Binary">
-			<xs:length value="94"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="x448_EncryptedPrivateKeyType">
-		<xs:restriction base="xs:base64Binary">
-			<xs:length value="84"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="tpm_EncryptedPrivateKeyType">
-		<xs:restriction base="xs:base64Binary">
-			<xs:length value="206"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:complexType name="SignedInstallationDataType">
-		<xs:sequence>
-			<xs:element name="ContractCertificateChain" type="ContractCertificateChainType"/>
-			<xs:element name="ECDHCurve" type="ecdhCurveType"/>
-			<xs:element name="DHPublicKey" type="dhPublicKeyType"/>
-			<xs:choice>
-				<xs:element name="SECP521_EncryptedPrivateKey" type="secp521_EncryptedPrivateKeyType"/>
-				<xs:element name="X448_EncryptedPrivateKey" type="x448_EncryptedPrivateKeyType"/>
-				<xs:element name="TPM_EncryptedPrivateKey" type="tpm_EncryptedPrivateKeyType"/>
-			</xs:choice>
-		</xs:sequence>
-		<xs:attribute name="Id" type="xs:ID" use="required"/>
-	</xs:complexType>
-	<xs:element name="SignedInstallationData" type="SignedInstallationDataType"/>
-	<!--                       -->
-	<!-- Metering Confirmation -->
-	<!--                       -->
-	<xs:complexType name="SignedMeteringDataType">
-		<xs:sequence>
-			<xs:element name="SessionID" type="v2gci_ct:sessionIDType"/>
-			<xs:element name="MeterInfo" type="v2gci_ct:MeterInfoType"/>
-			<xs:element name="Receipt" type="v2gci_ct:ReceiptType" minOccurs="0"/>
-			<xs:choice>
-				<xs:element name="Dynamic_SMDTControlMode" type="Dynamic_SMDTControlModeType"/>
-				<xs:element name="Scheduled_SMDTControlMode" type="Scheduled_SMDTControlModeType"/>
-			</xs:choice>
-		</xs:sequence>
-		<xs:attribute name="Id" type="xs:ID" use="required"/>
-	</xs:complexType>
-	<xs:element name="SignedMeteringData" type="SignedMeteringDataType"/>
-	<!-- Control Modes - Scheduled -->
-	<xs:complexType name="Scheduled_SMDTControlModeType">
-		<xs:sequence>
-			<xs:element name="SelectedScheduleTupleID" type="v2gci_ct:numericIDType"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- Control Modes - Dynamic -->
-	<xs:complexType name="Dynamic_SMDTControlModeType"/>
-	<!--             -->
-	<!-- SessionStop -->
-	<!--             -->
-	<xs:simpleType name="chargingSessionType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="Pause"/>
-			<xs:enumeration value="Terminate"/>
-			<xs:enumeration value="ServiceRenegotiation"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<!--                        -->
-	<!-- Vehicle Check In / Out -->
-	<!--                        -->
-	<xs:simpleType name="evCheckInStatusType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="CheckIn"/>
-			<xs:enumeration value="Processing"/>
-			<xs:enumeration value="Completed"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="evCheckOutStatusType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="CheckOut"/>
-			<xs:enumeration value="Processing"/>
-			<xs:enumeration value="Completed"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="evseCheckOutStatusType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="Scheduled"/>
-			<xs:enumeration value="Completed"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="parkingMethodType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="AutoParking"/>
-			<xs:enumeration value="MVGuideManual"/>
-			<xs:enumeration value="Manual"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:complexType name="TargetPositionType">
-		<xs:sequence>
-			<xs:element name="TargetOffsetX" type="xs:unsignedShort"/>
-			<xs:element name="TargetOffsetY" type="xs:unsignedShort"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- –––––––––––––– -->
-	<!-- Schedule Types -->
-	<!-- –––––––––––––– -->
-	<!--                   -->
-	<!-- PowerScheduleType -->
-	<!--                   -->
-	<xs:complexType name="PowerScheduleType">
-		<xs:sequence>
-			<xs:element name="TimeAnchor" type="xs:unsignedLong"/>
-			<xs:element name="AvailableEnergy" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-			<xs:element name="PowerTolerance" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-			<xs:element name="PowerScheduleEntries" type="PowerScheduleEntryListType"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- PowerScheduleType/PowerScheduleEntryListType -->
-	<xs:complexType name="PowerScheduleEntryListType">
-		<xs:sequence>
-			<xs:element name="PowerScheduleEntry" type="PowerScheduleEntryType" maxOccurs="1024"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- PowerScheduleType/PowerScheduleEntryListType/PowerScheduleEntryType -->
-	<xs:complexType name="PowerScheduleEntryType">
-		<xs:sequence>
-			<xs:element name="Duration" type="xs:unsignedInt"/>
-			<xs:element name="Power" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="Power_L2" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-			<xs:element name="Power_L3" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!--                   -->
-	<!-- PriceScheduleType -->
-	<!--                   -->
-	<xs:complexType name="PriceScheduleType" abstract="true">
-		<xs:sequence>
-			<xs:element name="TimeAnchor" type="xs:unsignedLong"/>
-			<xs:element name="PriceScheduleID" type="v2gci_ct:numericIDType"/>
-			<xs:element name="PriceScheduleDescription" type="v2gci_ct:descriptionType" minOccurs="0"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- PriceLevelScheduleType -->
-	<xs:complexType name="PriceLevelScheduleType">
-		<xs:complexContent>
-			<xs:extension base="PriceScheduleType">
-				<xs:sequence>
-					<xs:element name="NumberOfPriceLevels" type="xs:unsignedByte"/>
-					<xs:element name="PriceLevelScheduleEntries" type="PriceLevelScheduleEntryListType"/>
-				</xs:sequence>
-				<xs:attribute name="Id" type="xs:ID"/>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- PriceLevelScheduleType/PriceLevelScheduleEntryListType -->
-	<xs:complexType name="PriceLevelScheduleEntryListType">
-		<xs:sequence>
-			<xs:element name="PriceLevelScheduleEntry" type="PriceLevelScheduleEntryType" maxOccurs="1024"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- PriceLevelScheduleType/PriceLevelScheduleEntryListType/PriceLevelScheduleEntryType -->
-	<xs:complexType name="PriceLevelScheduleEntryType">
-		<xs:sequence>
-			<xs:element name="Duration" type="xs:unsignedInt"/>
-			<xs:element name="PriceLevel" type="xs:unsignedByte"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- AbsolutePriceScheduleType -->
-	<xs:complexType name="AbsolutePriceScheduleType">
-		<xs:complexContent>
-			<xs:extension base="PriceScheduleType">
-				<xs:sequence>
-					<xs:element name="Currency" type="currencyType"/>
-					<xs:element name="Language" type="languageType"/>
-					<xs:element name="PriceAlgorithm" type="v2gci_ct:identifierType"/>
-					<xs:element name="MinimumCost" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="MaximumCost" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="TaxRules" type="TaxRuleListType" minOccurs="0"/>
-					<xs:element name="PriceRuleStacks" type="PriceRuleStackListType"/>
-					<xs:element name="OverstayRules" type="OverstayRuleListType" minOccurs="0"/>
-					<xs:element name="AdditionalSelectedServices" type="AdditionalServiceListType" minOccurs="0"/>
-				</xs:sequence>
-				<xs:attribute name="Id" type="xs:ID"/>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- AbsolutePriceScheduleType/TaxRuleListType -->
-	<xs:complexType name="TaxRuleListType">
-		<xs:sequence>
-			<xs:element name="TaxRule" type="TaxRuleType" maxOccurs="10"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- AbsolutePriceScheduleType/TaxRuleListType/TaxRuleType -->
-	<xs:complexType name="TaxRuleType">
-		<xs:sequence>
-			<xs:element name="TaxRuleID" type="v2gci_ct:numericIDType"/>
-			<xs:element name="TaxRuleName" type="v2gci_ct:nameType" minOccurs="0"/>
-			<xs:element name="TaxRate" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="TaxIncludedInPrice" type="xs:boolean" minOccurs="0"/>
-			<xs:element name="AppliesToEnergyFee" type="xs:boolean"/>
-			<xs:element name="AppliesToParkingFee" type="xs:boolean"/>
-			<xs:element name="AppliesToOverstayFee" type="xs:boolean"/>
-			<xs:element name="AppliesMinimumMaximumCost" type="xs:boolean"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- AbsolutePriceScheduleType/PriceRuleStackListType -->
-	<xs:complexType name="PriceRuleStackListType">
-		<xs:sequence>
-			<xs:element name="PriceRuleStack" type="PriceRuleStackType" maxOccurs="1024"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- AbsolutePriceScheduleType/PriceRuleListType/PriceRuleStackType -->
-	<xs:complexType name="PriceRuleStackType">
-		<xs:sequence>
-			<xs:element name="Duration" type="xs:unsignedInt"/>
-			<xs:element name="PriceRule" type="PriceRuleType" maxOccurs="8"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- AbsolutePriceScheduleType/PriceRuleListType/PriceRuleStackType/PriceRuleType -->
-	<xs:complexType name="PriceRuleType">
-		<xs:sequence>
-			<xs:element name="EnergyFee" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="ParkingFee" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-			<xs:element name="ParkingFeePeriod" type="xs:unsignedInt" minOccurs="0"/>
-			<xs:element name="CarbonDioxideEmission" type="xs:unsignedShort" minOccurs="0"/>
-			<xs:element name="RenewableGenerationPercentage" type="xs:unsignedByte" minOccurs="0"/>
-			<xs:element name="PowerRangeStart" type="v2gci_ct:RationalNumberType"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- AbsolutePriceScheduleType/OverstayRuleListType -->
-	<xs:complexType name="OverstayRuleListType">
-		<xs:sequence>
-			<xs:element name="OverstayTimeThreshold" type="xs:unsignedInt" minOccurs="0"/>
-			<xs:element name="OverstayPowerThreshold" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-			<xs:element name="OverstayRule" type="OverstayRuleType" maxOccurs="5"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- AbsolutePriceScheduleType/OverstayRuleListType/OverstayRuleType -->
-	<xs:complexType name="OverstayRuleType">
-		<xs:sequence>
-			<xs:element name="OverstayRuleDescription" type="v2gci_ct:descriptionType" minOccurs="0"/>
-			<xs:element name="StartTime" type="xs:unsignedInt"/>
-			<xs:element name="OverstayFee" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="OverstayFeePeriod" type="xs:unsignedInt"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- AbsolutePriceScheduleType/AdditionalServicesListType -->
-	<xs:complexType name="AdditionalServiceListType">
-		<xs:sequence>
-			<xs:element name="AdditionalService" type="AdditionalServiceType" maxOccurs="5"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- this allows for additional services -->
-	<xs:complexType name="AdditionalServiceType">
-		<xs:sequence>
-			<xs:element name="ServiceName" type="v2gci_ct:nameType"/>
-			<xs:element name="ServiceFee" type="v2gci_ct:RationalNumberType"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:simpleType name="currencyType">
-		<xs:restriction base="xs:string">
-			<xs:maxLength value="3"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="languageType">
-		<xs:restriction base="xs:string">
-			<xs:maxLength value="3"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<!--                  -->
-	<!-- EV Power Profile -->
-	<!--                  -->
-	<xs:complexType name="EVPowerProfileEntryListType">
-		<xs:sequence>
-			<xs:element name="EVPowerProfileEntry" type="PowerScheduleEntryType" maxOccurs="2048"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="EVPowerProfileType">
-		<xs:sequence>
-			<xs:element name="TimeAnchor" type="xs:unsignedLong"/>
-			<xs:choice>
-				<xs:element name="Dynamic_EVPPTControlMode" type="Dynamic_EVPPTControlModeType"/>
-				<xs:element name="Scheduled_EVPPTControlMode" type="Scheduled_EVPPTControlModeType"/>
-			</xs:choice>
-			<xs:element name="EVPowerProfileEntries" type="EVPowerProfileEntryListType"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- Control Modes - Scheduled -->
-	<xs:complexType name="Scheduled_EVPPTControlModeType">
-		<xs:sequence>
-			<xs:element name="SelectedScheduleTupleID" type="v2gci_ct:numericIDType"/>
-			<xs:element name="PowerToleranceAcceptance" type="powerToleranceAcceptanceType" minOccurs="0"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:simpleType name="powerToleranceAcceptanceType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="PowerToleranceNotConfirmed"/>
-			<xs:enumeration value="PowerToleranceConfirmed"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<!-- Control Modes - Dynamic -->
-	<xs:complexType name="Dynamic_EVPPTControlModeType"/>
-	<!--                 -->
-	<!-- EV Energy Offer -->
-	<!--                 -->
-	<xs:complexType name="EVEnergyOfferType">
-		<xs:sequence>
-			<xs:element name="EVPowerSchedule" type="EVPowerScheduleType"/>
-			<xs:element name="EVAbsolutePriceSchedule" type="EVAbsolutePriceScheduleType"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="EVPowerScheduleType">
-		<xs:sequence>
-			<xs:element name="TimeAnchor" type="xs:unsignedLong"/>
-			<xs:element name="EVPowerScheduleEntries" type="EVPowerScheduleEntryListType"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="EVPowerScheduleEntryListType">
-		<xs:sequence>
-			<xs:element name="EVPowerScheduleEntry" type="EVPowerScheduleEntryType" maxOccurs="1024"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="EVPowerScheduleEntryType">
-		<xs:sequence>
-			<xs:element name="Duration" type="xs:unsignedInt"/>
-			<xs:element name="Power" type="v2gci_ct:RationalNumberType"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="EVAbsolutePriceScheduleType">
-		<xs:sequence>
-			<xs:element name="TimeAnchor" type="xs:unsignedLong"/>
-			<xs:element name="Currency" type="currencyType"/>
-			<xs:element name="PriceAlgorithm" type="v2gci_ct:identifierType"/>
-			<xs:element name="EVPriceRuleStacks" type="EVPriceRuleStackListType"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="EVPriceRuleStackListType">
-		<xs:sequence>
-			<xs:element name="EVPriceRuleStack" type="EVPriceRuleStackType" maxOccurs="1024"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="EVPriceRuleStackType">
-		<xs:sequence>
-			<xs:element name="Duration" type="xs:unsignedInt"/>
-			<xs:element name="EVPriceRule" type="EVPriceRuleType" maxOccurs="8"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="EVPriceRuleType">
-		<xs:sequence>
-			<xs:element name="EnergyFee" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="PowerRangeStart" type="v2gci_ct:RationalNumberType"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- ––––––––––––––––– -->
-	<!-- Certificate Types -->
-	<!-- ––––––––––––––––– -->
-	<xs:simpleType name="certificateType">
-		<xs:restriction base="xs:base64Binary">
-			<xs:maxLength value="1600"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:complexType name="EMAIDListType">
-		<xs:sequence>
-			<xs:element name="EMAID" type="v2gci_ct:identifierType" maxOccurs="8"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="SubCertificatesType">
-		<xs:sequence>
-			<xs:element name="Certificate" type="certificateType" maxOccurs="3"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="CertificateChainType">
-		<xs:sequence>
-			<xs:element name="Certificate" type="certificateType"/>
-			<xs:element name="SubCertificates" type="SubCertificatesType" minOccurs="0"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="SignedCertificateChainType">
-		<xs:sequence>
-			<xs:element name="Certificate" type="certificateType"/>
-			<xs:element name="SubCertificates" type="SubCertificatesType" minOccurs="0"/>
-		</xs:sequence>
-		<xs:attribute name="Id" type="xs:ID" use="required"/>
-	</xs:complexType>
-	<xs:complexType name="ContractCertificateChainType">
-		<xs:sequence>
-			<xs:element name="Certificate" type="certificateType"/>
-			<xs:element name="SubCertificates" type="SubCertificatesType"/>
-		</xs:sequence>
-	</xs:complexType>
-</xs:schema>
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_20/V2G_CI_CommonTypes.xsd /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_20/V2G_CI_CommonTypes.xsd
new file mode 000000
index c9345d5..0000000
--- /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_20/V2G_CI_CommonTypes.xsd
+++ /dev/null
@@ -1,321 +0,0 @@
-<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="urn:iso:std:iso:15118:-20:CommonTypes" xmlns:xmlsig="http://www.w3.org/2000/09/xmldsig#" targetNamespace="urn:iso:std:iso:15118:-20:CommonTypes" elementFormDefault="qualified" attributeFormDefault="qualified" version="15118:-20">
-	<xs:import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
-	<!--                     -->
-	<!-- ––––––––––––––––––– -->
-	<!-- Basic Message Types -->
-	<!-- ––––––––––––––––––– -->
-	<!--        -->
-	<!-- Header -->
-	<!--        -->
-	<xs:complexType name="MessageHeaderType">
-		<xs:sequence>
-			<xs:element name="SessionID" type="sessionIDType"/>
-			<xs:element name="TimeStamp" type="xs:unsignedLong"/>
-			<xs:element ref="xmlsig:Signature" minOccurs="0"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!--             -->
-	<!-- V2G Message -->
-	<!--             -->
-	<xs:complexType name="V2GMessageType" abstract="true">
-		<xs:sequence>
-			<xs:element name="Header" type="MessageHeaderType"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!--                          -->
-	<!-- V2G Request and Response -->
-	<!--                          -->
-	<xs:complexType name="V2GRequestType" abstract="true">
-		<xs:complexContent>
-			<xs:extension base="V2GMessageType"/>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:complexType name="V2GResponseType" abstract="true">
-		<xs:complexContent>
-			<xs:extension base="V2GMessageType">
-				<xs:sequence>
-					<xs:element name="ResponseCode" type="responseCodeType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--                            -->
-	<!-- Charge Parameter Discovery -->
-	<!--                            -->
-	<xs:complexType name="ChargeParameterDiscoveryReqType" abstract="true">
-		<xs:complexContent>
-			<xs:extension base="V2GRequestType"/>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:complexType name="ChargeParameterDiscoveryResType" abstract="true">
-		<xs:complexContent>
-			<xs:extension base="V2GResponseType"/>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--             -->
-	<!-- Charge Loop -->
-	<!--             -->
-	<xs:complexType name="ChargeLoopReqType" abstract="true">
-		<xs:complexContent>
-			<xs:extension base="V2GRequestType">
-				<xs:sequence>
-					<xs:element name="DisplayParameters" type="DisplayParametersType" minOccurs="0"/>
-					<xs:element name="MeterInfoRequested" type="xs:boolean"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:complexType name="ChargeLoopResType" abstract="true">
-		<xs:complexContent>
-			<xs:extension base="V2GResponseType">
-				<xs:sequence>
-					<xs:element name="EVSEStatus" type="EVSEStatusType" minOccurs="0"/>
-					<xs:element name="MeterInfo" type="MeterInfoType" minOccurs="0"/>
-					<xs:element name="Receipt" type="ReceiptType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--                        -->
-	<!-- –––––––––––––––––––––– -->
-	<!-- Message Specific Types -->
-	<!-- –––––––––––––––––––––– -->
-	<!--             -->
-	<!-- Charge Loop -->
-	<!--             -->
-	<!-- Control Modes -->
-	<xs:element name="CLReqControlMode" type="CLReqControlModeType"/>
-	<xs:complexType name="CLReqControlModeType" abstract="true"/>
-	<xs:element name="CLResControlMode" type="CLResControlModeType"/>
-	<xs:complexType name="CLResControlModeType" abstract="true"/>
-	<!-- Control Modes - Scheduled -->
-	<xs:complexType name="Scheduled_CLReqControlModeType" abstract="true">
-		<xs:complexContent>
-			<xs:extension base="CLReqControlModeType">
-				<xs:sequence>
-					<xs:element name="EVTargetEnergyRequest" type="RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMaximumEnergyRequest" type="RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMinimumEnergyRequest" type="RationalNumberType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:complexType name="Scheduled_CLResControlModeType" abstract="true">
-		<xs:complexContent>
-			<xs:extension base="CLResControlModeType"/>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- Control Modes - Dynamic -->
-	<xs:complexType name="Dynamic_CLReqControlModeType" abstract="true">
-		<xs:complexContent>
-			<xs:extension base="CLReqControlModeType">
-				<xs:sequence>
-					<xs:element name="DepartureTime" type="xs:unsignedInt" minOccurs="0"/>
-					<xs:element name="EVTargetEnergyRequest" type="RationalNumberType"/>
-					<xs:element name="EVMaximumEnergyRequest" type="RationalNumberType"/>
-					<xs:element name="EVMinimumEnergyRequest" type="RationalNumberType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:complexType name="Dynamic_CLResControlModeType" abstract="true">
-		<xs:complexContent>
-			<xs:extension base="CLResControlModeType">
-				<xs:sequence>
-					<xs:element name="DepartureTime" type="xs:unsignedInt" minOccurs="0"/>
-					<xs:element name="MinimumSOC" type="percentValueType" minOccurs="0"/>
-					<xs:element name="TargetSOC" type="percentValueType" minOccurs="0"/>
-					<xs:element name="AckMaxDelay" type="xs:unsignedShort" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- ––––––––––––––––––– -->
-	<!-- Common Simple Types -->
-	<!-- ––––––––––––––––––– -->
-	<!-- Binary Types -->
-	<!-- ID Types -->
-	<xs:simpleType name="numericIDType">
-		<xs:restriction base="xs:unsignedInt">
-			<xs:minInclusive value="1"/>
-			<xs:maxInclusive value="4294967295"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="sessionIDType">
-		<xs:restriction base="xs:hexBinary">
-			<xs:length value="8"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<!-- Enumerations -->
-	<xs:simpleType name="evseNotificationType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="Pause"/>
-			<xs:enumeration value="ExitStandby"/>
-			<xs:enumeration value="Terminate"/>
-			<xs:enumeration value="ScheduleRenegotiation"/>
-			<xs:enumeration value="ServiceRenegotiation"/>
-			<xs:enumeration value="MeteringConfirmation"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="processingType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="Finished"/>
-			<xs:enumeration value="Ongoing"/>
-			<xs:enumeration value="Ongoing_WaitingForCustomerInteraction"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="responseCodeType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="OK"/>
-			<xs:enumeration value="OK_CertificateExpiresSoon"/>
-			<xs:enumeration value="OK_NewSessionEstablished"/>
-			<xs:enumeration value="OK_OldSessionJoined"/>
-			<xs:enumeration value="OK_PowerToleranceConfirmed"/>
-			<xs:enumeration value="WARNING_AuthorizationSelectionInvalid"/>
-			<xs:enumeration value="WARNING_CertificateExpired"/>
-			<xs:enumeration value="WARNING_CertificateNotYetValid"/>
-			<xs:enumeration value="WARNING_CertificateRevoked"/>
-			<xs:enumeration value="WARNING_CertificateValidationError"/>
-			<xs:enumeration value="WARNING_ChallengeInvalid"/>
-			<xs:enumeration value="WARNING_EIMAuthorizationFailure"/>
-			<xs:enumeration value="WARNING_eMSPUnknown"/>
-			<xs:enumeration value="WARNING_EVPowerProfileViolation"/>
-			<xs:enumeration value="WARNING_GeneralPnCAuthorizationError"/>
-			<xs:enumeration value="WARNING_NoCertificateAvailable"/>
-			<xs:enumeration value="WARNING_NoContractMatchingPCIDFound"/>
-			<xs:enumeration value="WARNING_PowerToleranceNotConfirmed"/>
-			<xs:enumeration value="WARNING_ScheduleRenegotiationFailed"/>
-			<xs:enumeration value="WARNING_StandbyNotAllowed"/>
-			<xs:enumeration value="WARNING_WPT"/>
-			<xs:enumeration value="FAILED"/>
-			<xs:enumeration value="FAILED_AssociationError"/>
-			<xs:enumeration value="FAILED_ContactorError"/>
-			<xs:enumeration value="FAILED_EVPowerProfileInvalid"/>
-			<xs:enumeration value="FAILED_EVPowerProfileViolation"/>
-			<xs:enumeration value="FAILED_MeteringSignatureNotValid"/>
-			<xs:enumeration value="FAILED_NoEnergyTransferServiceSelected"/>
-			<xs:enumeration value="FAILED_NoServiceRenegotiationSupported"/>
-			<xs:enumeration value="FAILED_PauseNotAllowed"/>
-			<xs:enumeration value="FAILED_PowerDeliveryNotApplied"/>
-			<xs:enumeration value="FAILED_PowerToleranceNotConfirmed"/>
-			<xs:enumeration value="FAILED_ScheduleRenegotiation"/>
-			<xs:enumeration value="FAILED_ScheduleSelectionInvalid"/>
-			<xs:enumeration value="FAILED_SequenceError"/>
-			<xs:enumeration value="FAILED_ServiceIDInvalid"/>
-			<xs:enumeration value="FAILED_ServiceSelectionInvalid"/>
-			<xs:enumeration value="FAILED_SignatureError"/>
-			<xs:enumeration value="FAILED_UnknownSession"/>
-			<xs:enumeration value="FAILED_WrongChargeParameter"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<!-- Integers -->
-	<xs:simpleType name="percentValueType">
-		<xs:restriction base="xs:byte">
-			<xs:minInclusive value="0"/>
-			<xs:maxInclusive value="100"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<!-- Strings -->
-	<xs:simpleType name="identifierType">
-		<xs:restriction base="xs:string">
-			<xs:maxLength value="255"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="nameType">
-		<xs:restriction base="xs:string">
-			<xs:maxLength value="80"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="descriptionType">
-		<xs:restriction base="xs:string">
-			<xs:maxLength value="160"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<!-- –––––––––––––––––––– -->
-	<!-- Common Complex Types -->
-	<!-- –––––––––––––––––––– -->
-	<xs:complexType name="DisplayParametersType">
-		<xs:sequence>
-			<xs:element name="PresentSOC" type="percentValueType" minOccurs="0"/>
-			<xs:element name="MinimumSOC" type="percentValueType" minOccurs="0"/>
-			<xs:element name="TargetSOC" type="percentValueType" minOccurs="0"/>
-			<xs:element name="MaximumSOC" type="percentValueType" minOccurs="0"/>
-			<xs:element name="RemainingTimeToMinimumSOC" type="xs:unsignedInt" minOccurs="0"/>
-			<xs:element name="RemainingTimeToTargetSOC" type="xs:unsignedInt" minOccurs="0"/>
-			<xs:element name="RemainingTimeToMaximumSOC" type="xs:unsignedInt" minOccurs="0"/>
-			<xs:element name="ChargingComplete" type="xs:boolean" minOccurs="0"/>
-			<xs:element name="BatteryEnergyCapacity" type="RationalNumberType" minOccurs="0"/>
-			<xs:element name="InletHot" type="xs:boolean" minOccurs="0"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="EVSEStatusType">
-		<xs:sequence>
-			<xs:element name="NotificationMaxDelay" type="xs:unsignedShort"/>
-			<xs:element name="EVSENotification" type="evseNotificationType"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="RationalNumberType">
-		<xs:sequence>
-			<xs:element name="Exponent" type="xs:byte"/>
-			<xs:element name="Value" type="xs:short"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- –––––––––––––– -->
-	<!-- Metering Types -->
-	<!-- –––––––––––––– -->
-	<xs:simpleType name="meterIDType">
-		<xs:restriction base="xs:string">
-			<xs:maxLength value="32"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="meterSignatureType">
-		<xs:restriction base="xs:base64Binary">
-			<xs:maxLength value="64"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:complexType name="MeterInfoType">
-		<xs:sequence>
-			<xs:element name="MeterID" type="meterIDType"/>
-			<xs:element name="ChargedEnergyReadingWh" type="xs:unsignedLong"/>
-			<xs:element name="BPT_DischargedEnergyReadingWh" type="xs:unsignedLong" minOccurs="0"/>
-			<xs:element name="CapacitiveEnergyReadingVARh" type="xs:unsignedLong" minOccurs="0"/>
-			<xs:element name="BPT_InductiveEnergyReadingVARh" type="xs:unsignedLong" minOccurs="0"/>
-			<xs:element name="MeterSignature" type="meterSignatureType" minOccurs="0"/>
-			<xs:element name="MeterStatus" type="xs:short" minOccurs="0"/>
-			<xs:element name="MeterTimestamp" type="xs:unsignedLong" minOccurs="0"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- –––––––––––––––––––––– -->
-	<!-- Absolute Pricing Types -->
-	<!-- –––––––––––––––––––––– -->
-	<xs:complexType name="DetailedCostType">
-		<xs:sequence>
-			<xs:element name="Amount" type="RationalNumberType"/>
-			<xs:element name="CostPerUnit" type="RationalNumberType"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="DetailedTaxType">
-		<xs:sequence>
-			<xs:element name="TaxRuleID" type="numericIDType"/>
-			<xs:element name="Amount" type="RationalNumberType"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="ReceiptType">
-		<xs:sequence>
-			<xs:element name="TimeAnchor" type="xs:unsignedLong"/>
-			<xs:element name="EnergyCosts" type="DetailedCostType" minOccurs="0"/>
-			<xs:element name="OccupancyCosts" type="DetailedCostType" minOccurs="0"/>
-			<xs:element name="AdditionalServicesCosts" type="DetailedCostType" minOccurs="0"/>
-			<xs:element name="OverstayCosts" type="DetailedCostType" minOccurs="0"/>
-			<xs:element name="TaxCosts" type="DetailedTaxType" minOccurs="0" maxOccurs="10"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- ––––––––––––––––––– -->
-	<!-- Authorization Types -->
-	<!-- ––––––––––––––––––– -->
-	<xs:complexType name="ListOfRootCertificateIDsType">
-		<xs:sequence>
-			<xs:element name="RootCertificateID" type="xmlsig:X509IssuerSerialType" maxOccurs="20"/>
-		</xs:sequence>
-	</xs:complexType>
-</xs:schema>
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_20/V2G_CI_DC.xsd /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_20/V2G_CI_DC.xsd
new file mode 000000
index d12fb2b..0000000
--- /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_20/V2G_CI_DC.xsd
+++ /dev/null
@@ -1,300 +0,0 @@
-<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="urn:iso:std:iso:15118:-20:DC" xmlns:v2gci_ct="urn:iso:std:iso:15118:-20:CommonTypes" targetNamespace="urn:iso:std:iso:15118:-20:DC" elementFormDefault="qualified" attributeFormDefault="qualified" version="15118:-20">
-	<xs:import namespace="urn:iso:std:iso:15118:-20:CommonTypes" schemaLocation="V2G_CI_CommonTypes.xsd"/>
-	<!--             -->
-	<!-- ––––––––––– -->
-	<!-- DC Messages -->
-	<!-- ––––––––––– -->
-	<!--                               -->
-	<!-- DC Charge Parameter Discovery -->
-	<!--                               -->
-	<xs:element name="DC_ChargeParameterDiscoveryReq" type="DC_ChargeParameterDiscoveryReqType"/>
-	<xs:complexType name="DC_ChargeParameterDiscoveryReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:ChargeParameterDiscoveryReqType">
-				<xs:sequence>
-					<xs:element ref="DC_CPDReqEnergyTransferMode"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="DC_ChargeParameterDiscoveryRes" type="DC_ChargeParameterDiscoveryResType"/>
-	<xs:complexType name="DC_ChargeParameterDiscoveryResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:ChargeParameterDiscoveryResType">
-				<xs:sequence>
-					<xs:element ref="DC_CPDResEnergyTransferMode"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--                -->
-	<!-- DC Cable Check -->
-	<!--                -->
-	<xs:element name="DC_CableCheckReq" type="DC_CableCheckReqType"/>
-	<xs:complexType name="DC_CableCheckReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GRequestType"/>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="DC_CableCheckRes" type="DC_CableCheckResType"/>
-	<xs:complexType name="DC_CableCheckResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GResponseType">
-				<xs:sequence>
-					<xs:element name="EVSEProcessing" type="v2gci_ct:processingType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--               -->
-	<!-- DC Pre Charge -->
-	<!--               -->
-	<xs:element name="DC_PreChargeReq" type="DC_PreChargeReqType"/>
-	<xs:complexType name="DC_PreChargeReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GRequestType">
-				<xs:sequence>
-					<xs:element name="EVProcessing" type="v2gci_ct:processingType"/>
-					<xs:element name="EVPresentVoltage" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVTargetVoltage" type="v2gci_ct:RationalNumberType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="DC_PreChargeRes" type="DC_PreChargeResType"/>
-	<xs:complexType name="DC_PreChargeResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GResponseType">
-				<xs:sequence>
-					<xs:element name="EVSEPresentVoltage" type="v2gci_ct:RationalNumberType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--                -->
-	<!-- DC Charge Loop -->
-	<!--                -->
-	<xs:element name="DC_ChargeLoopReq" type="DC_ChargeLoopReqType"/>
-	<xs:complexType name="DC_ChargeLoopReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:ChargeLoopReqType">
-				<xs:sequence>
-					<xs:element name="EVPresentVoltage" type="v2gci_ct:RationalNumberType"/>
-					<xs:element ref="v2gci_ct:CLReqControlMode"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="DC_ChargeLoopRes" type="DC_ChargeLoopResType"/>
-	<xs:complexType name="DC_ChargeLoopResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:ChargeLoopResType">
-				<xs:sequence>
-					<xs:element name="EVSEPresentCurrent" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVSEPresentVoltage" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVSEPowerLimitAchieved" type="xs:boolean"/>
-					<xs:element name="EVSECurrentLimitAchieved" type="xs:boolean"/>
-					<xs:element name="EVSEVoltageLimitAchieved" type="xs:boolean"/>
-					<xs:element ref="v2gci_ct:CLResControlMode"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--                      -->
-	<!-- DC Welding Detection -->
-	<!--                      -->
-	<xs:element name="DC_WeldingDetectionReq" type="DC_WeldingDetectionReqType"/>
-	<xs:complexType name="DC_WeldingDetectionReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GRequestType">
-				<xs:sequence>
-					<xs:element name="EVProcessing" type="v2gci_ct:processingType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="DC_WeldingDetectionRes" type="DC_WeldingDetectionResType"/>
-	<xs:complexType name="DC_WeldingDetectionResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GResponseType">
-				<xs:sequence>
-					<xs:element name="EVSEPresentVoltage" type="v2gci_ct:RationalNumberType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--                        -->
-	<!-- –––––––––––––––––––––– -->
-	<!-- Message Specific Types -->
-	<!-- –––––––––––––––––––––– -->
-	<!--                               -->
-	<!-- DC Charge Parameter Discovery -->
-	<!--                               -->
-	<!-- Energy Transfer Mode - DC -->
-	<xs:element name="DC_CPDReqEnergyTransferMode" type="DC_CPDReqEnergyTransferModeType"/>
-	<xs:complexType name="DC_CPDReqEnergyTransferModeType">
-		<xs:sequence>
-			<xs:element name="EVMaximumChargePower" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="EVMinimumChargePower" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="EVMaximumChargeCurrent" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="EVMinimumChargeCurrent" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="EVMaximumVoltage" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="EVMinimumVoltage" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="TargetSOC" type="v2gci_ct:percentValueType" minOccurs="0"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:element name="DC_CPDResEnergyTransferMode" type="DC_CPDResEnergyTransferModeType"/>
-	<xs:complexType name="DC_CPDResEnergyTransferModeType">
-		<xs:sequence>
-			<xs:element name="EVSEMaximumChargePower" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="EVSEMinimumChargePower" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="EVSEMaximumChargeCurrent" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="EVSEMinimumChargeCurrent" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="EVSEMaximumVoltage" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="EVSEMinimumVoltage" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="EVSEPowerRampLimitation" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!-- Energy Transfer Mode - DC BPT -->
-	<xs:element name="BPT_DC_CPDReqEnergyTransferMode" type="BPT_DC_CPDReqEnergyTransferModeType" substitutionGroup="DC_CPDReqEnergyTransferMode"/>
-	<xs:complexType name="BPT_DC_CPDReqEnergyTransferModeType">
-		<xs:complexContent>
-			<xs:extension base="DC_CPDReqEnergyTransferModeType">
-				<xs:sequence>
-					<xs:element name="EVMaximumDischargePower" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVMinimumDischargePower" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVMaximumDischargeCurrent" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVMinimumDischargeCurrent" type="v2gci_ct:RationalNumberType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="BPT_DC_CPDResEnergyTransferMode" type="BPT_DC_CPDResEnergyTransferModeType" substitutionGroup="DC_CPDResEnergyTransferMode"/>
-	<xs:complexType name="BPT_DC_CPDResEnergyTransferModeType">
-		<xs:complexContent>
-			<xs:extension base="DC_CPDResEnergyTransferModeType">
-				<xs:sequence>
-					<xs:element name="EVSEMaximumDischargePower" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVSEMinimumDischargePower" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVSEMaximumDischargeCurrent" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVSEMinimumDischargeCurrent" type="v2gci_ct:RationalNumberType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--                -->
-	<!-- DC Charge Loop -->
-	<!--                -->
-	<!-- Control Modes - Scheduled -->
-	<xs:element name="Scheduled_DC_CLReqControlMode" type="Scheduled_DC_CLReqControlModeType" substitutionGroup="v2gci_ct:CLReqControlMode"/>
-	<xs:complexType name="Scheduled_DC_CLReqControlModeType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:Scheduled_CLReqControlModeType">
-				<xs:sequence>
-					<xs:element name="EVTargetCurrent" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVTargetVoltage" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVMaximumChargePower" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMinimumChargePower" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMaximumChargeCurrent" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMaximumVoltage" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMinimumVoltage" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="Scheduled_DC_CLResControlMode" type="Scheduled_DC_CLResControlModeType" substitutionGroup="v2gci_ct:CLResControlMode"/>
-	<xs:complexType name="Scheduled_DC_CLResControlModeType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:Scheduled_CLResControlModeType">
-				<xs:sequence>
-					<xs:element name="EVSEMaximumChargePower" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVSEMinimumChargePower" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVSEMaximumChargeCurrent" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVSEMaximumVoltage" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- Control Modes - Scheduled - BPT -->
-	<xs:element name="BPT_Scheduled_DC_CLReqControlMode" type="BPT_Scheduled_DC_CLReqControlModeType" substitutionGroup="Scheduled_DC_CLReqControlMode"/>
-	<xs:complexType name="BPT_Scheduled_DC_CLReqControlModeType">
-		<xs:complexContent>
-			<xs:extension base="Scheduled_DC_CLReqControlModeType">
-				<xs:sequence>
-					<xs:element name="EVMaximumDischargePower" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMinimumDischargePower" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMaximumDischargeCurrent" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="BPT_Scheduled_DC_CLResControlMode" type="BPT_Scheduled_DC_CLResControlModeType" substitutionGroup="Scheduled_DC_CLResControlMode"/>
-	<xs:complexType name="BPT_Scheduled_DC_CLResControlModeType">
-		<xs:complexContent>
-			<xs:extension base="Scheduled_DC_CLResControlModeType">
-				<xs:sequence>
-					<xs:element name="EVSEMaximumDischargePower" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVSEMinimumDischargePower" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVSEMaximumDischargeCurrent" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVSEMinimumVoltage" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- Control Modes - Dynamic -->
-	<xs:element name="Dynamic_DC_CLReqControlMode" type="Dynamic_DC_CLReqControlModeType" substitutionGroup="v2gci_ct:CLReqControlMode"/>
-	<xs:complexType name="Dynamic_DC_CLReqControlModeType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:Dynamic_CLReqControlModeType">
-				<xs:sequence>
-					<xs:element name="EVMaximumChargePower" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVMinimumChargePower" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVMaximumChargeCurrent" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVMaximumVoltage" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVMinimumVoltage" type="v2gci_ct:RationalNumberType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="Dynamic_DC_CLResControlMode" type="Dynamic_DC_CLResControlModeType" substitutionGroup="v2gci_ct:CLResControlMode"/>
-	<xs:complexType name="Dynamic_DC_CLResControlModeType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:Dynamic_CLResControlModeType">
-				<xs:sequence>
-					<xs:element name="EVSEMaximumChargePower" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVSEMinimumChargePower" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVSEMaximumChargeCurrent" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVSEMaximumVoltage" type="v2gci_ct:RationalNumberType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!-- Control Modes - Dynamic - BPT -->
-	<xs:element name="BPT_Dynamic_DC_CLReqControlMode" type="BPT_Dynamic_DC_CLReqControlModeType" substitutionGroup="Dynamic_DC_CLReqControlMode"/>
-	<xs:complexType name="BPT_Dynamic_DC_CLReqControlModeType">
-		<xs:complexContent>
-			<xs:extension base="Dynamic_DC_CLReqControlModeType">
-				<xs:sequence>
-					<xs:element name="EVMaximumDischargePower" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVMinimumDischargePower" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVMaximumDischargeCurrent" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVMaximumV2XEnergyRequest" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVMinimumV2XEnergyRequest" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="BPT_Dynamic_DC_CLResControlMode" type="BPT_Dynamic_DC_CLResControlModeType" substitutionGroup="Dynamic_DC_CLResControlMode"/>
-	<xs:complexType name="BPT_Dynamic_DC_CLResControlModeType">
-		<xs:complexContent>
-			<xs:extension base="Dynamic_DC_CLResControlModeType">
-				<xs:sequence>
-					<xs:element name="EVSEMaximumDischargePower" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVSEMinimumDischargePower" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVSEMaximumDischargeCurrent" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVSEMinimumVoltage" type="v2gci_ct:RationalNumberType"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-</xs:schema>
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_20/V2G_CI_WPT.xsd /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_20/V2G_CI_WPT.xsd
new file mode 000000
index 0259576..0000000
--- /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_20/V2G_CI_WPT.xsd
+++ /dev/null
@@ -1,427 +0,0 @@
-<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="urn:iso:std:iso:15118:-20:WPT" xmlns:v2gci_ct="urn:iso:std:iso:15118:-20:CommonTypes" targetNamespace="urn:iso:std:iso:15118:-20:WPT" elementFormDefault="qualified" attributeFormDefault="qualified" version="15118:-20">
-	<xs:import namespace="urn:iso:std:iso:15118:-20:CommonTypes" schemaLocation="V2G_CI_CommonTypes.xsd"/>
-	<!--              -->
-	<!-- –––––––––––– -->
-	<!-- WPT Messages -->
-	<!-- –––––––––––– -->
-	<!--                               -->
-	<!-- WPT Fine Positioning Setup -->
-	<!--                               -->
-	<xs:element name="WPT_FinePositioningSetupReq" type="WPT_FinePositioningSetupReqType"/>
-	<xs:complexType name="WPT_FinePositioningSetupReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GRequestType">
-				<xs:sequence>
-					<xs:element name="EVProcessing" type="v2gci_ct:processingType"/>
-					<xs:element name="EVDeviceFinePositioningMethodList" type="WPT_FinePositioningMethodListType"/>
-					<xs:element name="EVDevicePairingMethodList" type="WPT_PairingMethodListType"/>
-					<xs:element name="EVDeviceAlignmentCheckMethodList" type="WPT_AlignmentCheckMethodListType"/>
-					<xs:element name="NaturalOffset" type="xs:unsignedShort"/>
-					<xs:element name="VendorSpecificDataContainer" type="WPT_DataContainerType" minOccurs="0" maxOccurs="16"/>
-					<!-- optional LF System information -->
-					<xs:element name="LF_SystemSetupData" type="WPT_LF_SystemSetupDataType" minOccurs="0"/>
-					<!-- end LF System information -->
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="WPT_FinePositioningSetupRes" type="WPT_FinePositioningSetupResType"/>
-	<xs:complexType name="WPT_FinePositioningSetupResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GResponseType">
-				<xs:sequence>
-					<xs:element name="PrimaryDeviceFinePositioningMethodList" type="WPT_FinePositioningMethodListType"/>
-					<xs:element name="PrimaryDevicePairingMethodList" type="WPT_PairingMethodListType"/>
-					<xs:element name="PrimaryDeviceAlignmentCheckMethodList" type="WPT_AlignmentCheckMethodListType"/>
-					<xs:element name="NaturalOffset" type="xs:unsignedShort"/>
-					<xs:element name="VendorSpecificDataContainer" type="WPT_DataContainerType" minOccurs="0" maxOccurs="16"/>
-					<!-- optional LF System information -->
-					<xs:element name="LF_SystemSetupData" type="WPT_LF_SystemSetupDataType" minOccurs="0"/>
-					<!-- end LF System information -->
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--                         -->
-	<!-- WPT FinePositioning -->
-	<!--                         -->
-	<xs:element name="WPT_FinePositioningReq" type="WPT_FinePositioningReqType"/>
-	<xs:complexType name="WPT_FinePositioningReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GRequestType">
-				<xs:sequence>
-					<xs:element name="EVProcessing" type="v2gci_ct:processingType"/>
-					<xs:element name="EVResultCode" type="WPT_EVResultType"/>
-					<xs:element name="VendorSpecificDataContainer" type="WPT_DataContainerType" minOccurs="0" maxOccurs="16"/>
-					<!-- optional LF System information -->
-					<xs:element name="WPT_LF_DataPackageList" type="WPT_LF_DataPackageListType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="WPT_FinePositioningRes" type="WPT_FinePositioningResType"/>
-	<xs:complexType name="WPT_FinePositioningResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GResponseType">
-				<xs:sequence>
-					<xs:element name="EVSEProcessing" type="v2gci_ct:processingType"/>
-					<xs:element name="VendorSpecificDataContainer" type="WPT_DataContainerType" minOccurs="0" maxOccurs="16"/>
-					<!-- optional LF System information -->
-					<xs:element name="WPT_LF_DataPackageList" type="WPT_LF_DataPackageListType" minOccurs="0"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--             -->
-	<!-- WPT Pairing -->
-	<!--             -->
-	<xs:element name="WPT_PairingReq" type="WPT_PairingReqType"/>
-	<xs:complexType name="WPT_PairingReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GRequestType">
-				<xs:sequence>
-					<xs:element name="EVProcessing" type="v2gci_ct:processingType"/>
-					<xs:element name="ObservedIDCode" type="v2gci_ct:numericIDType" minOccurs="0"/>
-					<xs:element name="EVResultCode" type="WPT_EVResultType"/>
-					<xs:element name="VendorSpecificDataContainer" type="WPT_DataContainerType" minOccurs="0" maxOccurs="16"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="WPT_PairingRes" type="WPT_PairingResType"/>
-	<xs:complexType name="WPT_PairingResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GResponseType">
-				<xs:sequence>
-					<xs:element name="EVSEProcessing" type="v2gci_ct:processingType"/>
-					<xs:element name="ObservedIDCode" type="v2gci_ct:numericIDType" minOccurs="0"/>
-					<xs:element name="AlternativeSECCList" type="AlternativeSECCListType" minOccurs="0"/>
-					<xs:element name="VendorSpecificDataContainer" type="WPT_DataContainerType" minOccurs="0" maxOccurs="16"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--                                -->
-	<!-- WPT Charge Parameter Discovery -->
-	<!--                                -->
-	<xs:element name="WPT_ChargeParameterDiscoveryReq" type="WPT_ChargeParameterDiscoveryReqType"/>
-	<xs:complexType name="WPT_ChargeParameterDiscoveryReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:ChargeParameterDiscoveryReqType">
-				<xs:sequence>
-					<xs:element name="EVPCMaxReceivablePower" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="SDMaxGroundClearence" type="xs:unsignedShort"/>
-					<xs:element name="SDMinGroundClearence" type="xs:unsignedShort"/>
-					<xs:element name="EVPCNaturalFrequency" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVPCDeviceLocalControl" type="xs:boolean"/>
-					<xs:element name="VendorSpecificDataContainer" type="WPT_DataContainerType" minOccurs="0" maxOccurs="16"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="WPT_ChargeParameterDiscoveryRes" type="WPT_ChargeParameterDiscoveryResType"/>
-	<xs:complexType name="WPT_ChargeParameterDiscoveryResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:ChargeParameterDiscoveryResType">
-				<xs:sequence>
-					<xs:element name="PDInputPowerClass" type="WPT_PowerClassType"/>
-					<xs:element name="SDMinOutputPower" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="SDMaxOutputPower" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="SDMaxGroundClearanceSupport" type="xs:unsignedShort"/>
-					<xs:element name="SDMinGroundClearanceSupport" type="xs:unsignedShort"/>
-					<xs:element name="PDMinCoilCurrent" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="PDMaxCoilCurrent" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="SDManufacturerSpecificDataContainer" type="WPT_DataContainerType" minOccurs="0" maxOccurs="16"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--                     -->
-	<!-- WPT Alignment Check -->
-	<!--                     -->
-	<xs:element name="WPT_AlignmentCheckReq" type="WPT_AlignmentCheckReqType"/>
-	<xs:complexType name="WPT_AlignmentCheckReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GRequestType">
-				<xs:sequence>
-					<xs:element name="EVProcessing" type="v2gci_ct:processingType"/>
-					<xs:element name="TargetCoilCurrent" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVResultCode" type="WPT_EVResultType"/>
-					<xs:element name="VendorSpecificDataContainer" type="WPT_DataContainerType" minOccurs="0" maxOccurs="16"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="WPT_AlignmentCheckRes" type="WPT_AlignmentCheckResType"/>
-	<xs:complexType name="WPT_AlignmentCheckResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:V2GResponseType">
-				<xs:sequence>
-					<xs:element name="EVSEProcessing" type="v2gci_ct:processingType"/>
-					<xs:element name="PowerTransmitted" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="SupplyDeviceCurrent" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="VendorSpecificDataContainer" type="WPT_DataContainerType" minOccurs="0" maxOccurs="16"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--                 -->
-	<!-- WPT Charge Loop -->
-	<!--                 -->
-	<xs:element name="WPT_ChargeLoopReq" type="WPT_ChargeLoopReqType"/>
-	<xs:complexType name="WPT_ChargeLoopReqType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:ChargeLoopReqType">
-				<xs:sequence>
-					<xs:element name="EVPCPowerRequest" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVPCPowerOutput" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="EVPCChargeDiagnostics" type="WPT_EVPCChargeDiagnosticsType"/>
-					<xs:element name="EVPCOperatingFrequency" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="EVPCPowerControlParameter" type="WPT_EVPCPowerControlParameterType" minOccurs="0"/>
-					<xs:element name="ManufacturerSpecificDataContainer" type="WPT_DataContainerType" minOccurs="0" maxOccurs="16"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<xs:element name="WPT_ChargeLoopRes" type="WPT_ChargeLoopResType"/>
-	<xs:complexType name="WPT_ChargeLoopResType">
-		<xs:complexContent>
-			<xs:extension base="v2gci_ct:ChargeLoopResType">
-				<xs:sequence>
-					<xs:element name="EVPCPowerRequest" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="SDPowerInput" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="SPCMaxOutputPowerLimit" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="SPCMinOutputPowerLimit" type="v2gci_ct:RationalNumberType"/>
-					<xs:element name="SPCChargeDiagnostics" type="WPT_SPCChargeDiagnosticsType"/>
-					<xs:element name="SPCOperatingFrequency" type="v2gci_ct:RationalNumberType" minOccurs="0"/>
-					<xs:element name="SPCPowerControlParameter" type="WPT_SPCPowerControlParameterType" minOccurs="0"/>
-					<xs:element name="ManufacturerSpecificDataContainer" type="WPT_DataContainerType" minOccurs="0" maxOccurs="16"/>
-				</xs:sequence>
-			</xs:extension>
-		</xs:complexContent>
-	</xs:complexType>
-	<!--                        -->
-	<!-- –––––––––––––––––––––– -->
-	<!-- Message Specific Types -->
-	<!-- –––––––––––––––––––––– -->
-	<xs:simpleType name="WPT_FinePositioningMethodType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="Manual"/>
-			<xs:enumeration value="LF_TxEV"/>
-			<xs:enumeration value="LF_TxPrimaryDevice"/>
-			<xs:enumeration value="LPE"/>
-			<xs:enumeration value="Proprietary"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:complexType name="WPT_FinePositioningMethodListType">
-		<xs:sequence>
-			<xs:element name="WPT_FinePositioningMethod" type="WPT_FinePositioningMethodType" maxOccurs="8"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:simpleType name="WPT_PairingMethodType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="External confirmation"/>
-			<xs:enumeration value="LPE"/>
-			<xs:enumeration value="LF_TxEV"/>
-			<xs:enumeration value="LF_TxPrimaryDevice"/>
-			<xs:enumeration value="Optical"/>
-			<xs:enumeration value="Proprietary"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:complexType name="WPT_PairingMethodListType">
-		<xs:sequence>
-			<xs:element name="WPT_PairingMethod" type="WPT_PairingMethodType" maxOccurs="8"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:simpleType name="WPT_AlignmentCheckMethodType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="PowerCheck"/>
-			<xs:enumeration value="LPE"/>
-			<xs:enumeration value="Proprietary"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:complexType name="WPT_AlignmentCheckMethodListType">
-		<xs:sequence>
-			<xs:element name="WPT_AlignmentCheckMethod" type="WPT_AlignmentCheckMethodType" maxOccurs="8"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:simpleType name="WPT_EVPCChargeDiagnosticsType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="EVPCNoIssue"/>
-			<xs:enumeration value="EVPCTempOverheatDetected"/>
-			<xs:enumeration value="EVPCPowerTransferAnomalyDetected"/>
-			<xs:enumeration value="EVPCAnomalyDetected"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="WPT_SPCChargeDiagnosticsType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="SPCNoIssue"/>
-			<xs:enumeration value="SPCFODDetected"/>
-			<xs:enumeration value="SPCLOPDetected"/>
-			<xs:enumeration value="SPCTempOverheatDetected"/>
-			<xs:enumeration value="SPCPowerTransferAnomalyDetected"/>
-			<xs:enumeration value="SPCAnomalyDetected"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="WPT_PowerClassType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="MF-WPT1"/>
-			<xs:enumeration value="MF-WPT2"/>
-			<xs:enumeration value="MF-WPT3"/>
-			<xs:enumeration value="MF-WPT4"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:simpleType name="WPT_EVResultType">
-		<xs:restriction base="xs:string">
-			<xs:enumeration value="EVResultUnknown"/>
-			<xs:enumeration value="EVResultSuccess"/>
-			<xs:enumeration value="EVResultFailed"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<xs:complexType name="WPT_EVPCPowerControlParameterType">
-		<xs:sequence>
-			<xs:element name="EVPCCoilCurrentRequest" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="EVPCCoilCurrentInformation" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="EVPCCurrentOutputInformation" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="EVPCVoltageOutputInformation" type="v2gci_ct:RationalNumberType"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="WPT_SPCPowerControlParameterType">
-		<xs:sequence>
-			<xs:element name="SPCPrimaryDeviceCoilCurrentInformation" type="v2gci_ct:RationalNumberType"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="WPT_LF_SystemSetupDataType">
-		<xs:sequence>
-			<xs:choice>
-				<xs:element name="LF_TransmitterSetupData" type="WPT_LF_TransmitterDataType"/>
-				<xs:element name="LF_ReceiverSetupData" type="WPT_LF_ReceiverDataType"/>
-			</xs:choice>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="WPT_LF_TransmitterDataType">
-		<xs:sequence>
-			<xs:element name="NumberOfTransmitters" type="xs:unsignedByte"/>
-			<xs:element name="SignalFrequency" type="v2gci_ct:RationalNumberType"/>
-			<xs:element name="TxSpecData" type="WPT_TxRxSpecDataType" minOccurs="2" maxOccurs="255"/>
-			<xs:element name="TxPackageSpecData" type="WPT_TxRxPackageSpecDataType" minOccurs="0"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="WPT_LF_ReceiverDataType">
-		<xs:sequence>
-			<xs:element name="NumberOfReceivers" type="xs:unsignedByte"/>
-			<xs:element name="RxSpecData" type="WPT_TxRxSpecDataType" minOccurs="2" maxOccurs="255"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="WPT_TxRxSpecDataType">
-		<xs:sequence>
-			<xs:element name="TxRxIdentifier" type="v2gci_ct:numericIDType"/>
-			<xs:element name="TxRxPosition" type="WPT_CoordinateXYZType"/>
-			<xs:element name="TxRxOrientation" type="WPT_CoordinateXYZType"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="WPT_CoordinateXYZType">
-		<xs:sequence>
-			<xs:element name="Coord_X" type="xs:short"/>
-			<xs:element name="Coord_Y" type="xs:short"/>
-			<xs:element name="Coord_Z" type="xs:short"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="WPT_TxRxPackageSpecDataType">
-		<xs:sequence>
-			<xs:element name="PulseSequenceOrder" type="WPT_TxRxPulseOrderType" minOccurs="2" maxOccurs="255"/>
-			<xs:element name="PulseSeparationTime" type="xs:unsignedShort"/>
-			<xs:element name="PulseDuration" type="xs:unsignedShort"/>
-			<xs:element name="PackageSeparationTime" type="xs:unsignedShort"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="WPT_TxRxPulseOrderType">
-		<xs:sequence>
-			<xs:element name="IndexNumber" type="xs:unsignedShort"/>
-			<xs:element name="TxRxIdentifier" type="v2gci_ct:numericIDType"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="WPT_LF_TxDataListType">
-		<xs:sequence>
-			<xs:element name="WPT_LF_TxDataList" type="WPT_LF_TxDataType"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="WPT_LF_TxDataType">
-		<xs:sequence>
-			<xs:element name="TxIdentifier" type="v2gci_ct:numericIDType"/>
-			<xs:element name="EIRP" type="v2gci_ct:RationalNumberType"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="WPT_LF_RxDataListType">
-		<xs:sequence>
-			<xs:element name="WPT_LF_RxDataList" type="WPT_LF_RxDataType"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="WPT_LF_RxDataType">
-		<xs:sequence>
-			<xs:element name="RxIdentifier" type="v2gci_ct:numericIDType"/>
-			<xs:element name="RSSIData" type="WPT_LF_RxRSSIListType"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="WPT_LF_RxRSSIListType">
-		<xs:sequence>
-			<xs:element name="RSSIDataList" type="WPT_LF_RxRSSIType"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="WPT_LF_RxRSSIType">
-		<xs:sequence>
-			<xs:element name="TxIdentifier" type="v2gci_ct:numericIDType"/>
-			<xs:element name="RSSI" type="v2gci_ct:RationalNumberType"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="WPT_LF_DataPackageListType">
-		<xs:sequence>
-			<xs:element name="NumPackages" type="xs:unsignedByte"/>
-			<xs:element name="WPT_LF_DataPackage" type="WPT_LF_DataPackageType"/>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="WPT_LF_DataPackageType">
-		<xs:sequence>
-			<xs:element name="PackageIndex" type="xs:unsignedByte"/>
-			<xs:choice>
-				<xs:element name="LF_TxData" type="WPT_LF_TxDataListType"/>
-				<xs:element name="LF_RxData" type="WPT_LF_RxDataListType"/>
-			</xs:choice>
-		</xs:sequence>
-	</xs:complexType>
-	<xs:complexType name="AlternativeSECCListType">
-		<xs:sequence>
-			<xs:element name="AlternativeSECC" type="AlternativeSECCType" maxOccurs="8"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!--AlternativeSECCTYpe is connection information for an alternative SECC-->
-	<xs:complexType name="AlternativeSECCType">
-		<xs:sequence>
-			<xs:element name="SSID" type="v2gci_ct:identifierType" minOccurs="0"/>
-			<xs:element name="BSSID" type="bssidType" minOccurs="0"/>
-			<xs:element name="IPAddress" type="ipaddressType" minOccurs="0"/>
-			<xs:element name="Port" type="xs:unsignedShort" minOccurs="0"/>
-		</xs:sequence>
-	</xs:complexType>
-	<!--BSSIDType: hexa-decimal string representation of the MAC address of the AP in upper case-->
-	<xs:simpleType name="bssidType">
-		<xs:restriction base="xs:string">
-			<xs:maxLength value="12"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<!--IPAddressType: hexa-decimal string representation of the IPv6 address of the SECC 
-	including colons, in upper case-->
-	<xs:simpleType name="ipaddressType">
-		<xs:restriction base="xs:string">
-			<xs:maxLength value="39"/>
-		</xs:restriction>
-	</xs:simpleType>
-	<!-- ––––––––––––––   -->
-	<!-- Simple WPT Types -->
-	<!-- ––––––––––––––   -->
-	<xs:simpleType name="WPT_DataContainerType">
-		<xs:restriction base="xs:base64Binary">
-			<xs:maxLength value="256"/>
-		</xs:restriction>
-	</xs:simpleType>
-</xs:schema>
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_20/__init__.py /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/iso15118_20/__init__.py
new file mode 000000
index e69de29..0000000
diff --git /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/xmldsig-core-schema.xsd /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/xmldsig-core-schema.xsd
new file mode 000000
index df126b3..0000000
--- /ext/dist/libexec/everest/3rd_party/josev/iso15118/shared/schemas/xmldsig-core-schema.xsd
+++ /dev/null
@@ -1,318 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!DOCTYPE schema
-  PUBLIC "-//W3C//DTD XMLSchema 200102//EN" "http://www.w3.org/2001/XMLSchema.dtd"
- [
-   <!ATTLIST schema 
-     xmlns:ds CDATA #FIXED "http://www.w3.org/2000/09/xmldsig#">
-   <!ENTITY dsig 'http://www.w3.org/2000/09/xmldsig#'>
-   <!ENTITY % p ''>
-   <!ENTITY % s ''>
-  ]>
-
-<!-- Schema for XML Signatures
-    http://www.w3.org/2000/09/xmldsig#
-    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $
-
-    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
-    of Technology, Institut National de Recherche en Informatique et en
-    Automatique, Keio University). All Rights Reserved.
-    http://www.w3.org/Consortium/Legal/
-
-    This document is governed by the W3C Software License [1] as described
-    in the FAQ [2].
-
-    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
-    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD
--->
-
-
-<schema xmlns="http://www.w3.org/2001/XMLSchema"
-        xmlns:ds="http://www.w3.org/2000/09/xmldsig#"
-        targetNamespace="http://www.w3.org/2000/09/xmldsig#"
-        version="0.1" elementFormDefault="qualified"> 
-
-<!-- Basic Types Defined for Signatures -->
-
-<simpleType name="CryptoBinary">
-  <restriction base="base64Binary">
-  </restriction>
-</simpleType>
-
-<!-- Start Signature -->
-
-<element name="Signature" type="ds:SignatureType"/>
-<complexType name="SignatureType">
-  <sequence> 
-    <element ref="ds:SignedInfo"/> 
-    <element ref="ds:SignatureValue"/> 
-    <element ref="ds:KeyInfo" minOccurs="0"/> 
-    <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/> 
-  </sequence>  
-  <attribute name="Id" type="ID" use="optional"/>
-</complexType>
-
-  <element name="SignatureValue" type="ds:SignatureValueType"/> 
-  <complexType name="SignatureValueType">
-    <simpleContent>
-      <extension base="base64Binary">
-        <attribute name="Id" type="ID" use="optional"/>
-      </extension>
-    </simpleContent>
-  </complexType>
-
-<!-- Start SignedInfo -->
-
-<element name="SignedInfo" type="ds:SignedInfoType"/>
-<complexType name="SignedInfoType">
-  <sequence> 
-    <element ref="ds:CanonicalizationMethod"/> 
-    <element ref="ds:SignatureMethod"/> 
-    <element ref="ds:Reference" maxOccurs="unbounded"/> 
-  </sequence>  
-  <attribute name="Id" type="ID" use="optional"/> 
-</complexType>
-
-  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/> 
-  <complexType name="CanonicalizationMethodType" mixed="true">
-    <sequence>
-      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
-      <!-- (0,unbounded) elements from (1,1) namespace -->
-    </sequence>
-    <attribute name="Algorithm" type="anyURI" use="required"/> 
-  </complexType>
-
-  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
-  <complexType name="SignatureMethodType" mixed="true">
-    <sequence>
-      <element name="HMACOutputLength" minOccurs="0" type="ds:HMACOutputLengthType"/>
-      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
-      <!-- (0,unbounded) elements from (1,1) external namespace -->
-    </sequence>
-    <attribute name="Algorithm" type="anyURI" use="required"/> 
-  </complexType>
-
-<!-- Start Reference -->
-
-<element name="Reference" type="ds:ReferenceType"/>
-<complexType name="ReferenceType">
-  <sequence> 
-    <element ref="ds:Transforms" minOccurs="0"/> 
-    <element ref="ds:DigestMethod"/> 
-    <element ref="ds:DigestValue"/> 
-  </sequence>
-  <attribute name="Id" type="ID" use="optional"/> 
-  <attribute name="URI" type="anyURI" use="optional"/> 
-  <attribute name="Type" type="anyURI" use="optional"/> 
-</complexType>
-
-  <element name="Transforms" type="ds:TransformsType"/>
-  <complexType name="TransformsType">
-    <sequence>
-      <element ref="ds:Transform" maxOccurs="unbounded"/>  
-    </sequence>
-  </complexType>
-
-  <element name="Transform" type="ds:TransformType"/>
-  <complexType name="TransformType" mixed="true">
-    <choice minOccurs="0" maxOccurs="unbounded"> 
-      <any namespace="##other" processContents="lax"/>
-      <!-- (1,1) elements from (0,unbounded) namespaces -->
-      <element name="XPath" type="string"/> 
-    </choice>
-    <attribute name="Algorithm" type="anyURI" use="required"/> 
-  </complexType>
-
-<!-- End Reference -->
-
-<element name="DigestMethod" type="ds:DigestMethodType"/>
-<complexType name="DigestMethodType" mixed="true"> 
-  <sequence>
-    <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
-  </sequence>    
-  <attribute name="Algorithm" type="anyURI" use="required"/> 
-</complexType>
-
-<element name="DigestValue" type="ds:DigestValueType"/>
-<simpleType name="DigestValueType">
-  <restriction base="base64Binary"/>
-</simpleType>
-
-<!-- End SignedInfo -->
-
-<!-- Start KeyInfo -->
-
-<element name="KeyInfo" type="ds:KeyInfoType"/> 
-<complexType name="KeyInfoType" mixed="true">
-  <choice maxOccurs="unbounded">     
-    <element ref="ds:KeyName"/> 
-    <element ref="ds:KeyValue"/> 
-    <element ref="ds:RetrievalMethod"/> 
-    <element ref="ds:X509Data"/> 
-    <element ref="ds:PGPData"/> 
-    <element ref="ds:SPKIData"/>
-    <element ref="ds:MgmtData"/>
-    <any processContents="lax" namespace="##other"/>
-    <!-- (1,1) elements from (0,unbounded) namespaces -->
-  </choice>
-  <attribute name="Id" type="ID" use="optional"/> 
-</complexType>
-
-  <element name="KeyName" type="string"/>
-  <element name="MgmtData" type="string"/>
-
-  <element name="KeyValue" type="ds:KeyValueType"/> 
-  <complexType name="KeyValueType" mixed="true">
-   <choice>
-     <element ref="ds:DSAKeyValue"/>
-     <element ref="ds:RSAKeyValue"/>
-     <any namespace="##other" processContents="lax"/>
-   </choice>
-  </complexType>
-
-  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/> 
-  <complexType name="RetrievalMethodType">
-    <sequence>
-      <element ref="ds:Transforms" minOccurs="0"/> 
-    </sequence>  
-    <attribute name="URI" type="anyURI"/>
-    <attribute name="Type" type="anyURI" use="optional"/>
-  </complexType>
-
-<!-- Start X509Data -->
-
-<element name="X509Data" type="ds:X509DataType"/> 
-<complexType name="X509DataType">
-  <sequence maxOccurs="unbounded">
-    <choice>
-      <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
-      <element name="X509SKI" type="base64Binary"/>
-      <element name="X509SubjectName" type="string"/>
-      <element name="X509Certificate" type="base64Binary"/>
-      <element name="X509CRL" type="base64Binary"/>
-      <any namespace="##other" processContents="lax"/>
-    </choice>
-  </sequence>
-</complexType>
-
-<complexType name="X509IssuerSerialType"> 
-  <sequence> 
-    <element name="X509IssuerName" type="string"/> 
-    <element name="X509SerialNumber" type="integer"/> 
-  </sequence>
-</complexType>
-
-<!-- End X509Data -->
-
-<!-- Begin PGPData -->
-
-<element name="PGPData" type="ds:PGPDataType"/> 
-<complexType name="PGPDataType"> 
-  <choice>
-    <sequence>
-      <element name="PGPKeyID" type="base64Binary"/> 
-      <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/> 
-      <any namespace="##other" processContents="lax" minOccurs="0"
-       maxOccurs="unbounded"/>
-    </sequence>
-    <sequence>
-      <element name="PGPKeyPacket" type="base64Binary"/> 
-      <any namespace="##other" processContents="lax" minOccurs="0"
-       maxOccurs="unbounded"/>
-    </sequence>
-  </choice>
-</complexType>
-
-<!-- End PGPData -->
-
-<!-- Begin SPKIData -->
-
-<element name="SPKIData" type="ds:SPKIDataType"/> 
-<complexType name="SPKIDataType">
-  <sequence maxOccurs="unbounded">
-    <element name="SPKISexp" type="base64Binary"/>
-    <any namespace="##other" processContents="lax" minOccurs="0"/>
-  </sequence>
-</complexType> 
-
-<!-- End SPKIData -->
-
-<!-- End KeyInfo -->
-
-<!-- Start Object (Manifest, SignatureProperty) -->
-
-<element name="Object" type="ds:ObjectType"/> 
-<complexType name="ObjectType" mixed="true">
-  <sequence minOccurs="0" maxOccurs="unbounded">
-    <any namespace="##any" processContents="lax"/>
-  </sequence>
-  <attribute name="Id" type="ID" use="optional"/> 
-  <attribute name="MimeType" type="string" use="optional"/> <!-- add a grep facet -->
-  <attribute name="Encoding" type="anyURI" use="optional"/> 
-</complexType>
-
-<element name="Manifest" type="ds:ManifestType"/> 
-<complexType name="ManifestType">
-  <sequence>
-    <element ref="ds:Reference" maxOccurs="unbounded"/> 
-  </sequence>
-  <attribute name="Id" type="ID" use="optional"/> 
-</complexType>
-
-<element name="SignatureProperties" type="ds:SignaturePropertiesType"/> 
-<complexType name="SignaturePropertiesType">
-  <sequence>
-    <element ref="ds:SignatureProperty" maxOccurs="unbounded"/> 
-  </sequence>
-  <attribute name="Id" type="ID" use="optional"/> 
-</complexType>
-
-   <element name="SignatureProperty" type="ds:SignaturePropertyType"/> 
-   <complexType name="SignaturePropertyType" mixed="true">
-     <choice maxOccurs="unbounded">
-       <any namespace="##other" processContents="lax"/>
-       <!-- (1,1) elements from (1,unbounded) namespaces -->
-     </choice>
-     <attribute name="Target" type="anyURI" use="required"/> 
-     <attribute name="Id" type="ID" use="optional"/> 
-   </complexType>
-
-<!-- End Object (Manifest, SignatureProperty) -->
-
-<!-- Start Algorithm Parameters -->
-
-<simpleType name="HMACOutputLengthType">
-  <restriction base="integer"/>
-</simpleType>
-
-<!-- Start KeyValue Element-types -->
-
-<element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
-<complexType name="DSAKeyValueType">
-  <sequence>
-    <sequence minOccurs="0">
-      <element name="P" type="ds:CryptoBinary"/>
-      <element name="Q" type="ds:CryptoBinary"/>
-    </sequence>
-    <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
-    <element name="Y" type="ds:CryptoBinary"/>
-    <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
-    <sequence minOccurs="0">
-      <element name="Seed" type="ds:CryptoBinary"/>
-      <element name="PgenCounter" type="ds:CryptoBinary"/>
-    </sequence>
-  </sequence>
-</complexType>
-
-<element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
-<complexType name="RSAKeyValueType">
-  <sequence>
-    <element name="Modulus" type="ds:CryptoBinary"/> 
-    <element name="Exponent" type="ds:CryptoBinary"/> 
-  </sequence>
-</complexType> 
-
-<!-- End KeyValue Element-types -->
-
-<!-- End Signature -->
-
-</schema>
