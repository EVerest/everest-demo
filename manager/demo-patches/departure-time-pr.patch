diff --git /ext/source/config/config-sil-dc-d20.yaml /ext/source/config/config-sil-dc-d20.yaml
new file mode 100644
index 9e07715b..75940e82 100644
--- /ext/source/config/config-sil-dc-d20.yaml
+++ /ext/source/config/config-sil-dc-d20.yaml
@@ -65,7 +65,7 @@ active_modules:
       connector_id: 1
       auto_enable: true
       auto_exec: false
-      auto_exec_commands: sleep 3;iso_wait_slac_matched;iso_start_v2g_session DC;iso_wait_pwr_ready;iso_dc_power_on;iso_wait_for_stop 15;iso_wait_v2g_session_stopped;unplug;
+      auto_exec_commands: sleep 3;iso_wait_slac_matched;iso_start_v2g_session DC 86400 0;iso_wait_pwr_ready;iso_dc_power_on;iso_wait_for_stop 15;iso_wait_v2g_session_stopped;unplug;
       dc_target_current: 20
       dc_target_voltage: 400
     connections:
diff --git /ext/source/config/nodered/config-sil-dc-bpt-flow.json /ext/source/config/nodered/config-sil-dc-bpt-flow.json
new file mode 100644
index 89d8ad48..19e7321f 100644
--- /ext/source/config/nodered/config-sil-dc-bpt-flow.json
+++ /ext/source/config/nodered/config-sil-dc-bpt-flow.json
@@ -1789,7 +1789,7 @@
         "options": [
             {
                 "label": "DC ISO15118-2",
-                "value": "sleep 1;iso_wait_slac_matched;iso_start_v2g_session DC;iso_wait_pwr_ready;iso_dc_power_on;iso_wait_for_stop 36000#iso_stop_charging;iso_wait_v2g_session_stopped;unplug#iso_pause_charging;iso_wait_for_resume#iso_start_bcb_toggle 3;iso_wait_pwm_is_running;iso_start_v2g_session DC;iso_wait_pwr_ready;iso_dc_power_on;sleep 36000;",
+                "value": "sleep 1;iso_wait_slac_matched;iso_start_v2g_session DC 86400 0;iso_wait_pwr_ready;iso_dc_power_on;iso_wait_for_stop 36000#iso_stop_charging;iso_wait_v2g_session_stopped;unplug#iso_pause_charging;iso_wait_for_resume#iso_start_bcb_toggle 3;iso_wait_pwm_is_running;iso_start_v2g_session DC 86400 0;iso_wait_pwr_ready;iso_dc_power_on;sleep 36000;",
                 "type": "str"
             }
         ],
@@ -1859,7 +1859,7 @@
         "once": true,
         "onceDelay": "1",
         "topic": "sim_commands",
-        "payload": "sleep 1;iso_wait_slac_matched;iso_start_v2g_session DC;iso_wait_pwr_ready;iso_dc_power_on;iso_wait_for_stop 36000#iso_stop_charging;iso_wait_v2g_session_stopped;unplug#iso_pause_charging;iso_wait_for_resume#iso_start_bcb_toggle 3;iso_wait_pwm_is_running;iso_start_v2g_session DC;iso_wait_pwr_ready;iso_dc_power_on;sleep 36000;",
+        "payload": "sleep 1;iso_wait_slac_matched;iso_start_v2g_session DC 86400 0;iso_wait_pwr_ready;iso_dc_power_on;iso_wait_for_stop 36000#iso_stop_charging;iso_wait_v2g_session_stopped;unplug#iso_pause_charging;iso_wait_for_resume#iso_start_bcb_toggle 3;iso_wait_pwm_is_running;iso_start_v2g_session DC 86400 0;iso_wait_pwr_ready;iso_dc_power_on;sleep 36000;",
         "payloadType": "str",
         "x": 150,
         "y": 1180,
diff --git /ext/source/config/nodered/config-sil-dc-flow.json /ext/source/config/nodered/config-sil-dc-flow.json
new file mode 100644
index 47e39feb..f9c8fcac 100644
--- /ext/source/config/nodered/config-sil-dc-flow.json
+++ /ext/source/config/nodered/config-sil-dc-flow.json
@@ -1789,7 +1789,7 @@
         "options": [
             {
                 "label": "DC ISO15118-2",
-                "value": "sleep 1;iso_wait_slac_matched;iso_start_v2g_session DC;iso_wait_pwr_ready;iso_dc_power_on;iso_wait_for_stop 36000#iso_stop_charging;iso_wait_v2g_session_stopped;unplug#iso_pause_charging;iso_wait_for_resume#iso_start_bcb_toggle 3;iso_wait_pwm_is_running;iso_start_v2g_session DC;iso_wait_pwr_ready;iso_dc_power_on;sleep 36000;",
+                "value": "sleep 1;iso_wait_slac_matched;iso_start_v2g_session DC 86400 0;iso_wait_pwr_ready;iso_dc_power_on;iso_wait_for_stop 36000#iso_stop_charging;iso_wait_v2g_session_stopped;unplug#iso_pause_charging;iso_wait_for_resume#iso_start_bcb_toggle 3;iso_wait_pwm_is_running;iso_start_v2g_session DC 86400 0;iso_wait_pwr_ready;iso_dc_power_on;sleep 36000;",
                 "type": "str"
             }
         ],
@@ -1859,7 +1859,7 @@
         "once": true,
         "onceDelay": "1",
         "topic": "sim_commands",
-        "payload": "sleep 1;iso_wait_slac_matched;iso_start_v2g_session DC;iso_wait_pwr_ready;iso_dc_power_on;iso_wait_for_stop 36000#iso_stop_charging;iso_wait_v2g_session_stopped;unplug#iso_pause_charging;iso_wait_for_resume#iso_start_bcb_toggle 3;iso_wait_pwm_is_running;iso_start_v2g_session DC;iso_wait_pwr_ready;iso_dc_power_on;sleep 36000;",
+        "payload": "sleep 1;iso_wait_slac_matched;iso_start_v2g_session DC 86400 0;iso_wait_pwr_ready;iso_dc_power_on;iso_wait_for_stop 36000#iso_stop_charging;iso_wait_v2g_session_stopped;unplug#iso_pause_charging;iso_wait_for_resume#iso_start_bcb_toggle 3;iso_wait_pwm_is_running;iso_start_v2g_session DC 86400 0;iso_wait_pwr_ready;iso_dc_power_on;sleep 36000;",
         "payloadType": "str",
         "x": 150,
         "y": 1180,
diff --git /ext/source/config/nodered/config-sil-energy-management-flow.json /ext/source/config/nodered/config-sil-energy-management-flow.json
new file mode 100644
index 251c5bbf..65d11339 100644
--- /ext/source/config/nodered/config-sil-energy-management-flow.json
+++ /ext/source/config/nodered/config-sil-energy-management-flow.json
@@ -1792,12 +1792,12 @@
             },
             {
                 "label": "AC ISO15118-2",
-                "value": "sleep 1;iso_wait_slac_matched;iso_start_v2g_session AC;iso_wait_pwr_ready;iso_draw_power_regulated 16,3;iso_wait_for_stop 36000#iso_stop_charging;iso_wait_v2g_session_stopped;unplug",
+                "value": "sleep 1;iso_wait_slac_matched;iso_start_v2g_session AC 86400 0;iso_wait_pwr_ready;iso_draw_power_regulated 16,3;iso_wait_for_stop 36000#iso_stop_charging;iso_wait_v2g_session_stopped;unplug",
                 "type": "str"
             },
             {
                 "label": "DC ISO15118-2",
-                "value": "sleep 1;iso_wait_slac_matched;iso_start_v2g_session DC;iso_wait_for_stop 36000#iso_stop_charging;iso_wait_v2g_session_stopped;unplug",
+                "value": "sleep 1;iso_wait_slac_matched;iso_start_v2g_session DC 86400 0;iso_wait_for_stop 36000#iso_stop_charging;iso_wait_v2g_session_stopped;unplug",
                 "type": "str"
             }
         ],
diff --git /ext/source/config/nodered/config-sil-flow.json /ext/source/config/nodered/config-sil-flow.json
new file mode 100644
index 07188d46..b54025ca 100644
--- /ext/source/config/nodered/config-sil-flow.json
+++ /ext/source/config/nodered/config-sil-flow.json
@@ -1867,7 +1867,7 @@
             },
             {
                 "label": "AC ISO15118-2",
-                "value": "sleep 1;iso_wait_slac_matched;iso_start_v2g_session AC;iso_wait_pwr_ready;iso_draw_power_regulated 16,3;iso_wait_for_stop 36000#iso_stop_charging;iso_wait_v2g_session_stopped;unplug#iso_pause_charging;iso_wait_for_resume#iso_start_bcb_toggle 3;iso_wait_pwm_is_running;iso_start_v2g_session AC;iso_wait_pwr_ready;iso_draw_power_regulated 16,3;sleep 36000",
+                "value": "sleep 1;iso_wait_slac_matched;iso_start_v2g_session AC 86400 0;iso_wait_pwr_ready;iso_draw_power_regulated 16,3;iso_wait_for_stop 36000#iso_stop_charging;iso_wait_v2g_session_stopped;unplug#iso_pause_charging;iso_wait_for_resume#iso_start_bcb_toggle 3;iso_wait_pwm_is_running;iso_start_v2g_session AC 86400 0;iso_wait_pwr_ready;iso_draw_power_regulated 16,3;sleep 36000",
                 "type": "str"
             }
         ],
diff --git /ext/source/config/nodered/config-sil-two-evse-flow.json /ext/source/config/nodered/config-sil-two-evse-flow.json
new file mode 100644
index 26f8b6f9..20f000a2 100644
--- /ext/source/config/nodered/config-sil-two-evse-flow.json
+++ /ext/source/config/nodered/config-sil-two-evse-flow.json
@@ -2136,12 +2136,12 @@
             },
             {
                 "label": "AC ISO15118-2",
-                "value": "sleep 1;iso_wait_slac_matched;iso_start_v2g_session AC;iso_wait_pwr_ready;iso_draw_power_regulated 16,3;iso_wait_for_stop 36000#iso_stop_charging;iso_wait_v2g_session_stopped;unplug#iso_pause_charging;iso_wait_for_resume#iso_start_bcb_toggle 3;iso_wait_pwm_is_running;iso_start_v2g_session AC;iso_wait_pwr_ready;iso_draw_power_regulated 16,3;sleep 36000",
+                "value": "sleep 1;iso_wait_slac_matched;iso_start_v2g_session AC 86400 0;iso_wait_pwr_ready;iso_draw_power_regulated 16,3;iso_wait_for_stop 36000#iso_stop_charging;iso_wait_v2g_session_stopped;unplug#iso_pause_charging;iso_wait_for_resume#iso_start_bcb_toggle 3;iso_wait_pwm_is_running;iso_start_v2g_session AC 86400 0;iso_wait_pwr_ready;iso_draw_power_regulated 16,3;sleep 36000",
                 "type": "str"
             },
             {
                 "label": "DC ISO15118-2",
-                "value": "sleep 1;iso_wait_slac_matched;iso_start_v2g_session DC;iso_wait_pwr_ready;iso_dc_power_on;iso_wait_for_stop 36000#iso_stop_charging;iso_wait_v2g_session_stopped;unplug#iso_pause_charging;iso_wait_for_resume#iso_start_bcb_toggle 3;iso_wait_pwm_is_running;iso_start_v2g_session DC;iso_wait_pwr_ready;iso_dc_power_on;sleep 36000;",
+                "value": "sleep 1;iso_wait_slac_matched;iso_start_v2g_session DC 86400 0;iso_wait_pwr_ready;iso_dc_power_on;iso_wait_for_stop 36000#iso_stop_charging;iso_wait_v2g_session_stopped;unplug#iso_pause_charging;iso_wait_for_resume#iso_start_bcb_toggle 3;iso_wait_pwm_is_running;iso_start_v2g_session DC 86400 0;iso_wait_pwr_ready;iso_dc_power_on;sleep 36000;",
                 "type": "str"
             }
         ],
diff --git /ext/source/interfaces/ISO15118_ev.yaml /ext/source/interfaces/ISO15118_ev.yaml
new file mode 100644
index 47ee463e..2111ee68 100644
--- /ext/source/interfaces/ISO15118_ev.yaml
+++ /ext/source/interfaces/ISO15118_ev.yaml
@@ -9,6 +9,14 @@ cmds:
           by the EVCC
         type: string
         $ref: /iso15118#/EnergyTransferMode
+      DepartureTime:
+        description: >-
+          The time when the EVCC wants to leave the charging station (in seconds)
+        type: number
+      EAmount:
+        description: >-
+          The amount of energy that the EVCC wants to charge (in kWh)
+        type: number
     result:
       description: Returns true if the evcc simulation started
       type: boolean
# @@ -37,23 +45,23 @@ cmds:
#    enable_sae_j2847_v2g_v2h:
#      description: Enable the SAE J2847 2 V2H V2G
#  vars:
# -  V2G_Session_Finished:
# +  v2g_session_finished:
#      description: The v2g session between the charger and the car is finished
#      type: 'null'
# -  AC_EVPowerReady:
# +  ev_power_ready:
#      description: The car is ready for power (HLC)
#      type: boolean
# -  AC_EVSEMaxCurrent:
# +  ac_evse_max_current:
#      description: EVSE max current per phase
#      type: number
#      minimum: 0
#      maximum: 400
# -  AC_StopFromCharger:
# -    description: The charger wants to stop the charging process
# -    type: 'null'
# -  DC_PowerOn:
# +  dc_power_on:
#      description: The ev wants to close the dc contactors
#      type: 'null'
# +  stop_from_charger:
# +    description: The charger wants to stop the charging process
# +    type: 'null'
#    pause_from_charger:
#      description: The charger wants to pause the session (only d20)
#      type: 'null'
diff --git /ext/source/modules/EvManager/EvManager.hpp /ext/source/modules/EvManager/EvManager.hpp
new file mode 100644
index fa313713..4b17c5c5 100644
--- /ext/source/modules/EvManager/EvManager.hpp
+++ /ext/source/modules/EvManager/EvManager.hpp
@@ -47,6 +47,8 @@ struct Conf {
     int dc_discharge_v2g_minimal_soc;
     double max_current;
     bool three_phases;
+    int departure_time;
+    int e_amount;
     int soc;
     bool keep_cross_boot_plugin_state;
 };
diff --git /ext/source/modules/EvManager/doc.rst /ext/source/modules/EvManager/doc.rst
new file mode 100644
index 1a5e35b3..23896dc3 100644
--- /ext/source/modules/EvManager/doc.rst
+++ /ext/source/modules/EvManager/doc.rst
@@ -29,7 +29,7 @@ The module listens to the following MQTT topics:
     | Used to execute a charging session based on the semicolon separated provided command string.
     ::
 
-        "sleep 1;iso_wait_slac_matched;iso_start_v2g_session DC_extended;iso_wait_pwr_ready;sleep 36000"
+        "sleep 1;iso_wait_slac_matched;iso_start_v2g_session DC 86400 0;iso_wait_pwr_ready;sleep 36000"
 
     | (For all available commands see: `Simulator Commands`_)
 
diff --git /ext/source/modules/EvManager/main/car_simulation.cpp /ext/source/modules/EvManager/main/car_simulation.cpp
new file mode 100644
index b1a8ab75..0a411a65 100644
--- /ext/source/modules/EvManager/main/car_simulation.cpp
+++ /ext/source/modules/EvManager/main/car_simulation.cpp
@@ -268,19 +268,28 @@ bool CarSimulation::iso_dc_power_on(const CmdArguments& arguments) {
 }
 
 bool CarSimulation::iso_start_v2g_session(const CmdArguments& arguments, bool three_phases) {
+    // add departure time and eamount to arguments
+    // if have to provide but don't want to, use -1 as a flag to get default from config
     const auto& energy_mode = arguments[0];
+    const auto& departure_time = std::stoi(arguments[1]);
+    const auto& e_amount = std::stoi(arguments[2]);
+
+    EVLOG_debug << "energy mode: " << energy_mode << " departure time: " << departure_time << " eamount: " << e_amount
+                << " three phases: " << three_phases;
 
     if (energy_mode == constants::AC) {
         sim_data.energy_mode = EnergyMode::AC;
         if (three_phases == false) {
-            r_ev[0]->call_start_charging(types::iso15118::EnergyTransferMode::AC_single_phase_core);
+            r_ev[0]->call_start_charging(types::iso15118::EnergyTransferMode::AC_single_phase_core, departure_time,
+                                         e_amount);
             charge_mode = ChargeMode::AC;
         } else {
-            r_ev[0]->call_start_charging(types::iso15118::EnergyTransferMode::AC_three_phase_core);
+            r_ev[0]->call_start_charging(types::iso15118::EnergyTransferMode::AC_three_phase_core, departure_time,
+                                         e_amount);
             charge_mode = ChargeMode::ACThreePhase;
         }
     } else if (energy_mode == constants::DC) {
-        r_ev[0]->call_start_charging(types::iso15118::EnergyTransferMode::DC_extended);
+        r_ev[0]->call_start_charging(types::iso15118::EnergyTransferMode::DC_extended, departure_time, e_amount);
         sim_data.energy_mode = EnergyMode::DC;
         charge_mode = ChargeMode::DC;
     } else {
diff --git /ext/source/modules/EvManager/main/car_simulatorImpl.cpp /ext/source/modules/EvManager/main/car_simulatorImpl.cpp
new file mode 100644
index 03985513..6172724d 100644
--- /ext/source/modules/EvManager/main/car_simulatorImpl.cpp
+++ /ext/source/modules/EvManager/main/car_simulatorImpl.cpp
@@ -200,8 +200,22 @@ void car_simulatorImpl::register_all_commands() {
         command_registry->register_command("iso_dc_power_on", 0, [this](const CmdArguments& arguments) {
             return this->car_simulation->iso_dc_power_on(arguments);
         });
-        command_registry->register_command("iso_start_v2g_session", 1, [this](const CmdArguments& arguments) {
-            return this->car_simulation->iso_start_v2g_session(arguments, mod->config.three_phases);
+        command_registry->register_command("iso_start_v2g_session", 3, [this](const CmdArguments& arguments) {
+            auto departure_time = std::stoi(arguments[1]);
+            auto e_amount = std::stoi(arguments[2]);
+            EVLOG_debug << "Before ladder departure time is " << departure_time << " and eamount is " << e_amount;
+            if (departure_time < 0) {
+                EVLOG_debug << "Using default departure time from config";
+                departure_time = mod->config.departure_time;
+            }
+            if (e_amount < 0) {
+                EVLOG_debug << "Using default eamount from config";
+                e_amount = mod->config.e_amount;
+            }
+            EVLOG_debug << "After ladder departure time is " << departure_time << " and eamount is " << e_amount;
+
+            CmdArguments args{arguments[0], std::to_string(departure_time), std::to_string(e_amount)};
+            return this->car_simulation->iso_start_v2g_session(args, mod->config.three_phases);
         });
         command_registry->register_command("iso_stop_charging", 0, [this](const CmdArguments& arguments) {
             return this->car_simulation->iso_stop_charging(arguments);
diff --git /ext/source/modules/EvManager/manifest.yaml /ext/source/modules/EvManager/manifest.yaml
new file mode 100644
index 6a7ee665..85559011 100644
--- /ext/source/modules/EvManager/manifest.yaml
+++ /ext/source/modules/EvManager/manifest.yaml
@@ -80,6 +80,14 @@ config:
     description: Support three phase
     type: boolean
     default: true
+  departure_time:
+    description: Departure time in seconds after the session starts
+    type: integer
+    default: 86400
+  e_amount:
+    description: Energy amount in Wh that should be charged during the session
+    type: integer
+    default: 0
   soc:
     description: SoC at start of a simulated charging process
     type: integer
diff --git /ext/source/modules/EvseV2G/iso_server.cpp /ext/source/modules/EvseV2G/iso_server.cpp
new file mode 100644
index 0385a94d..8acfc491 100644
--- /ext/source/modules/EvseV2G/iso_server.cpp
+++ /ext/source/modules/EvseV2G/iso_server.cpp
@@ -1146,23 +1146,29 @@ static enum v2g_event handle_iso_charge_parameter_discovery(struct v2g_connectio
     res->EVSEChargeParameter_isUsed = 0;
     res->EVSEProcessing = (iso2_EVSEProcessingType)conn->ctx->evse_v2g_data.evse_processing[PHASE_PARAMETER];
 
+    int64_t pmax{0};
+
+    if (conn->ctx->is_dc_charger == false) {
+        /* Determin max current and nominal voltage */
+        /* Setup default params (before the departure time overrides) */
+        float max_current = conn->ctx->basic_config.evse_ac_current_limit;
+        int64_t voltage = conn->ctx->evse_v2g_data.evse_nominal_voltage.Value *
+                          pow(10, conn->ctx->evse_v2g_data.evse_nominal_voltage.Multiplier); /* nominal voltage */
+        pmax = max_current * voltage *
+               ((req->RequestedEnergyTransferMode == iso2_EnergyTransferModeType_AC_single_phase_core) ? 1 : 3);
+
+        dlog(DLOG_LEVEL_INFO,
+             "before adjusting for departure time, max_current %f, nom_voltage %d, pmax %d, departure_duration %d",
+             max_current, voltage, pmax, req->AC_EVChargeParameter.DepartureTime);
+    }
+
     /* Configure SA-schedules*/
     if (res->EVSEProcessing == iso2_EVSEProcessingType_Finished) {
         /* If processing is finished, configure SASchedule list */
         if (conn->ctx->evse_v2g_data.evse_sa_schedule_list_is_used == false) {
+            int64_t departure_time_duration = req->AC_EVChargeParameter.DepartureTime;
             /* If not configured, configure SA-schedule automatically for AC charging */
             if (conn->ctx->is_dc_charger == false) {
-                /* Determin max current and nominal voltage */
-                float max_current = conn->ctx->basic_config.evse_ac_current_limit;
-                int64_t nom_voltage =
-                    conn->ctx->evse_v2g_data.evse_nominal_voltage.Value *
-                    pow(10, conn->ctx->evse_v2g_data.evse_nominal_voltage.Multiplier); /* nominal voltage */
-
-                /* Calculate pmax based on max current, nominal voltage and phase count (which the car has selected
-                 * above) */
-                int64_t pmax =
-                    max_current * nom_voltage *
-                    ((req->RequestedEnergyTransferMode == iso2_EnergyTransferModeType_AC_single_phase_core) ? 1 : 3);
                 populate_physical_value(&conn->ctx->evse_v2g_data.evse_sa_schedule_list.SAScheduleTuple.array[0]
                                              .PMaxSchedule.PMaxScheduleEntry.array[0]
                                              .PMax,
@@ -1172,6 +1178,9 @@ static enum v2g_event handle_iso_charge_parameter_discovery(struct v2g_connectio
                     .PMaxSchedule.PMaxScheduleEntry.array[0]
                     .PMax = conn->ctx->evse_v2g_data.evse_maximum_power_limit;
             }
+            if (departure_time_duration == 0) {
+                departure_time_duration = SA_SCHEDULE_DURATION; // one day, per spec
+            }
             conn->ctx->evse_v2g_data.evse_sa_schedule_list.SAScheduleTuple.array[0]
                 .PMaxSchedule.PMaxScheduleEntry.array[0]
                 .RelativeTimeInterval.start = 0;
@@ -1180,7 +1189,7 @@ static enum v2g_event handle_iso_charge_parameter_discovery(struct v2g_connectio
                 .RelativeTimeInterval.duration_isUsed = 1;
             conn->ctx->evse_v2g_data.evse_sa_schedule_list.SAScheduleTuple.array[0]
                 .PMaxSchedule.PMaxScheduleEntry.array[0]
-                .RelativeTimeInterval.duration = SA_SCHEDULE_DURATION;
+                .RelativeTimeInterval.duration = departure_time_duration;
             conn->ctx->evse_v2g_data.evse_sa_schedule_list.SAScheduleTuple.array[0]
                 .PMaxSchedule.PMaxScheduleEntry.arrayLen = 1;
             conn->ctx->evse_v2g_data.evse_sa_schedule_list.SAScheduleTuple.arrayLen = 1;
@@ -1230,13 +1239,8 @@ static enum v2g_event handle_iso_charge_parameter_discovery(struct v2g_connectio
 
         /* Nominal voltage */
         res->AC_EVSEChargeParameter.EVSENominalVoltage = conn->ctx->evse_v2g_data.evse_nominal_voltage;
-        int64_t nom_voltage = conn->ctx->evse_v2g_data.evse_nominal_voltage.Value *
-                              pow(10, conn->ctx->evse_v2g_data.evse_nominal_voltage.Multiplier);
 
         /* Calculate pmax based on max current, nominal voltage and phase count (which the car has selected above) */
-        int64_t pmax = max_current * nom_voltage *
-                       ((iso2_EnergyTransferModeType_AC_single_phase_core == req->RequestedEnergyTransferMode) ? 1 : 3);
-
         /* Check the SASchedule */
         if (res->SAScheduleList_isUsed == (unsigned int)1) {
             for (uint8_t idx = 0; idx < res->SAScheduleList.SAScheduleTuple.arrayLen; idx++) {
diff --git /ext/source/tests/core_tests/startup_tests.py /ext/source/tests/core_tests/startup_tests.py
new file mode 100644
index 894ab0be..bc6ec1d9 100644
--- /ext/source/tests/core_tests/startup_tests.py
+++ /ext/source/tests/core_tests/startup_tests.py
@@ -70,9 +70,9 @@ class ProbeModule:
         cmd = {}
 
         if mode == Mode.HlcAc:
-            cmd = {'value': 'sleep 1;iso_wait_slac_matched;iso_start_v2g_session AC;iso_wait_pwr_ready;iso_draw_power_regulated 16,3;iso_wait_for_stop 20;iso_wait_v2g_session_stopped;unplug'}
+            cmd = {'value': 'sleep 1;iso_wait_slac_matched;iso_start_v2g_session AC 86400 0;iso_wait_pwr_ready;iso_draw_power_regulated 16,3;iso_wait_for_stop 20;iso_wait_v2g_session_stopped;unplug'}
         elif mode == Mode.HlcDc:
-            cmd = {'value': 'sleep 1;iso_wait_slac_matched;iso_start_v2g_session DC;iso_wait_pwr_ready;iso_wait_for_stop 20;iso_wait_v2g_session_stopped;unplug'}
+            cmd = {'value': 'sleep 1;iso_wait_slac_matched;iso_start_v2g_session DC 86400 0;iso_wait_pwr_ready;iso_wait_for_stop 20;iso_wait_v2g_session_stopped;unplug'}
         else:
             cmd = {'value': 'sleep 1;iec_wait_pwr_ready;sleep 1;draw_power_regulated 16,3;sleep 10;unplug'}
 
